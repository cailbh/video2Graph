{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Graph\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Graph\\index.vue","mtime":1705379304967},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCB7IExvYWRpbmcgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHsgb25Nb3VudGVkLCByZWYgfSBmcm9tICd2dWUnOwppbXBvcnQgZG9tdG9pbWFnZSBmcm9tICdkb20tdG8taW1hZ2UnOwppbXBvcnQgVGVzdEpzb24gZnJvbSAiQC9hc3NldHMvanNvbi9jYXNlMV8xX2Zpbi5qc29uIjsKaW1wb3J0IEltZ01hcEpzb24gZnJvbSAiQC9hc3NldHMvQ2FzZTEtU2xpZGVzL2ltZ01hcC5qc29uIjsKaW1wb3J0IFRlc3RSZWxKc29uIGZyb20gIkAvYXNzZXRzL2pzb24vY2FzZTFfMV9maW5fcmVsLmpzb24iOwppbXBvcnQgdG9vbHMgZnJvbSAiQC91dGlscy90b29scy5qcyI7CmltcG9ydCBvY3JhZCBmcm9tICJAL3V0aWxzL29jcmFkLmpzIjsKaW1wb3J0IHsgY3JlYXRlV29ya2VyIH0gZnJvbSAiQC91dGlscy90ZXNzZXJhY3QubWluLmpzIjsKaW1wb3J0IFRlc3NlcmFjdCBmcm9tICdAL3V0aWxzL3Rlc3NlcmFjdC5taW4uanMnOyAvLyBsZXQgd29ya2VyPSBjcmVhdGVXb3JrZXIoewovLyAgICAgLy8gbGFuZ1BhdGg6IkAvYXNzZXRzL2RhdGEiCi8vICAgICB3b3JrZXJQYXRoOiAnL3V0aS93b3JrZXIubWluLmpzJywKLy8gICAgIC8vIGNvcmVQYXRoOiAnLi90ZXNzZXJhY3QtY29yZS53YXNtLmpzJywKLy8gICAgIC8vIGxhbmdQYXRoOiAnRDovQ2FpbGlidWhvbmcvdmlkZW8yR3JhcGgvdmlkZW8yR3JhcGgvc3JjL3V0aWxzL3Rlc3NlcmFjdCcKLy8gICB9KTs7Ci8vIGNvbnNvbGUubG9nKHdvcmtlcikKLy8gd29ya2VyLmxvYWQoKQovLyB3b3JrZXIubG9hZExhbmd1YWdlKCdlbmcnKQovLyB3b3JrZXIuaW5pdGlhbGl6ZSgnZW5nJykKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJ2aWRlb1RpbWUiXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YTogVGVzdEpzb24sCiAgICAgIC8vdGVzdCBpbiB0aGUgb25saW5lIGRlbW8KICAgICAgZWRpdENvbmZpcm1TaG93OiBmYWxzZSwKICAgICAgc2hvd0lNRzogdHJ1ZSwKICAgICAgZ0RhdGE6ICJUZXN0SnNvbiIsCiAgICAgIGltZ01hcDogSW1nTWFwSnNvbiwKICAgICAgcmVsRGF0YTogVGVzdFJlbEpzb24sCiAgICAgIC8vdGVzdCBpbiB0aGUgb25saW5lIGRlbW8KICAgICAgc2xpZGVzVXBVcmw6IHJlcXVpcmUoIkAvYXNzZXRzL0Nhc2UxLVNsaWRlcy8wLjAwLnBuZyIpLAogICAgICBzbGlkZXNEb3duVXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9DYXNlMS1TbGlkZXMvMC4wOC5wbmciKSwKICAgICAgYXNzaXN0R1RyYW5zZm9ybVg6IC0yMDAsCiAgICAgIGFzc2lzdEdUcmFuc2Zvcm1ZOiAtMjAwLAogICAgICByZWNvZ25pemVUZXh0OiAiIiwKICAgICAgbG9hZExvYWRpbmc6IGZhbHNlLAogICAgICBkcmF3RW50aXR5TG9jYXRpb246IFtdLAogICAgICBWaWRlb0VkaXRQYW5lbFNob3c6IGZhbHNlLAogICAgICBzaG93RW50aXR5TGlzdDogW10sCiAgICAgIHN3aXRjaEw6IFtdLAogICAgICBvdmVyRW50aXR5SWQ6ICcnLAogICAgICBvdmVyVGFyZ2V0RW50aXR5SWQ6ICcnLAogICAgICBzaG93RW50aXR5UmVsSWRMaXN0OiBbXSwKICAgICAgc2hvd0VudGl0eVJlbElkT3ZlclN0YXRlOiAnJywKICAgICAgcm9vdEVudGl0eUxpc3Q6IFtdLAogICAgICByb290U3ZnOiBudWxsLAogICAgICBUaW1lQXhpc1N2ZzogbnVsbCwKICAgICAgZ3JvdXBzU3ZnOiBudWxsLAogICAgICBhcmNHOiBudWxsLAogICAgICBjdXJFbnRJZDogJycsCiAgICAgIGluc2VydEVudElkOiAnJywKICAgICAgZWRpdERpdlNob3c6IGZhbHNlLAogICAgICBtaW5ESW1wb3J0YW5jZTogMCwKICAgICAgbWF4REltcG9ydGFuY2U6IDAsCiAgICAgIG1pbkRSZWxldmFuY2U6IDAsCiAgICAgIG1heERSZWxldmFuY2U6IDAsCiAgICAgIG1heEREdXJhdGlvbjogMCwKICAgICAgdGltZUF4aXNYOiAwLAogICAgICB0aW1lQXhpc1c6IDIwMCwKICAgICAgdGltZUF4aXNEcm9wRmxhZzogMCwKICAgICAgdGltZUF4aXNEb3duWDogMCwKICAgICAgdGltZUF4aXNEb3duVzogNjAsCiAgICAgIG1heFRvdGFsRHVyYXRpb246IDAsCiAgICAgIHZpZGVvRHVyYXRpb246IDY2OCwKICAgICAgdG90YWxEdXJhdGlvbjogMTAwMCwKICAgICAgaW1wb3J0YW5jZUNvbG9yX2xpbmVhcjogbnVsbCwKICAgICAgaW1wb3J0YW5jZUNvbXB1dGVfY29sb3I6IG51bGwsCiAgICAgIHJlbGV2YW5jZVNjYWxlX2xpbmVhcjogbnVsbCwKICAgICAgdG90YWxEdXJhdGlvblNjYWxlX2xpbmVhcjogbnVsbCwKICAgICAgc3VtVG90YWxEdXJhdGlvbjogMCwKICAgICAgLy8gaW1wb3J0YW5jZU1pbkNvbG9yOiAicmdiKDEsIDE2NCwgMTgzKSIsCiAgICAgIC8vIGltcG9ydGFuY2VNYXhDb2xvcjogInJnYigxMDYsIDUyLCAxMjcpIiwKICAgICAgem9vbUluVXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvem9vbUluLnBuZyIpLAogICAgICB6b29tT3V0VXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvem9vbU91dC5wbmciKSwKICAgICAgZWRpdFRvb2xVcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9lZGl0LnBuZyIpLAogICAgICB0aXBVcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy90aXAucG5nIiksCiAgICAgIGVkaXRBZGRVcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9lZGl0X0FkZC5wbmciKSwKICAgICAgZWRpdEFkZE5Vcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9lZGl0X0FkZE4ucG5nIiksCiAgICAgIGVkaXREZWxVcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9lZGl0X0RlbGV0ZS5wbmciKSwKICAgICAgZWRpdENvbmZpcm1Vcmw6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy/lt7LnnIsucG5nIiksCiAgICAgIGxheW91dFNob3c6IDIsCiAgICAgIGdyYXBoR1RyYW5zZm9ybUs6IDEsCiAgICAgIGdyYXBoR1RyYW5zZm9ybVg6IDEwLAogICAgICBncmFwaEdUcmFuc2Zvcm1ZOiAxMDAsCiAgICAgIGdyYXBoR01vdmVYOiAxMCwKICAgICAgZ3JhcGhTdmdTY2FsZTogMSwKICAgICAgbW92ZVRpbWVyOiBudWxsLAogICAgICBtb3ZlRmxhZzogZmFsc2UsCiAgICAgIGltcG9ydGFuY2VNaW5Db2xvcjogInJnYigyMDMsIDIzMCwgMjA5KSIsCiAgICAgIGltcG9ydGFuY2VNYXhDb2xvcjogInJnYigyMiwgMTQ0LCAyMDcpIiwKICAgICAgc3RlcFg6IDE1MCwKICAgICAgc3RlcFk6IDEwMCwKICAgICAgYnRuUmVsOiBmYWxzZSwKICAgICAgYnRuU2ltOiBmYWxzZSwKICAgICAgYnRuQXNvOiBmYWxzZSwKICAgICAgYnRuRWRpOiBmYWxzZSwKICAgICAgY2lyY2xlSW50ZXJ2YWw6IDU1LAogICAgICB3aWR0aDogMCwKICAgICAgaGVpZ2h0OiAwLAogICAgICBjdXJUb29sU3RhdGU6ICd1bkVkaXQnLAogICAgICBtYXJnaW46IHsKICAgICAgICB0b3A6IDgwLAogICAgICAgIHJpZ2h0OiAyMCwKICAgICAgICBib3R0b206IDAsCiAgICAgICAgbGVmdDogMjAKICAgICAgfSwKICAgICAgY29sb3I6IFsicmdiKDI1NSw2MCw2MCkiLCAicmdiKDAsIDE3OCwgMTcxKSIsIC8vICJyZ2IoMjU1LDgzLDI1NSkiLAogICAgICAicmdiKDIzNSwxMzUsMTYyKSIsICJyZ2IoMjU1LDE3OCwxMDEpIiwgInJnYig2MywxNTEsMTM0KSIsICJyZ2IoODMsMjU1LDI1NSkiLCAicmdiKDAsMTIyLDI0NCkiLCAicmdiKDE2OCwxNjgsMjU1KSIsICJyZ2IoMjAwLDIwMCwyMDApIl0sCiAgICAgIG1jb2xvcjogWyJyZ2IoMTI1LCA2NiwgMjA2KSIsICJyZ2IoMjQ4LCAxMzQsIDEyNCkiLCAicmdiKDUwLCAxOTgsIDE5MSkiLCAicmdiKDEzNSwgMTI2LCAyNTMpIiwgInJnYigxOTgsIDEyMSwgMTIzKSIsICJyZ2IoMjUyLCAxNzcsIDQ5KSIsICJyZ2IoMTEyLCAyMDIsIDIyOSkiXSwKICAgICAgLy8gbWNvbG9yOiBbCiAgICAgIC8vICAgInJnYig5MSwgMTA3LCAyNTUpIiwKICAgICAgLy8gICAicmdiKDAsIDE3OCwgMTcxKSIsCiAgICAgIC8vICAgLy8gInJnYig2LCAyMTQsIDE2MCkiLAogICAgICAvLyAgICJyZ2IoMjU1LCAxMjAsIDkwKSIsCiAgICAgIC8vICAgInJnYigxMjUsIDk4LCAyMTEpIiwKICAgICAgLy8gICAicmdiKDI1NSwgMTEzLCAyMTIpIiwKICAgICAgLy8gICAicmdiKDExMiwgMjE0LCAyNTUpIiwKICAgICAgLy8gICAicmdiKDI1NSwgMTU5LCAyOCkiLAogICAgICAvLyAgICJyZ2IoMjU1LCA3NywgMTA5KSIsCiAgICAgIC8vIF0sCiAgICAgIG1EYXJrY29sb3I6IFsicmdiKDk1LCAzOSwgMTc5KSIsICJyZ2IoMjIxLCA4MywgNzIpIiwgInJnYigwLCAxNTgsIDE0OCkiLCAicmdiKDkzLCA4OCwgMjAyKSIsICJyZ2IoMTgwLCA3MiwgNzkpIiwgInJnYigyMDIsIDEzNCwgMzIpIiwgInJnYig0NiwgMTc0LCAyMDIpIl0sCiAgICAgIG1MaWdudGNvbG9yOiBbIiNmZjljOWMiLCAiI2NjODhiMCIsICIjZmZhOGZmIiwgIiNlM2IwOTciLCAiI2Y0YzNkMCIsICIjZjRmNGQwIiwgIiNmZmQ4YjEiLCAiIzllY2FjMiIsICIjYThjY2ZmIiwgIiM5N2UzYmEiLCAiIzZmOGJlMCIsICJyZ2IoMCwxMjIsMjQ0KSIsICIjYjZhMmY3IiwgInJnYigxNjgsMTY4LDI1NSkiLCAicmdiKDIwMCwyMDAsMjAwKSJdLAogICAgICBlZGl0VmlkZW9KYWdlOiBmYWxzZSwKICAgICAgZWRpdFZpZGVvU1A6IFtdLAogICAgICBlZGl0VmlkZW9FUDogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgdHlwZTogZnVuY3Rpb24gdHlwZSh2YWwpIHt9LAogICAgc3dpdGNoTDogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkgewogICAgICAgIHRoaXMuYnRuUmVsID0gdmFsWzBdOwogICAgICAgIHRoaXMuYnRuU2ltID0gdmFsWzFdOwogICAgICAgIHRoaXMuYnRuQXNvID0gdmFsWzJdOwogICAgICAgIHRoaXMuYnRuRWRpID0gdmFsWzNdOwogICAgICAgIHRoaXMudXBkYXRhUmVsKCk7CiAgICAgIH0KICAgIH0sCiAgICByZWNvZ25pemVUZXh0OiBmdW5jdGlvbiByZWNvZ25pemVUZXh0KHZhbCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgicmVjb2duaXplVGV4dCIsIFsxLCB2YWxdKTsKICAgIH0sCiAgICB0aW1lQXhpc1g6IGZ1bmN0aW9uIHRpbWVBeGlzWCh2YWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIF90aGlzLnVwZGF0YVRpbWVBeGlzRHVyKF90aGlzLlRpbWVBeGlzU3ZnLCBfdGhpcy50aW1lQXhpc1gsIF90aGlzLnRpbWVBeGlzVyk7CiAgICB9LAogICAgY3VyRW50SWQ6IGZ1bmN0aW9uIGN1ckVudElkKHZhbCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX3RoaXMub3ZlckVudGl0eUlkID0gdmFsOwogICAgICBjb25zb2xlLmxvZyh2YWwpOwoKICAgICAgX3RoaXMuJGJ1cy4kZW1pdCgic2VsZWN0RSIsIHZhbCk7CgogICAgICB2YXIgZW50aXR5TG9jYXRpb25EYXRhID0gX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uOwogICAgICB2YXIgcmVsRGF0YSA9IF90aGlzLnJlbERhdGE7CiAgICAgIHZhciBzaG93SmFnZURhdGEgPSBfdGhpcy5zaG93RW50aXR5TGlzdDsKICAgICAgdmFyIGJhc2ljUmVsID0gcmVsRGF0YVsnYmFzaWNSZWwnXTsKCiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKHIpIHsKICAgICAgICB2YXIgc29yY2VJZCA9IGJhc2ljUmVsW3JdWzBdOwogICAgICAgIHZhciB0YXJnZXRJZCA9IGJhc2ljUmVsW3JdWzFdOwogICAgICAgIHZhciBzb3JjZUphZ2UgPSBzaG93SmFnZURhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29yY2VJZDsKICAgICAgICB9KVsnc2hvdyddOwogICAgICAgIHZhciB0YXJnZXRKYWdlID0gc2hvd0phZ2VEYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydpZCddID09IHRhcmdldElkOwogICAgICAgIH0pWydzaG93J107CgogICAgICAgIGlmIChzb3JjZUphZ2UgJiYgdGFyZ2V0SmFnZSkgewogICAgICAgICAgdmFyIHRybklkID0gJy0xJzsKCiAgICAgICAgICBpZiAoc29yY2VJZCA9PSBwYXJzZUludCh2YWwpKSB7CiAgICAgICAgICAgIHRybklkID0gdGFyZ2V0SWQ7CiAgICAgICAgICB9IGVsc2UgaWYgKHRhcmdldElkID09IHBhcnNlSW50KHZhbCkpIHsKICAgICAgICAgICAgdHJuSWQgPSBzb3JjZUlkOwogICAgICAgICAgfSAvLyBpZiAodHJuSWQgIT0gJy0xJykgewogICAgICAgICAgLy8gICBsZXQgY3VyRW50ID0gZW50aXR5TG9jYXRpb25EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHBhcnNlSW50KGRbJ2lkJ10pID09IHRybklkIH0pOwogICAgICAgICAgLy8gICBfdGhpcy5hc3Npc3RHVHJhbnNmb3JtWCA9IHBhcnNlSW50KC1jdXJFbnRbJ3gnXSkgKyBwYXJzZUZsb2F0KGN1ckVudFsnciddKSArIDE1MDsKICAgICAgICAgIC8vICAgX3RoaXMuYXNzaXN0R1RyYW5zZm9ybVkgPSBwYXJzZUludCgtY3VyRW50Wyd5J10pICsgcGFyc2VGbG9hdChjdXJFbnRbJ3InXSkgKyAzMDA7CiAgICAgICAgICAvLyAgIF90aGlzLnVwZGF0YUFzc2lzdEdyYXBoUGFuZWwoKTsKICAgICAgICAgIC8vIH0KCiAgICAgICAgfQogICAgICB9OwoKICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCBiYXNpY1JlbC5sZW5ndGg7IHIrKykgewogICAgICAgIF9sb29wKHIpOwogICAgICB9CgogICAgICA7CiAgICAgIHZhciBzaW1pbGFyaXR5UmVsID0gcmVsRGF0YVsnc2ltaWxhcml0eVJlbCddOwoKICAgICAgdmFyIF9sb29wMiA9IGZ1bmN0aW9uIF9sb29wMihfcikgewogICAgICAgIHZhciBzb3JjZUlkID0gc2ltaWxhcml0eVJlbFtfcl1bMF07CiAgICAgICAgdmFyIHRhcmdldElkID0gc2ltaWxhcml0eVJlbFtfcl1bMV07CiAgICAgICAgdmFyIHNvcmNlSmFnZSA9IHNob3dKYWdlRGF0YS5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSBzb3JjZUlkOwogICAgICAgIH0pWydzaG93J107CiAgICAgICAgdmFyIHRhcmdldEphZ2UgPSBzaG93SmFnZURhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gdGFyZ2V0SWQ7CiAgICAgICAgfSlbJ3Nob3cnXTsKCiAgICAgICAgaWYgKHNvcmNlSmFnZSAmJiB0YXJnZXRKYWdlKSB7CiAgICAgICAgICB2YXIgdHJuSWQgPSAnLTEnOwoKICAgICAgICAgIGlmIChzb3JjZUlkID09IHBhcnNlSW50KHZhbCkpIHsKICAgICAgICAgICAgdHJuSWQgPSB0YXJnZXRJZDsKICAgICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0SWQgPT0gcGFyc2VJbnQodmFsKSkgewogICAgICAgICAgICB0cm5JZCA9IHNvcmNlSWQ7CiAgICAgICAgICB9IC8vIGlmICh0cm5JZCAhPSAnLTEnKSB7CiAgICAgICAgICAvLyAgIGxldCBjdXJFbnQgPSBlbnRpdHlMb2NhdGlvbkRhdGEuZmluZChmdW5jdGlvbiAoZCkgeyByZXR1cm4gcGFyc2VJbnQoZFsnaWQnXSkgPT0gdHJuSWQgfSk7CiAgICAgICAgICAvLyAgIF90aGlzLmFzc2lzdEdUcmFuc2Zvcm1YID0gcGFyc2VJbnQoLWN1ckVudFsneCddKSArIHBhcnNlRmxvYXQoY3VyRW50WydyJ10pICsgMTUwOwogICAgICAgICAgLy8gICBfdGhpcy5hc3Npc3RHVHJhbnNmb3JtWSA9IHBhcnNlSW50KC1jdXJFbnRbJ3knXSkgKyBwYXJzZUZsb2F0KGN1ckVudFsnciddKSArIDMwMDsKICAgICAgICAgIC8vICAgX3RoaXMudXBkYXRhQXNzaXN0R3JhcGhQYW5lbCgpOwogICAgICAgICAgLy8gfQoKICAgICAgICB9CiAgICAgIH07CgogICAgICBmb3IgKHZhciBfciA9IDA7IF9yIDwgc2ltaWxhcml0eVJlbC5sZW5ndGg7IF9yKyspIHsKICAgICAgICBfbG9vcDIoX3IpOwogICAgICB9CgogICAgICA7CiAgICB9LAogICAgb3ZlckVudGl0eUlkOiBmdW5jdGlvbiBvdmVyRW50aXR5SWQodmFsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJvdmVyRW50aXR5SWQiLCB2YWwpOwoKICAgICAgdmFyIHJlbExpc3QgPSBbXTsKICAgICAgdmFyIHJlbFJvb3RMaXN0ID0gW107CiAgICAgIHZhciByZWxEYXRhID0gX3RoaXMucmVsRGF0YTsKICAgICAgdmFyIG9EYXRhID0gX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uOwogICAgICB2YXIgYmFzaWNSZWwgPSByZWxEYXRhWydiYXNpY1JlbCddOwogICAgICBkMy5zZWxlY3RBbGwoJy50aW1lVGV4dCcpLmF0dHIoIm9wYWNpdHkiLCAwKTsKICAgICAgZDMuc2VsZWN0QWxsKCcudGltZUF4aXNFbnQnKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAwKS5hdHRyKCJvcGFjaXR5IiwgMC40KS5hdHRyKCJzdHJva2UiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGNpZCA9IGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJpZCIpLnNwbGl0KCJfIilbMV07CiAgICAgICAgdmFyIG5kID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gY2lkOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBuZFsnY29sb3JEJ107CiAgICAgIH0pOwoKICAgICAgdmFyIF9sb29wMyA9IGZ1bmN0aW9uIF9sb29wMyhyZSkgewogICAgICAgIHZhciBzb3JjZUlkID0gYmFzaWNSZWxbcmVdWzBdOwogICAgICAgIHZhciB0YXJnZXRJZCA9IGJhc2ljUmVsW3JlXVsxXTsKICAgICAgICB2YXIgY05vZGUgPSAnJzsKCiAgICAgICAgaWYgKHNvcmNlSWQgPT0gdmFsKSB7CiAgICAgICAgICBjTm9kZSA9IG9EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gdGFyZ2V0SWQ7CiAgICAgICAgICB9KTsKICAgICAgICAgIHJlbExpc3QucHVzaCh0YXJnZXRJZCk7CiAgICAgICAgICByZWxSb290TGlzdC5wdXNoKGNOb2RlWydyb290SW5kZXgnXSk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGFyZ2V0SWQgPT0gdmFsKSB7CiAgICAgICAgICBjTm9kZSA9IG9EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29yY2VJZDsKICAgICAgICAgIH0pOwogICAgICAgICAgcmVsTGlzdC5wdXNoKHNvcmNlSWQpOwogICAgICAgICAgcmVsUm9vdExpc3QucHVzaChjTm9kZVsncm9vdEluZGV4J10pOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIGZvciAodmFyIHJlID0gMDsgcmUgPCBiYXNpY1JlbC5sZW5ndGg7IHJlKyspIHsKICAgICAgICBfbG9vcDMocmUpOwogICAgICB9CgogICAgICA7CiAgICAgIHJlbExpc3QuZm9yRWFjaChmdW5jdGlvbiAoc2VsZiwgaW5keCwgYXJyKSB7CiAgICAgICAgZDMuc2VsZWN0KCIjdGltZUF4aXNFbnRfIi5jb25jYXQoc2VsZikpLmF0dHIoInN0cm9rZSIsICd3aGl0ZScpLmF0dHIoInN0cm9rZS13aWR0aCIsIDIpLmF0dHIoIm9wYWNpdHkiLCAxKTsKICAgICAgICBkMy5zZWxlY3QoIiN0aW1lVGV4dF8iLmNvbmNhdChzZWxmLCAiXzAiKSkuYXR0cigib3BhY2l0eSIsIDEpOwogICAgICB9KTsKICAgICAgZDMuc2VsZWN0KCIjdGltZUF4aXNFbnRfIi5jb25jYXQodmFsKSkuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikuYXR0cigib3BhY2l0eSIsIDEpOwogICAgICBkMy5zZWxlY3QoIiN0aW1lVGV4dF8iLmNvbmNhdCh2YWwsICJfMCIpKS5hdHRyKCJvcGFjaXR5IiwgMSk7CiAgICB9LAogICAgc2hvd0VudGl0eVJlbElkTGlzdDogZnVuY3Rpb24gc2hvd0VudGl0eVJlbElkTGlzdCh2YWwpIHsKICAgICAgdGhpcy51cGRhdGFSZWwoKTsKICAgIH0sCiAgICBncm91cHNTdmc6IHsKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLnVwZGF0YUFzc2lzdEdyYXBoUGFuZWwoKTsKICAgICAgfQogICAgfSwKICAgIGdEYXRhOiBmdW5jdGlvbiBnRGF0YSh2YWwpIHt9LAogICAgbGF5b3V0U2hvdzogZnVuY3Rpb24gbGF5b3V0U2hvdyh2YWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzaG93RW50aXR5TGlzdCA9IHRvb2xzLmRlZXBDbG9uZShfdGhpcy5kYXRhKTsKCiAgICAgIGZvciAodmFyIGUgaW4gc2hvd0VudGl0eUxpc3QpIHsKICAgICAgICBpZiAocGFyc2VJbnQoc2hvd0VudGl0eUxpc3RbZV1bJ2xheW91dCddKSA8IHBhcnNlSW50KHZhbCkpIHNob3dFbnRpdHlMaXN0W2VdWydzaG93J10gPSB0cnVlO2Vsc2UgewogICAgICAgICAgc2hvd0VudGl0eUxpc3RbZV1bJ3Nob3cnXSA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgX3RoaXMuc2hvd0VudGl0eUxpc3QgPSBzaG93RW50aXR5TGlzdDsKCiAgICAgIF90aGlzLnVwZGF0YUdyYXBoKCk7CiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24gZGF0YSh2YWwpIHt9LAogICAgdmlkZW9UaW1lOiBmdW5jdGlvbiB2aWRlb1RpbWUodmFsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaW1nTWFwID0gX3RoaXMuaW1nTWFwOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbWdNYXAubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgY29uc29sZS5sb2coaSwgaW1nTWFwW2kgKyAxXSk7CiAgICAgICAgdmFyIHRpbWVTdGFydCA9IHRvb2xzLnRpbWUyc2Vjb25kczIoaW1nTWFwW2ldKTsKICAgICAgICB2YXIgdGltZUVuZCA9IHRvb2xzLnRpbWUyc2Vjb25kczIoaW1nTWFwW2kgKyAxXSk7CgogICAgICAgIGlmICh2YWwgPiB0aW1lU3RhcnQgJiYgdmFsIDwgdGltZUVuZCkgewogICAgICAgICAgdmFyIHUgPSBpIC0gMTsKICAgICAgICAgIHZhciBkID0gaSArIDE7CgogICAgICAgICAgaWYgKHUgPCAwKSB7CiAgICAgICAgICAgIHUgPSAwOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChkID4gaW1nTWFwLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgZCA9IGltZ01hcC5sZW5ndGggLSAxOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLnNsaWRlc1VwVXJsID0gcmVxdWlyZSgiQC9hc3NldHMvQ2FzZTEtU2xpZGVzLyIuY29uY2F0KGltZ01hcFt1XSwgIi5wbmciKSk7CiAgICAgICAgICBfdGhpcy5zbGlkZXNEb3duVXJsID0gcmVxdWlyZSgiQC9hc3NldHMvQ2FzZTEtU2xpZGVzLyIuY29uY2F0KGltZ01hcFtkXSwgIi5wbmciKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgZW50aXR5TG9jYXRpb25EYXRhID0gX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uOwoKICAgICAgZm9yICh2YXIgZSA9IDA7IGUgPCBlbnRpdHlMb2NhdGlvbkRhdGEubGVuZ3RoOyBlKyspIHsKICAgICAgICB2YXIgY3VyRCA9IGVudGl0eUxvY2F0aW9uRGF0YVtlXTsKCiAgICAgICAgdmFyIF90aW1lU3RhcnQgPSB0b29scy50aW1lMnNlY29uZHMoZW50aXR5TG9jYXRpb25EYXRhW2VdWyd0aW1lJ11bMF0pOwoKICAgICAgICB2YXIgX3RpbWVFbmQgPSB0b29scy50aW1lMnNlY29uZHMoZW50aXR5TG9jYXRpb25EYXRhW2VdWyd0aW1lJ11bMV0pOwoKICAgICAgICBpZiAodmFsID4gX3RpbWVTdGFydCAmJiB2YWwgPCBfdGltZUVuZCkgewogICAgICAgICAgdmFyIGVudFggPSBlbnRpdHlMb2NhdGlvbkRhdGFbZV1bJ3gnXTsKICAgICAgICAgIHZhciBlbnRZID0gZW50aXR5TG9jYXRpb25EYXRhW2VdWyd5J107CiAgICAgICAgICB2YXIgZW50UiA9IGVudGl0eUxvY2F0aW9uRGF0YVtlXVsnciddOwogICAgICAgICAgdmFyIG1vdmVMaW5lYXIgPSBkMy5zY2FsZUxpbmVhcihbX3RpbWVTdGFydCwgX3RpbWVFbmRdLCBbZW50WCAtIGVudFIsIGVudFggKyBlbnRSXSk7CiAgICAgICAgICBfdGhpcy5ncmFwaEdUcmFuc2Zvcm1YID0gLW1vdmVMaW5lYXIodmFsKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBncmFwaEdNb3ZlWDogZnVuY3Rpb24gZ3JhcGhHTW92ZVgodmFsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbjsKICAgICAgdmFyIHN0amcgPSAwOwogICAgICB2YXIgZW5qZyA9IDA7CiAgICAgIHZhciBzbm9kZSA9ICcnOwogICAgICB2YXIgZW5vZGUgPSAnJzsKICAgICAgdmFyIHdpZHRoID0gMTU5MDsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChzZWxmLCBpbmR4LCBhcnIpIHsKICAgICAgICB2YXIgZW50eCA9IHNlbGZbJ3gnXSAqIF90aGlzLmdyYXBoR1RyYW5zZm9ybUs7CiAgICAgICAgdmFyIHRyYW5zZm9ybVggPSBlbnR4ICsgdmFsOwoKICAgICAgICBpZiAodHJhbnNmb3JtWCA+IDAgJiYgdHJhbnNmb3JtWCA8IHdpZHRoKSB7CiAgICAgICAgICBzdGpnKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChzdGpnID4gMCAmJiBlbmpnID09IDApIHsKICAgICAgICAgICAgZW5vZGUgPSBzZWxmOwogICAgICAgICAgICBlbmpnID0gMTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzdGpnID09IDEpIHsKICAgICAgICAgIHNub2RlID0gc2VsZjsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgZXcgPSBlbm9kZVsndGltZVcnXTsKCiAgICAgIGlmIChzbm9kZSA9PSAnJykgewogICAgICAgIF90aGlzLnRpbWVBeGlzWCA9IDA7CiAgICAgIH0gZWxzZSBfdGhpcy50aW1lQXhpc1ggPSBzbm9kZVsndGltZVgnXTsKCiAgICAgIF90aGlzLnRpbWVBeGlzVyA9IGVub2RlWyd0aW1lWCddIC0gc25vZGVbJ3RpbWVYJ10gKyBlbm9kZVsndGltZVcnXTsKCiAgICAgIGlmIChldyA9PSB1bmRlZmluZWQpIHsKICAgICAgICBfdGhpcy50aW1lQXhpc1cgPSB3aWR0aCAtIHNub2RlWyd0aW1lWCddOwogICAgICB9CiAgICB9LAogICAgZ3JhcGhHVHJhbnNmb3JtWDogZnVuY3Rpb24gZ3JhcGhHVHJhbnNmb3JtWCh2YWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBncm91cHMgPSBfdGhpcy5ncm91cHNTdmc7CiAgICAgIF90aGlzLmdyYXBoR01vdmVYID0gX3RoaXMuZ3JhcGhHVHJhbnNmb3JtWDsKICAgICAgdmFyIGdyYXBoR1RyYW5zZm9ybVggPSBfdGhpcy5ncmFwaEdUcmFuc2Zvcm1YOwogICAgICB2YXIgZ3JhcGhHVHJhbnNmb3JtWSA9IF90aGlzLmdyYXBoR1RyYW5zZm9ybVk7CiAgICAgIHZhciBncmFwaEdUcmFuc2Zvcm1LID0gX3RoaXMuZ3JhcGhHVHJhbnNmb3JtSzsKICAgICAgZ3JvdXBzLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoIiArIGdyYXBoR1RyYW5zZm9ybVggKyAnLCcgKyBncmFwaEdUcmFuc2Zvcm1ZICsgIikgc2NhbGUoIiArIGdyYXBoR1RyYW5zZm9ybUsgKyAiKSIpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkTm9kZTogZnVuY3Rpb24gYWRkTm9kZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIF90aGlzLmVkaXRDb25maXJtU2hvdyA9IHRydWUsIF90aGlzLlZpZGVvRWRpdFBhbmVsU2hvdyA9IHRydWUsIF90aGlzLmVkaXREaXZTaG93ID0gZmFsc2U7CgogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJyZWNvZ25pemVUZXh0IiwgWzEsICJQbGVhc2Ugc2VsZWN0IG9uIHRoZSB2aWRlbyJdKTsKCiAgICAgIGQzLnNlbGVjdCgiI1ZpZGVvRWRpdFBhbmVsIikuc2VsZWN0KCJzdmciKS5yZW1vdmUoKTsKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiI1ZpZGVvRWRpdFBhbmVsIikuYXBwZW5kKCJzdmciKS5hdHRyKCJ3aWR0aCIsICI5NDYiKS5hdHRyKCJoZWlnaHQiLCAiNTUzIik7CiAgICAgIHN2Zy5vbigibW91c2Vkb3duIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBfdGhpcy5lZGl0VmlkZW9TUCA9IFtkLmxheWVyWCwgZC5sYXllclldOwogICAgICAgIF90aGlzLmVkaXRWaWRlb0phZ2UgPSB0cnVlOwogICAgICB9KS5vbigibW91c2Vtb3ZlIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBpZiAoX3RoaXMuZWRpdFZpZGVvSmFnZSkgewogICAgICAgICAgdmFyIHNQID0gX3RoaXMuZWRpdFZpZGVvU1A7CiAgICAgICAgICBfdGhpcy5lZGl0VmlkZW9FUCA9IFtkLmxheWVyWCwgZC5sYXllclldOwogICAgICAgICAgdmFyIGVQID0gW2QubGF5ZXJYLCBkLmxheWVyWV07CiAgICAgICAgICB2YXIgZVggPSBzUFswXSA+IGVQWzBdID8gc1BbMF0gOiBlUFswXTsKICAgICAgICAgIHZhciBlWSA9IHNQWzFdID4gZVBbMV0gPyBzUFsxXSA6IGVQWzFdOwogICAgICAgICAgdmFyIHNYID0gc1BbMF0gPCBlUFswXSA/IHNQWzBdIDogZVBbMF07CiAgICAgICAgICB2YXIgc1kgPSBzUFsxXSA8IGVQWzFdID8gc1BbMV0gOiBlUFsxXTsKCiAgICAgICAgICBfdGhpcy5kcmF3UmVjdChzdmcsIHNYLCBzWSwgTWF0aC5hYnMoZVggLSBzWCksIE1hdGguYWJzKGVZIC0gc1kpLCAwLCAwLCAicmdiYSgwLDAsMCwwKSIsIDEsICJyZWQiLCAidmlkZW9SZWN0Iik7CiAgICAgICAgfQogICAgICB9KS5vbigibW91c2V1cCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgX3RoaXMuZWRpdFZpZGVvSmFnZSA9IGZhbHNlOwogICAgICAgIHZhciBzUCA9IF90aGlzLmVkaXRWaWRlb1NQOwogICAgICAgIHZhciBlUCA9IFtkLmxheWVyWCwgZC5sYXllclldOwogICAgICAgIDsKICAgICAgICB2YXIgZVggPSBzUFswXSA+IGVQWzBdID8gc1BbMF0gOiBlUFswXTsKICAgICAgICB2YXIgZVkgPSBzUFsxXSA+IGVQWzFdID8gc1BbMV0gOiBlUFsxXTsKICAgICAgICB2YXIgc1ggPSBzUFswXSA8IGVQWzBdID8gc1BbMF0gOiBlUFswXTsKICAgICAgICB2YXIgc1kgPSBzUFsxXSA8IGVQWzFdID8gc1BbMV0gOiBlUFsxXTsKICAgICAgICB2YXIgcGxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBsYXlWaWRlbyIpOyAvL+iOt+WPlnZpZGVv55qERG9t6IqC54K5CgogICAgICAgIHBsYXllci5zZXRBdHRyaWJ1dGUoImNyb3NzT3JpZ2luIiwgImFub255bW91cyIpOyAvL+a3u+WKoHNyb3NzT3JpZ2lu5bGe5oCn77yM6Kej5Yaz6Leo5Z+f6Zeu6aKYCgogICAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTsKICAgICAgICBjYW52YXMud2lkdGggPSBwbGF5ZXIuY2xpZW50V2lkdGg7CiAgICAgICAgY2FudmFzLmhlaWdodCA9IHBsYXllci5jbGllbnRIZWlnaHQ7IC8vIGNhbnZhcyA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpCgogICAgICAgIGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpLmRyYXdJbWFnZShwbGF5ZXIsIDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7IC8v5oiqCgogICAgICAgIHZhciBkYXRhID0gY2FudmFzLmdldENvbnRleHQoIjJkIikuZ2V0SW1hZ2VEYXRhKHNYLCBzWSwgZVggLSBzWCwgZVkgLSBzWSk7IC8vIGNvbnN0IGRhdGEgPSBjYW52YXMuZ2V0Q29udGV4dCgiMmQiKS5nZXRJbWFnZURhdGEoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKCiAgICAgICAgdmFyIGNhbnZhc3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTsKICAgICAgICBjYW52YXNzLndpZHRoID0gZVggLSBzWDsKICAgICAgICBjYW52YXNzLmhlaWdodCA9IGVZIC0gc1k7CiAgICAgICAgY2FudmFzcy5nZXRDb250ZXh0KCIyZCIpLnB1dEltYWdlRGF0YShkYXRhLCAwLCAwKTsKICAgICAgICB2YXIgZGF0YVVSTCA9IGNhbnZhc3MudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsgLy/lsIblm77niYfovazmiJBiYXNlNjTmoLzlvI8KCiAgICAgICAgdmFyIGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOwogICAgICAgIGltZy5zcmMgPSBkYXRhVVJMOwogICAgICAgIFRlc3NlcmFjdC5yZWNvZ25pemUoY2FudmFzcywgJ2VuZycsIHsKICAgICAgICAgIGxvZ2dlcjogZnVuY3Rpb24gbG9nZ2VyKG0pIHsKICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKG0pOwogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGQuZGF0YS50ZXh0KTsKCiAgICAgICAgICBfdGhpcy4kYnVzLiRlbWl0KCJyZWNvZ25pemVUZXh0IiwgWzEsIGQuZGF0YS50ZXh0XSk7CiAgICAgICAgfSk7IC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJWaWRlb0VkaXRQYW5lbCIpLmFwcGVuZENoaWxkKGltZyk7ICAgLy/mmL7npLrlnKjpobXpnaLkuK0KICAgICAgICAvLyB2YXIgc3RyaW5nID0gb2NyYWQoY2FudmFzcyk7CiAgICAgICAgLy8gY29uc29sZS5sb2coc3RyaW5nKQogICAgICAgIC8vIGFsZXJ0KHN0cmluZyk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIFZpZGVvRWRpdFBhbmVsU2hvdyh2YWwpIHsKICAgIC8vICAgY29uc3QgX3RoaXMgPSB0aGlzOwogICAgLy8gICBpZiAodmFsKSB7CiAgICAvLyAgICAgbGV0IHdpZHRoID0gX3RoaXMuJHJlZnMuVmlkZW9FZGl0UGFuZWwub2Zmc2V0V2lkdGg7CiAgICAvLyAgICAgbGV0IGhlaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJWaWRlb0VkaXRQYW5lbCIpLmNsaWVudEhlaWdodDsKICAgIC8vICAgICBkMy5zZWxlY3QoIiNWaWRlb0VkaXRQYW5lbCIpLnNlbGVjdCgic3ZnIikucmVtb3ZlKCkKICAgIC8vICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjVmlkZW9FZGl0UGFuZWwiKS5hcHBlbmQoInN2ZyIpCiAgICAvLyAgICAgICAuYXR0cigid2lkdGgiLCB3aWR0aCkKICAgIC8vICAgICAgIC5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwogICAgLy8gICB9CiAgICAvLyB9LAogICAgYWRkTm9kZU46IGZ1bmN0aW9uIGFkZE5vZGVOKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX3RoaXMuZWRpdERpdlNob3cgPSBmYWxzZTsKICAgIH0sCiAgICBkZWxOb2RlOiBmdW5jdGlvbiBkZWxOb2RlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX3RoaXMuZWRpdERpdlNob3cgPSBmYWxzZTsKICAgIH0sCiAgICBlZGl0VG9vbENsazogZnVuY3Rpb24gZWRpdFRvb2xDbGsoKSB7Ly8gY29uc3QgX3RoaXMgPSB0aGlzOwogICAgICAvLyBpZiAoX3RoaXMuY3VyVG9vbFN0YXRlID09ICdlZGl0JykgX3RoaXMuY3VyVG9vbFN0YXRlID0gJ3VuRWRpdCc7CiAgICAgIC8vIGVsc2UgaWYgKF90aGlzLmN1clRvb2xTdGF0ZSAhPSAnZWRpdCcpIF90aGlzLmN1clRvb2xTdGF0ZSA9ICdlZGl0JzsKICAgICAgLy8gdGhpcy4kZW1pdCgidG9vbFN0YXRlIiwgdGhpcy5jdXJUb29sU3RhdGUpOwogICAgfSwKICAgIGVkaXRDb25maXJtOiBmdW5jdGlvbiBlZGl0Q29uZmlybSgpIHsKICAgICAgY29uc29sZS5sb2coImNvbmZpcm0iKTsKCiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBfdGhpcy5sb2FkTG9hZGluZyA9IHRydWU7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0sIDIwMDApOwogICAgICBfdGhpcy5lZGl0RGl2U2hvdyA9IGZhbHNlOwogICAgICBfdGhpcy5lZGl0Q29uZmlybVNob3cgPSBmYWxzZTsKICAgICAgX3RoaXMuVmlkZW9FZGl0UGFuZWxTaG93ID0gZmFsc2U7CgogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJyZWNvZ25pemVUZXh0IiwgWzAsICIiXSk7CiAgICB9LAogICAgdXBkYXRhUmVsOiBmdW5jdGlvbiB1cGRhdGFSZWwoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcmVsRGF0YSA9IF90aGlzLnJlbERhdGE7CiAgICAgIHZhciBvRGF0YSA9IF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbjsKICAgICAgdmFyIHNob3dKYWdlRGF0YSA9IF90aGlzLnNob3dFbnRpdHlMaXN0OwogICAgICB2YXIgc2hvd1JlbCA9IF90aGlzLnNob3dFbnRpdHlSZWxJZExpc3Q7CiAgICAgIHZhciBiYXNpY1JlbCA9IHJlbERhdGFbJ2Jhc2ljUmVsJ107CgogICAgICBpZiAoX3RoaXMuYnRuUmVsKSB7CiAgICAgICAgaWYgKF90aGlzLmJ0blNpbSkgewogICAgICAgICAgZDMuc2VsZWN0QWxsKCcuc2ltaWxhcml0eVJlbCcpLmF0dHIoJ29wYWNpdHknLCAxKTsKICAgICAgICB9IGVsc2UgaWYgKCFfdGhpcy5idG5TaW0pIHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgnLnNpbWlsYXJpdHlSZWwnKS5hdHRyKCdvcGFjaXR5JywgMCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoX3RoaXMuYnRuQXNvKSB7CiAgICAgICAgICBkMy5zZWxlY3RBbGwoJy5iYXNpY1JlbCcpLmF0dHIoJ29wYWNpdHknLCAxKTsKICAgICAgICB9IGVsc2UgaWYgKCFfdGhpcy5idG5Bc28pIHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgnLmJhc2ljUmVsJykuYXR0cignb3BhY2l0eScsIDApOwogICAgICAgIH0gLy8gZDMuc2VsZWN0QWxsKCcuc2ltaWxhcml0eVJlbCcpLmF0dHIoJ29wYWNpdHknLCAxKTsKICAgICAgICAvLyBkMy5zZWxlY3RBbGwoJy5iYXNpY1JlbCcpLmF0dHIoJ29wYWNpdHknLCAxKTsKCiAgICAgIH0gZWxzZSBpZiAoIV90aGlzLmJ0blJlbCkgewogICAgICAgIGQzLnNlbGVjdEFsbCgnLnNpbWlsYXJpdHlSZWwnKS5hdHRyKCdvcGFjaXR5JywgMCk7CiAgICAgICAgZDMuc2VsZWN0QWxsKCcuYmFzaWNSZWwnKS5hdHRyKCdvcGFjaXR5JywgMCk7CiAgICAgIH0KCiAgICAgIGlmICghX3RoaXMuYnRuUmVsIHx8ICFfdGhpcy5idG5Bc28pIHsKICAgICAgICBmb3IgKHZhciByID0gMDsgciA8IGJhc2ljUmVsLmxlbmd0aDsgcisrKSB7CiAgICAgICAgICB2YXIgc29yY2VJZCA9IGJhc2ljUmVsW3JdWzBdOwogICAgICAgICAgdmFyIHRhcmdldElkID0gYmFzaWNSZWxbcl1bMV07CiAgICAgICAgICB2YXIgaWROID0gImJhc2ljUmVsIiArIHNvcmNlSWQgKyAiXyIgKyB0YXJnZXRJZDsKCiAgICAgICAgICBpZiAoX3RoaXMub3ZlclRhcmdldEVudGl0eUlkID09ICcnKSB7CiAgICAgICAgICAgIGlmIChzaG93UmVsLmluY2x1ZGVzKHNvcmNlSWQpIHx8IHNob3dSZWwuaW5jbHVkZXModGFyZ2V0SWQpKSB7CiAgICAgICAgICAgICAgZDMuc2VsZWN0KCIjIi5jb25jYXQoaWROKSkuYXR0cignb3BhY2l0eScsIDEpLmF0dHIoJ3N0cm9rZScsICdncmV5Jyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgZDMuc2VsZWN0KCIjIi5jb25jYXQoaWROKSkuYXR0cignb3BhY2l0eScsIDApOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoc2hvd1JlbC5pbmNsdWRlcyhzb3JjZUlkICsgJycpIHx8IHNob3dSZWwuaW5jbHVkZXModGFyZ2V0SWQgKyAnJykpIHsKICAgICAgICAgICAgICBkMy5zZWxlY3QoIiMiLmNvbmNhdChpZE4pKS5hdHRyKCdvcGFjaXR5JywgMSkuYXR0cignc3Ryb2tlJywgJ2dyZXknKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBkMy5zZWxlY3QoIiMiLmNvbmNhdChpZE4pKS5hdHRyKCdvcGFjaXR5JywgMCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzaG93UmVsLmluY2x1ZGVzKHNvcmNlSWQgKyAnJykgJiYgdGFyZ2V0SWQgPT0gX3RoaXMub3ZlclRhcmdldEVudGl0eUlkKSB7CiAgICAgICAgICAgICAgZDMuc2VsZWN0KCIjIi5jb25jYXQoaWROKSkuYXR0cignb3BhY2l0eScsIDEpLmF0dHIoJ3N0cm9rZScsICdkYXJrc2xhdGVibHVlJyk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2hvd1JlbC5pbmNsdWRlcyh0YXJnZXRJZCArICcnKSAmJiBzb3JjZUlkID09IF90aGlzLm92ZXJUYXJnZXRFbnRpdHlJZCkgewogICAgICAgICAgICAgIGQzLnNlbGVjdCgiIyIuY29uY2F0KGlkTikpLmF0dHIoJ29wYWNpdHknLCAxKS5hdHRyKCdzdHJva2UnLCAnZGFya3NsYXRlYmx1ZScpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICA7CiAgICAgIH0KCiAgICAgIDsKCiAgICAgIF90aGlzLnVwZGF0YUFzc2lzdEdyYXBoUGFuZWwoKTsKICAgIH0sCiAgICBkcmF3UmVsYXRpb25zaGlwTGluZTogZnVuY3Rpb24gZHJhd1JlbGF0aW9uc2hpcExpbmUoc3ZnKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcmVsRGF0YSA9IF90aGlzLnJlbERhdGE7CiAgICAgIHZhciBvRGF0YSA9IF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbjsKICAgICAgdmFyIHNob3dKYWdlRGF0YSA9IF90aGlzLnNob3dFbnRpdHlMaXN0OwogICAgICB2YXIgbWFyZ2luID0gX3RoaXMubWFyZ2luOwogICAgICB2YXIgaGVpZ2h0ID0gc3ZnLmF0dHIoJ2hlaWdodCcpOwogICAgICB2YXIgYmFzaWNSZWwgPSByZWxEYXRhWydiYXNpY1JlbCddOwoKICAgICAgdmFyIF9sb29wNCA9IGZ1bmN0aW9uIF9sb29wNChyKSB7CiAgICAgICAgdmFyIHNvcmNlSWQgPSBiYXNpY1JlbFtyXVswXTsKICAgICAgICB2YXIgdGFyZ2V0SWQgPSBiYXNpY1JlbFtyXVsxXTsKICAgICAgICB2YXIgaWROID0gImJhc2ljUmVsIiArIHNvcmNlSWQgKyAiXyIgKyB0YXJnZXRJZDsKICAgICAgICB2YXIgY2xhc3NOID0gImJhc2ljUmVsIHNvdXJjZSIgKyBzb3JjZUlkICsgIiB0YXJnZXQiICsgdGFyZ2V0SWQ7CiAgICAgICAgdmFyIHNvcmNlTm9kZSA9IG9EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydpZCddID09IHNvcmNlSWQ7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIHRhcmdldE5vZGUgPSBvRGF0YS5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSB0YXJnZXRJZDsKICAgICAgICB9KTsKICAgICAgICB2YXIgc29yY2VKYWdlID0gc2hvd0phZ2VEYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydpZCddID09IHNvcmNlSWQ7CiAgICAgICAgfSlbJ3Nob3cnXTsKICAgICAgICB2YXIgdGFyZ2V0SmFnZSA9IHNob3dKYWdlRGF0YS5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSB0YXJnZXRJZDsKICAgICAgICB9KVsnc2hvdyddOwoKICAgICAgICBpZiAoc29yY2VKYWdlICYmIHRhcmdldEphZ2UpIHsKICAgICAgICAgIGlmIChzb3JjZU5vZGVbJ3gnXSA+IHRhcmdldE5vZGVbJ3gnXSkgewogICAgICAgICAgICB2YXIgdHAgPSBzb3JjZU5vZGU7CiAgICAgICAgICAgIHNvcmNlTm9kZSA9IHRhcmdldE5vZGU7CiAgICAgICAgICAgIHRhcmdldE5vZGUgPSB0cDsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgcGF0aCA9IGQzLnBhdGgoKTsKICAgICAgICAgIHZhciBzdGFydFggPSBzb3JjZU5vZGVbJ3gnXTsKICAgICAgICAgIHZhciBlbmRYID0gdGFyZ2V0Tm9kZVsneCddOwogICAgICAgICAgdmFyIG1pZFggPSAoc3RhcnRYICsgZW5kWCkgLyAyOwogICAgICAgICAgdmFyIGZsYWcgPSBzb3JjZU5vZGVbJ3NvbkZsYWcnXSB8fCB0YXJnZXROb2RlWydzb25GbGFnJ107IC8vIGlmKCh0YXJnZXROb2RlWydpZCddID09ICI0Iil8fCgoc29yY2VOb2RlWydpZCddPT0iMSIpJiYodGFyZ2V0Tm9kZVsnaWQnXT09IjYiKSl8fCgoc29yY2VOb2RlWydpZCddPT0iMiIpJiYodGFyZ2V0Tm9kZVsnaWQnXT09IjciKSl8fCgoc29yY2VOb2RlWydpZCddPT0iMyIpJiYodGFyZ2V0Tm9kZVsnaWQnXT09IjgiKSkpewogICAgICAgICAgLy8gICBmbGFnID0gdHJ1ZTsKICAgICAgICAgIC8vIH0KCiAgICAgICAgICBpZiAodGFyZ2V0Tm9kZVsnaWQnXSA9PSAiNCIpIHsKICAgICAgICAgICAgZmxhZyA9IHRydWU7CiAgICAgICAgICB9IC8vIGlmKHRhcmdldE5vZGVbJ2lkJ10gPT0gIjMwIil7CiAgICAgICAgICAvLyAgIGZsYWcgPSB0cnVlOwogICAgICAgICAgLy8gfQoKCiAgICAgICAgICB2YXIgcnNvdXJjZWludCA9IHNvcmNlTm9kZVsnc29uRmxhZyddID8gNDkgOiAyOwogICAgICAgICAgdmFyIHJ0YXJnZXRpbnQgPSB0YXJnZXROb2RlWydzb25GbGFnJ10gPyA0OSA6IDI7CiAgICAgICAgICB2YXIgc3RhcnRZID0gZmxhZyA/IHNvcmNlTm9kZVsneSddIC0gc29yY2VOb2RlWydyJ10gLSByc291cmNlaW50IDogc29yY2VOb2RlWyd5J10gKyBzb3JjZU5vZGVbJ3InXSArIHJzb3VyY2VpbnQ7CiAgICAgICAgICB2YXIgZW5kWSA9IGZsYWcgPyB0YXJnZXROb2RlWyd5J10gLSB0YXJnZXROb2RlWydyJ10gLSBydGFyZ2V0aW50IDogdGFyZ2V0Tm9kZVsneSddICsgdGFyZ2V0Tm9kZVsnciddICsgcnRhcmdldGludDsKICAgICAgICAgIHZhciBjbngxID0gc3RhcnRYIC0gNTA7CiAgICAgICAgICB2YXIgY254MiA9IGVuZFggKyA1MDsKICAgICAgICAgIHZhciBtaWRZID0gKHN0YXJ0WSArIGVuZFkpIC8gMjsgLy8gaWYoKChzb3JjZU5vZGVbJ2lkJ109PSIxIikmJih0YXJnZXROb2RlWydpZCddPT0iNiIpKXx8KChzb3JjZU5vZGVbJ2lkJ109PSIyIikmJih0YXJnZXROb2RlWydpZCddPT0iNyIpKXx8KChzb3JjZU5vZGVbJ2lkJ109PSIzIikmJih0YXJnZXROb2RlWydpZCddPT0iOCIpKSl7CiAgICAgICAgICAvLyAgIG1pZFktPTE0MAogICAgICAgICAgLy8gfQoKICAgICAgICAgIHZhciBoID0gKGVuZFggLSBzdGFydFgpIC8gNSA+IHBhcnNlSW50KGhlaWdodCkgKyAxMDAgPyBwYXJzZUludChoZWlnaHQpICsgMTAwIDogKGVuZFggLSBzdGFydFgpIC8gNTsKICAgICAgICAgIHZhciBjbnkgPSBmbGFnID8gbWlkWSAtIGggOiBtaWRZICsgaDsKICAgICAgICAgIHZhciBjbnkxID0gY255OwogICAgICAgICAgdmFyIGNueTIgPSBjbnk7CgogICAgICAgICAgaWYgKHNvcmNlTm9kZVsnbGF5b3V0J10gPT0gMiAmJiBjbnkgPCAwIHx8IHNvcmNlTm9kZVsnbGF5b3V0J10gPT0gMCAmJiBjbnkgPiAwKSB7CiAgICAgICAgICAgIGNueDEgLT0gMjUwOwogICAgICAgICAgICBjbnkxID0gY255ICogMS4zOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0YXJnZXROb2RlWydsYXlvdXQnXSA9PSAyICYmIGNueSA8IDAgfHwgdGFyZ2V0Tm9kZVsnbGF5b3V0J10gPT0gMCAmJiBjbnkgPiAwKSB7CiAgICAgICAgICAgIGNueDIgKz0gMjUwOwogICAgICAgICAgICBjbnkyID0gY255ICogMS4zOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzb3JjZUlkID09ICcxNCcgJiYgdGFyZ2V0SWQgPT0gJzcnKSB7CiAgICAgICAgICAgIGNueSAqPSAxLjQ7CiAgICAgICAgICB9IC8vIGxldCBtaWRQID0gWyhzdGFydFBbMF0rZW5kUFswXSkvMiwoc3RhcnRQWzFdKT4oZW5kUFsxXSk/KHN0YXJ0UFsxXS0xMDApOihlbmRQWzFdLTEwMCldOwoKCiAgICAgICAgICBwYXRoLm1vdmVUbyhzdGFydFgsIHN0YXJ0WSk7CiAgICAgICAgICBwYXRoLmJlemllckN1cnZlVG8obWlkWCwgY255LCBtaWRYLCBjbnksIGVuZFgsIGVuZFkpOwoKICAgICAgICAgIF90aGlzLmRyYXdUaW1lTGluZShzdmcsIHBhdGgsICJyZ2IoMjAwLDIwMCwyMDApIiwgNSwgIjksOSIsIGlkTiwgY2xhc3NOKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICBmb3IgKHZhciByID0gMDsgciA8IGJhc2ljUmVsLmxlbmd0aDsgcisrKSB7CiAgICAgICAgX2xvb3A0KHIpOwogICAgICB9CgogICAgICA7CiAgICAgIHZhciBzaW1pbGFyaXR5UmVsID0gcmVsRGF0YVsnc2ltaWxhcml0eVJlbCddOyAvLyBsZXQgYmFzaWNSZWwgPSByZWxEYXRhWydiYXNpY1JlbCddOwoKICAgICAgdmFyIF9sb29wNSA9IGZ1bmN0aW9uIF9sb29wNShfcjIpIHsKICAgICAgICB2YXIgc29yY2VJZCA9IHNpbWlsYXJpdHlSZWxbX3IyXVswXTsKICAgICAgICB2YXIgdGFyZ2V0SWQgPSBzaW1pbGFyaXR5UmVsW19yMl1bMV07CiAgICAgICAgdmFyIGlkTiA9ICJzaW1pbGFyaXR5UmVsIiArIHNvcmNlSWQgKyAiXyIgKyB0YXJnZXRJZDsKICAgICAgICB2YXIgY2xhc3NOID0gInNpbWlsYXJpdHlSZWwgc291cmNlIiArIHNvcmNlSWQgKyAiIHRhcmdldCIgKyB0YXJnZXRJZDsKICAgICAgICB2YXIgc29yY2VOb2RlID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29yY2VJZDsKICAgICAgICB9KTsKICAgICAgICB2YXIgdGFyZ2V0Tm9kZSA9IG9EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydpZCddID09IHRhcmdldElkOwogICAgICAgIH0pOwogICAgICAgIHZhciBzb3JjZUphZ2UgPSBzaG93SmFnZURhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29yY2VJZDsKICAgICAgICB9KVsnc2hvdyddOwogICAgICAgIHZhciB0YXJnZXRKYWdlID0gc2hvd0phZ2VEYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkWydpZCddID09IHRhcmdldElkOwogICAgICAgIH0pWydzaG93J107CgogICAgICAgIGlmIChzb3JjZUphZ2UgJiYgdGFyZ2V0SmFnZSkgewogICAgICAgICAgaWYgKHNvcmNlTm9kZVsneCddID4gdGFyZ2V0Tm9kZVsneCddKSB7CiAgICAgICAgICAgIHZhciB0cCA9IHNvcmNlTm9kZTsKICAgICAgICAgICAgc29yY2VOb2RlID0gdGFyZ2V0Tm9kZTsKICAgICAgICAgICAgdGFyZ2V0Tm9kZSA9IHRwOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBwYXRoID0gZDMucGF0aCgpOwogICAgICAgICAgdmFyIHN0YXJ0WCA9IHNvcmNlTm9kZVsneCddICsgc29yY2VOb2RlWydyJ10gLyAyOwogICAgICAgICAgdmFyIGVuZFggPSB0YXJnZXROb2RlWyd4J10gLSB0YXJnZXROb2RlWydyJ10gLyAyOwogICAgICAgICAgdmFyIG1pZFggPSAoc3RhcnRYICsgZW5kWCkgLyAyOwogICAgICAgICAgdmFyIGZsYWcgPSBzb3JjZU5vZGVbJ3NvbkZsYWcnXSB8fCB0YXJnZXROb2RlWydzb25GbGFnJ107CiAgICAgICAgICB2YXIgcnNvdXJjZWludCA9IHNvcmNlTm9kZVsnc29uRmxhZyddID8gMjAgOiAyOwogICAgICAgICAgdmFyIHJ0YXJnZXRpbnQgPSB0YXJnZXROb2RlWydzb25GbGFnJ10gPyAyMCA6IDI7CiAgICAgICAgICB2YXIgc3RhcnRZID0gZmxhZyA/IHNvcmNlTm9kZVsneSddIC0gc29yY2VOb2RlWydyJ10gLSByc291cmNlaW50IDogc29yY2VOb2RlWyd5J10gKyBzb3JjZU5vZGVbJ3InXSArIHJzb3VyY2VpbnQ7CiAgICAgICAgICB2YXIgZW5kWSA9IGZsYWcgPyB0YXJnZXROb2RlWyd5J10gLSB0YXJnZXROb2RlWydyJ10gLSBydGFyZ2V0aW50IDogdGFyZ2V0Tm9kZVsneSddICsgdGFyZ2V0Tm9kZVsnciddICsgcnRhcmdldGludDsKICAgICAgICAgIHZhciBtaWRZID0gKHN0YXJ0WSArIGVuZFkpIC8gMjsgLy8gbGV0IGgxU2NhbGVfbGluZWFyID0gZDMuc2NhbGVMaW5lYXIoWzAsIF90aGlzLndpZHRoXSwgWyhzb3JjZU5vZGVbJ3knXT50YXJnZXROb2RlWyd5J10pPyhzb3JjZU5vZGVbJ3knXSoyKToodGFyZ2V0Tm9kZVsneSddKjIpLHBhcnNlSW50KGhlaWdodCldKQoKICAgICAgICAgIHZhciBoID0gKGVuZFggLSBzdGFydFgpIC8gMTQgPiBwYXJzZUludChoZWlnaHQpIC0gMTAgPyBwYXJzZUludChoZWlnaHQpIC0gMTAgOiAoZW5kWCAtIHN0YXJ0WCkgLyAxNDsKICAgICAgICAgIHZhciBoU2NhbGVfbGluZWFyID0gZDMuc2NhbGVMaW5lYXIoWzAsIF90aGlzLndpZHRoIC8gMl0sIFswLCAoaCAtIDgwKSAvIDMgKiAyXSk7CiAgICAgICAgICB2YXIgY255ID0gZmxhZyA/IG1pZFkgLSBoU2NhbGVfbGluZWFyKGVuZFgpIDogbWlkWSArIGhTY2FsZV9saW5lYXIoZW5kWCk7IC8vIGlmIChzb3JjZU5vZGVbJ2lkJ10gPT0gJzcnKSB7IGNueSAtPSAyMCB9CgogICAgICAgICAgaWYgKGNueSA8IC0xNTApIHsKICAgICAgICAgICAgc3RhcnRZID0gc29yY2VOb2RlWyd5J10gKyBzb3JjZU5vZGVbJ3InXSArIHJzb3VyY2VpbnQ7CiAgICAgICAgICAgIGVuZFkgPSB0YXJnZXROb2RlWyd5J10gKyB0YXJnZXROb2RlWydyJ10gKyBydGFyZ2V0aW50OwogICAgICAgICAgICBjbnkgPSBoZWlnaHQgLSBjbnkgLSAzMDA7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHRhcmdldElkID09ICI1IiB8fCBzb3JjZUlkID09ICI1IikgewogICAgICAgICAgICBjbnkgKz0gMjUwOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0YXJnZXRJZCA9PSAiMjgiIHx8IHNvcmNlSWQgPT0gIjkiKSB7CiAgICAgICAgICAgIGNueSAtPSAxMDUwOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0YXJnZXRJZCA9PSAiNiIgfHwgc29yY2VJZCA9PSAiNiIpIHsKICAgICAgICAgICAgY255ICs9IDE1MDsKICAgICAgICAgIH0KCiAgICAgICAgICBwYXRoLm1vdmVUbyhzdGFydFgsIHN0YXJ0WSk7CiAgICAgICAgICBwYXRoLmxpbmVUbyhzdGFydFgsIGNueSk7CiAgICAgICAgICBwYXRoLmxpbmVUbyhlbmRYLCBjbnkpOwogICAgICAgICAgcGF0aC5saW5lVG8oZW5kWCwgZW5kWSk7CgogICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgcGF0aCwgInJnYigyMDAsMjAwLDIwMCkiLCA1LCAiMCIsIGlkTiwgY2xhc3NOKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICBmb3IgKHZhciBfcjIgPSAwOyBfcjIgPCBzaW1pbGFyaXR5UmVsLmxlbmd0aDsgX3IyKyspIHsKICAgICAgICBfbG9vcDUoX3IyKTsKICAgICAgfQoKICAgICAgOwoKICAgICAgX3RoaXMudXBkYXRhUmVsKCk7CiAgICB9LAogICAgZHJhd01haW46IGZ1bmN0aW9uIGRyYXdNYWluKHN2ZykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSBfdGhpcy5kYXRhOwogICAgICB2YXIgbWFyZ2luID0gX3RoaXMubWFyZ2luOwogICAgICB2YXIgd2lkdGggPSBfdGhpcy53aWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0OwogICAgICB2YXIgaGVpZ2h0ID0gX3RoaXMuaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207CiAgICAgIHZhciBncmFwaEdUcmFuc2Zvcm1YID0gX3RoaXMuZ3JhcGhHVHJhbnNmb3JtWDsKICAgICAgdmFyIGdyYXBoR1RyYW5zZm9ybVkgPSBfdGhpcy5ncmFwaEdUcmFuc2Zvcm1ZOwogICAgICB2YXIgZ3JhcGhHVHJhbnNmb3JtSyA9IF90aGlzLmdyYXBoR1RyYW5zZm9ybUs7CiAgICAgIHZhciBheGlzR3JvdXBzID0gc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImlkIiwgImF4aXNHcm91cHMiKS5hdHRyKCJ3aWR0aCIsIHdpZHRoKS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOyAvLyAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgZ3JhcGhHVHJhbnNmb3JtWCArICcsJyArIGdyYXBoR1RyYW5zZm9ybVkgKyAiKSBzY2FsZSgiICsgZ3JhcGhHVHJhbnNmb3JtSyArICIpIik7CgogICAgICB2YXIgZ3JvdXBzID0gc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImlkIiwgImdyb3VwcyIpLmF0dHIoIndpZHRoIiwgd2lkdGgpLmF0dHIoImhlaWdodCIsIGhlaWdodCkuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgZ3JhcGhHVHJhbnNmb3JtWCArICcsJyArIGdyYXBoR1RyYW5zZm9ybVkgKyAiKSBzY2FsZSgiICsgZ3JhcGhHVHJhbnNmb3JtSyArICIpIik7CiAgICAgIHRoaXMuZ3JvdXBzU3ZnID0gZ3JvdXBzOwogICAgICB2YXIgYmFja0cgPSBncm91cHMuYXBwZW5kKCJnIikuYXR0cigiaWQiLCAiYmFja0ciKS5hdHRyKCJ3aWR0aCIsIHdpZHRoKS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwogICAgICB2YXIgYXJjRyA9IGdyb3Vwcy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJhcmNHIikuYXR0cigid2lkdGgiLCB3aWR0aCkuYXR0cigiaGVpZ2h0IiwgaGVpZ2h0KTsKICAgICAgdmFyIHRpbWVMaW5lRyA9IGdyb3Vwcy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJ0aW1lTGluZUciKS5hdHRyKCJ3aWR0aCIsIHdpZHRoKS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwogICAgICB2YXIgY2lyY2xlRyA9IGdyb3Vwcy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJjaXJjbGVHIikuYXR0cigid2lkdGgiLCB3aWR0aCkuYXR0cigiaGVpZ2h0IiwgaGVpZ2h0KTsKICAgICAgX3RoaXMuYXJjRyA9IGFyY0c7CiAgICAgIHZhciBzdGVwWCA9IF90aGlzLnN0ZXBYOwogICAgICB2YXIgc3RlcFkgPSBfdGhpcy5zdGVwWTsKICAgICAgdmFyIGludGVydmFsID0gX3RoaXMuY2lyY2xlSW50ZXJ2YWw7CiAgICAgIHZhciBzY2FsZVByZSA9IF90aGlzLmdyYXBoU3ZnU2NhbGU7CiAgICAgIHZhciBzdHggPSAwOwogICAgICB2YXIgc3R5ID0gMDsKICAgICAgdmFyIHN0ayA9IDE7CiAgICAgIHZhciBncmFwaFpvb20gPSBkMy56b29tKCkuc2NhbGVFeHRlbnQoWzAsIDEwXSkub24oInN0YXJ0IiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICBzdHkgPSBlLnRyYW5zZm9ybS55OwogICAgICAgIHN0eCA9IGUudHJhbnNmb3JtLng7CiAgICAgICAgc3RrID0gZS50cmFuc2Zvcm0uazsKICAgICAgfSkub24oJ3pvb20nLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGdyYXBoR1RyYW5zZm9ybVggPSBfdGhpcy5ncmFwaEdUcmFuc2Zvcm1YICsgZS50cmFuc2Zvcm0ueCAtIHN0eDsKICAgICAgICBncmFwaEdUcmFuc2Zvcm1ZID0gX3RoaXMuZ3JhcGhHVHJhbnNmb3JtWSArIGUudHJhbnNmb3JtLnkgLSBzdHk7CiAgICAgICAgZ3JhcGhHVHJhbnNmb3JtSyA9IF90aGlzLmdyYXBoR1RyYW5zZm9ybUsgKyBlLnRyYW5zZm9ybS5rIC0gc3RrOwogICAgICAgIF90aGlzLmdyYXBoR01vdmVYID0gZ3JhcGhHVHJhbnNmb3JtWDsKICAgICAgICBncm91cHMuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgZ3JhcGhHVHJhbnNmb3JtWCArICcsJyArIGdyYXBoR1RyYW5zZm9ybVkgKyAnKSBzY2FsZSgnICsgZ3JhcGhHVHJhbnNmb3JtSyArICcpJyk7CiAgICAgIH0pLm9uKCdlbmQnLCBmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzLmdyYXBoR1RyYW5zZm9ybVggPSBncmFwaEdUcmFuc2Zvcm1YOwogICAgICAgIF90aGlzLmdyYXBoR1RyYW5zZm9ybVkgPSBncmFwaEdUcmFuc2Zvcm1ZOwogICAgICAgIF90aGlzLmdyYXBoR1RyYW5zZm9ybUsgPSBncmFwaEdUcmFuc2Zvcm1LOwogICAgICAgIGdyb3Vwcy5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyBncmFwaEdUcmFuc2Zvcm1YICsgJywnICsgZ3JhcGhHVHJhbnNmb3JtWSArICcpIHNjYWxlKCcgKyBncmFwaEdUcmFuc2Zvcm1LICsgJyknKTsKICAgICAgfSk7CiAgICAgIHN2Zy5jYWxsKGdyYXBoWm9vbSk7IC8vIC5jYWxsKGdyYXBoWm9vbS50cmFuc2Zvcm0sIGQzLnpvb21JZGVudGl0eS5zY2FsZSgxKSkKCiAgICAgIHZhciBwYXRoID0gZDMucGF0aCgpOwogICAgICBwYXRoLm1vdmVUbyhtYXJnaW4ubGVmdCwgbWFyZ2luLnRvcCk7CiAgICAgIHZhciB4ID0gbWFyZ2luLmxlZnQ7CiAgICAgIHZhciBwcmV4ID0gbWFyZ2luLmxlZnQ7CiAgICAgIHZhciBwcmV5ID0gbWFyZ2luLnRvcDsKICAgICAgdmFyIHByZXIgPSAwOwogICAgICB2YXIgcHJlU29uTGVuID0gMDsKICAgICAgdmFyIGxheW91dFNob3cgPSBfdGhpcy5sYXlvdXRTaG93OwogICAgICB2YXIgc3VtVG90YWxEdXJhdGlvbiA9IDA7CiAgICAgIHZhciByb290SW5kZXggPSAtMTsKCiAgICAgIHZhciBfbG9vcDYgPSBmdW5jdGlvbiBfbG9vcDYoaSkgewogICAgICAgIHZhciBsYXkgPSBwYXJzZUludChkYXRhW2ldWydsYXlvdXQnXSk7CiAgICAgICAgdmFyIGNvbG9ycyA9IF90aGlzLm1jb2xvcjsKICAgICAgICB2YXIgY29sb3JzRCA9IF90aGlzLm1EYXJrY29sb3I7CiAgICAgICAgdmFyIGVudGl0eUxvY2F0aW9uRGF0YSA9IHRvb2xzLmRlZXBDbG9uZShkYXRhW2ldKTsKCiAgICAgICAgaWYgKGxheSA9PSAwKSB7CiAgICAgICAgICByb290SW5kZXgrKzsKICAgICAgICB9CgogICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsncm9vdEluZGV4J10gPSByb290SW5kZXg7CiAgICAgICAgZW50aXR5TG9jYXRpb25EYXRhWydjb2xvciddID0gY29sb3JzW3Jvb3RJbmRleCAlIGNvbG9ycy5sZW5ndGhdOwogICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsnY29sb3JEJ10gPSBjb2xvcnNEW3Jvb3RJbmRleCAlIGNvbG9yc0QubGVuZ3RoXTsKICAgICAgICB2YXIgdGltZUxpc3QgPSBkYXRhW2ldWyd0aW1lJ107CiAgICAgICAgdmFyIGR1cmF0aW9uID0gdG9vbHMudGltZTJzZWNvbmRzKHRpbWVMaXN0WzFdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyh0aW1lTGlzdFswXSk7CiAgICAgICAgc3VtVG90YWxEdXJhdGlvbiArPSBkdXJhdGlvbjsKCiAgICAgICAgdmFyIHNob3dFbnRpdHkgPSBfdGhpcy5zaG93RW50aXR5TGlzdC5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSBkYXRhW2ldWydpZCddOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoc2hvd0VudGl0eVsnc2hvdyddID09IHRydWUpIHsKICAgICAgICAgIHZhciB5ID0gbWFyZ2luLnRvcCArIGxheSAqIHN0ZXBZOwogICAgICAgICAgdmFyIHJlbGV2YW5jZVZhbHVlID0gZGF0YVtpXVsnYXR0cmlidXRlJ11bJ3JlbGV2YW5jZSddOwogICAgICAgICAgdmFyIHRvdGFsRHVyYXRpb25WYWx1ZSA9IGRhdGFbaV1bJ3RvdGFsRHVyYXRpb24nXTsKICAgICAgICAgIHZhciByU2NhbGUgPSBfdGhpcy50b3RhbER1cmF0aW9uU2NhbGVfbGluZWFyOwogICAgICAgICAgdmFyIHIgPSByU2NhbGUodG90YWxEdXJhdGlvblZhbHVlKTsKICAgICAgICAgIHZhciBzdGVwTCA9IHIgKyBzdGVwWCAvIDIgKyBpbnRlcnZhbCAvIDEwOwogICAgICAgICAgdmFyIGNvbnRyb2xQMXggPSBwcmV4ICsgaW50ZXJ2YWwgLyAxOwogICAgICAgICAgdmFyIGNvbnRyb2xQMnggPSB4IC0gaW50ZXJ2YWwgLyAxOwogICAgICAgICAgdmFyIGN1ckxpbmV4ID0geCAtIHIgLSBpbnRlcnZhbDsKICAgICAgICAgIHZhciByZWxEYXRhID0gX3RoaXMucmVsRGF0YTsKICAgICAgICAgIHZhciBvRGF0YSA9IF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbjsKICAgICAgICAgIHZhciBiYXNpY1JlbCA9IHJlbERhdGFbJ2Jhc2ljUmVsJ107CiAgICAgICAgICB2YXIgZGFJZCA9IGRhdGFbaV1bJ2lkJ107CiAgICAgICAgICB2YXIgamcgPSAwOwoKICAgICAgICAgIGZvciAodmFyIHJlID0gMDsgcmUgPCBiYXNpY1JlbC5sZW5ndGg7IHJlKyspIHsKICAgICAgICAgICAgdmFyIHNvcmNlSWQgPSBiYXNpY1JlbFtyZV1bMF07CiAgICAgICAgICAgIHZhciB0YXJnZXRJZCA9IGJhc2ljUmVsW3JlXVsxXTsKICAgICAgICAgICAgdmFyIGNOb2RlID0gJyc7CgogICAgICAgICAgICBpZiAoc29yY2VJZCA9PSBkYUlkIHx8IHRhcmdldElkID09IGRhSWQpIHsKICAgICAgICAgICAgICBqZyA9IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICA7CiAgICAgICAgICB2YXIgc29uRmxhZyA9IDE7CgogICAgICAgICAgaWYgKGkgPiAwICYmIHByZVNvbkxlbiA9PSAwICYmIGRhdGFbaV1bJ3NvbiddLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgIHNvbkZsYWcgPSAwOwogICAgICAgICAgICBzdGVwTCA9IHIgKyBzdGVwWCAvIDEuMiArIGludGVydmFsIC8gMTA7CiAgICAgICAgICAgIHggKz0gc3RlcEw7CiAgICAgICAgICAgIGNvbnRyb2xQMXggPSBwcmV4ICsgaW50ZXJ2YWwgLyAxOwogICAgICAgICAgICBjb250cm9sUDJ4ID0geCAtIHIgLSBpbnRlcnZhbCAvIDIgLSBpbnRlcnZhbCAvIDE7CiAgICAgICAgICAgIGN1ckxpbmV4ID0gciArIGludGVydmFsIC8gMTA7CiAgICAgICAgICB9IGVsc2UgaWYgKGkgPiAwICYmIHByZVNvbkxlbiAhPSAwICYmIGRhdGFbaV1bJ3NvbiddLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgIHNvbkZsYWcgPSAwOwogICAgICAgICAgICBzdGVwTCA9IHIgKyBzdGVwWCArIGludGVydmFsICsgMzA7CiAgICAgICAgICAgIHggKz0gc3RlcEw7CiAgICAgICAgICAgIGNvbnRyb2xQMXggPSBwcmV4ICsgaW50ZXJ2YWwgLyAxOwogICAgICAgICAgICBjb250cm9sUDJ4ID0geCAtIHIgLSBpbnRlcnZhbCAvIDEgLSBpbnRlcnZhbCAvIDE7CiAgICAgICAgICAgIGN1ckxpbmV4ID0gciArIGludGVydmFsIC8gMTA7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzdGVwTCA9IHIgKyBzdGVwWCArIGludGVydmFsICsgMTA7CiAgICAgICAgICAgIHggKz0gc3RlcEw7CiAgICAgICAgICAgIGNvbnRyb2xQMXggPSBwcmV4ICsgaW50ZXJ2YWwgLyAxOwogICAgICAgICAgICBjb250cm9sUDJ4ID0geCAtIHIgLSBpbnRlcnZhbCAtIGludGVydmFsIC8gMTsKICAgICAgICAgICAgY3VyTGluZXggPSByICsgaW50ZXJ2YWw7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGpnID09IDEgJiYgZGF0YVtpXVsndHlwZSddID09IDAgJiYgZGF0YVtpXVsnc29uJ10ubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgY3VyTGluZXggKz0gciAqIDEuNTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5kcmF3RW50aXR5KGNpcmNsZUcsIHgsIHksIHIsIGRhdGFbaV0pOwoKICAgICAgICAgIHBhdGguYmV6aWVyQ3VydmVUbyhjb250cm9sUDF4LCBwcmV5LCBjb250cm9sUDJ4LCB5LCB4IC0gY3VyTGluZXgsIHkpOyAvLyBwYXRoLmxpbmVUbyhjb250cm9sUDF4LCBwcmV5KQogICAgICAgICAgLy8gcGF0aC5saW5lVG8oY29udHJvbFAyeCwgeSkKICAgICAgICAgIC8vIHBhdGgubGluZVRvKHggLSBjdXJMaW5leCwgeSkKCiAgICAgICAgICBwYXRoLm1vdmVUbyh4ICsgY3VyTGluZXgsIHkpOwogICAgICAgICAgcHJleCA9IHggKyBjdXJMaW5leDsKICAgICAgICAgIHByZXkgPSB5OwogICAgICAgICAgcHJlciA9IHI7CiAgICAgICAgICBwcmVTb25MZW4gPSBkYXRhW2ldWydzb24nXS5sZW5ndGg7CiAgICAgICAgICBlbnRpdHlMb2NhdGlvbkRhdGFbJ3gnXSA9IHg7CiAgICAgICAgICBlbnRpdHlMb2NhdGlvbkRhdGFbJ3knXSA9IHk7CiAgICAgICAgICBlbnRpdHlMb2NhdGlvbkRhdGFbJ3InXSA9IHI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsneCddID0gcHJleDsKICAgICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsneSddID0gcHJleTsKICAgICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsnciddID0gcHJlcjsKICAgICAgICB9CgogICAgICAgIGVudGl0eUxvY2F0aW9uRGF0YVsnc29uRmxhZyddID0gZW50aXR5TG9jYXRpb25EYXRhWydzb24nXS5sZW5ndGggPiAwID8gMSA6IDA7IC8vIGVudGl0eUxvY2F0aW9uRGF0YVsnc2hvd1JlbCddID0gZmFsc2U7CgogICAgICAgIF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbi5wdXNoKGVudGl0eUxvY2F0aW9uRGF0YSk7CiAgICAgIH07CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICBfbG9vcDYoaSk7CiAgICAgIH0KCiAgICAgIHZhciBlbnRpdHlMb2NhdGlvbkRhdGEgPSBfdGhpcy5kcmF3RW50aXR5TG9jYXRpb247CiAgICAgIHZhciBjb2xvcnMgPSBfdGhpcy5tY29sb3I7CiAgICAgIHZhciBjb2xvckluZGV4ID0gMDsKICAgICAgdmFyIGNvbG9ycm9vdEluZGV4ID0gMDsKICAgICAgX3RoaXMuc3VtVG90YWxEdXJhdGlvbiA9IHN1bVRvdGFsRHVyYXRpb247CgogICAgICB2YXIgX2xvb3A3ID0gZnVuY3Rpb24gX2xvb3A3KF9pKSB7CiAgICAgICAgdmFyIHggPSBlbnRpdHlMb2NhdGlvbkRhdGFbX2ldWyd4J107CiAgICAgICAgdmFyIHkgPSBlbnRpdHlMb2NhdGlvbkRhdGFbX2ldWyd5J107CiAgICAgICAgdmFyIHIgPSBlbnRpdHlMb2NhdGlvbkRhdGFbX2ldWydyJ107CgogICAgICAgIHZhciBzaG93RW50aXR5ID0gX3RoaXMuc2hvd0VudGl0eUxpc3QuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gZW50aXR5TG9jYXRpb25EYXRhW19pXVsnaWQnXTsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKGVudGl0eUxvY2F0aW9uRGF0YVtfaV1bJ3R5cGUnXSA9PSAwICYmIHNob3dFbnRpdHlbJ3Nob3cnXSA9PSB0cnVlKSB7CiAgICAgICAgICBfdGhpcy5kcmF3RW50aXR5VGltZUF4aXMoY2lyY2xlRywgZW50aXR5TG9jYXRpb25EYXRhW19pXSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoZW50aXR5TG9jYXRpb25EYXRhW19pXVsnbGF5b3V0J10gPT0gJzAnICYmIGVudGl0eUxvY2F0aW9uRGF0YVtfaV1bJ25hbWUnXSAhPSAnVGVzdCcpIHsKICAgICAgICAgIGNvbG9ySW5kZXggPSBjb2xvcnJvb3RJbmRleDsKICAgICAgICAgIGNvbG9ycm9vdEluZGV4Kys7CiAgICAgICAgfQoKICAgICAgICBpZiAoZW50aXR5TG9jYXRpb25EYXRhW19pXVsnc29uJ10ubGVuZ3RoICE9IDAgJiYgX3RoaXMuc2hvd0VudGl0eUxpc3QuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gZW50aXR5TG9jYXRpb25EYXRhW19pXVsnc29uJ11bMF07CiAgICAgICAgfSlbJ3Nob3cnXSkgewogICAgICAgICAgdmFyIG1heHhzID0gZW50aXR5TG9jYXRpb25EYXRhW19pXVsneCddIC0gZW50aXR5TG9jYXRpb25EYXRhW19pXVsnciddIC0gNDA7CiAgICAgICAgICB2YXIgbWF4eXMgPSBlbnRpdHlMb2NhdGlvbkRhdGFbX2ldWyd5J10gLSBlbnRpdHlMb2NhdGlvbkRhdGFbX2ldWydyJ10gLSA0MDsKICAgICAgICAgIHZhciBtaW54cyA9IHRvb2xzLmRlZXBDbG9uZShtYXh4cyk7CiAgICAgICAgICB2YXIgbWlueXMgPSB0b29scy5kZWVwQ2xvbmUobWF4eXMpOwogICAgICAgICAgdmFyIHJlY3RQb2ludHMgPSBbW21heHhzLCBtYXh5c11dOwogICAgICAgICAgdmFyIHNvbnMgPSB0b29scy5kZWVwQ2xvbmUoZGF0YVtfaV1bJ3NvbiddKTsKCiAgICAgICAgICB2YXIgX2xvb3A4ID0gZnVuY3Rpb24gX2xvb3A4KCkgewogICAgICAgICAgICB2YXIgcyA9IHNvbnNbMF07CiAgICAgICAgICAgIHNvbnMuc3BsaWNlKDAsIDEpOwogICAgICAgICAgICB2YXIgY3Vyc29uID0gZW50aXR5TG9jYXRpb25EYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSBzOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdmFyIGN1cmdzb24gPSBjdXJzb25bJ3NvbiddOwogICAgICAgICAgICB2YXIgY3VyeCA9IGN1cnNvblsneCddICsgY3Vyc29uWydyJ10gKiAyOwogICAgICAgICAgICB2YXIgY3VyeSA9IGN1cnNvblsneSddICsgY3Vyc29uWydyJ10gKiAyOwoKICAgICAgICAgICAgaWYgKGN1cnggPiBtYXh4cykgewogICAgICAgICAgICAgIG1heHhzID0gY3VyeDsKICAgICAgICAgICAgfSAvLyBpZihjdXJzb25bJ3knXTxtYXh5cyltYXh5cyA9IGN1cnNvblsneSddOwoKCiAgICAgICAgICAgIGlmIChjdXJ5IDwgbWlueXMpIG1pbnlzID0gY3VyeTsKICAgICAgICAgICAgaWYgKGN1cnkgPiBtYXh5cykgbWF4eXMgPSBjdXJ5OwoKICAgICAgICAgICAgZm9yICh2YXIgZ3MgPSAwOyBncyA8IGN1cmdzb24ubGVuZ3RoOyBncysrKSB7CiAgICAgICAgICAgICAgc29ucy5wdXNoKGN1cmdzb25bZ3NdKTsKICAgICAgICAgICAgfQogICAgICAgICAgfTsKCiAgICAgICAgICB3aGlsZSAoc29ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIF9sb29wOCgpOwogICAgICAgICAgfQoKICAgICAgICAgIHJlY3RQb2ludHMgPSBbW21pbnhzLCBtaW55c10sIFttaW54cywgbWF4eXNdLCBbbWF4eHMsIG1heHlzXSwgW21heHhzLCBtaW55c11dOyAvLyBfdGhpcy5kcmF3cG9seWdvbihiYWNrRywgY29sb3JzW2NvbG9ySW5kZXhdLCByZWN0UG9pbnRzLCAicmdiKDI1NSwyNTUsMjU1KSIsMC4zKTsKCiAgICAgICAgICBfdGhpcy5kcmF3UmVjdChiYWNrRywgbWlueHMsIG1pbnlzLCBNYXRoLmFicyhtYXh4cyAtIG1pbnhzKSwgTWF0aC5hYnMobWF4eXMgLSBtaW55cyksIDIwLCAyMCwgY29sb3JzW2NvbG9ySW5kZXhdLCAwLjEsICJ3aGl0ZSIsICJiYWNrUmVjdCIuY29uY2F0KF9pKSk7CgogICAgICAgICAgY29sb3JJbmRleCsrOwogICAgICAgICAgY29sb3JJbmRleCAlPSBjb2xvcnMubGVuZ3RoOwogICAgICAgIH0gLy8gZW50aXR5TG9jYXRpb25EYXRhW2ldWydjb2xvciddID0gY29sb3JzW2NvbG9ySW5kZXggLSAxXTsKICAgICAgICAvLyBpZiAoKGVudGl0eUxvY2F0aW9uRGF0YVtpXVsnbGF5b3V0J10gPT0gJzAnKSAmJiAoKGVudGl0eUxvY2F0aW9uRGF0YVtpXVsnbmFtZSddID09ICdUZXN0JykgfHwgKGVudGl0eUxvY2F0aW9uRGF0YVtpXVsnbmFtZSddID09ICdFeGFtcGxlJykpKSB7CiAgICAgICAgLy8gICBlbnRpdHlMb2NhdGlvbkRhdGFbaV1bJ2NvbG9yJ10gPSBjb2xvcnNbY29sb3JJbmRleF0KICAgICAgICAvLyB9CgogICAgICB9OwoKICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGVudGl0eUxvY2F0aW9uRGF0YS5sZW5ndGg7IF9pKyspIHsKICAgICAgICBfbG9vcDcoX2kpOwogICAgICB9CgogICAgICBfdGhpcy5kcmF3VGltZUxpbmUodGltZUxpbmVHLCBwYXRoLCAicmdiKDIwMCwyMDAsMjAwKSIsIDUsICcwJywgJ3RpbWVMaW5lICcsICd0aW1lTGluZSAnKTsKCiAgICAgIF90aGlzLmRyYXdSZWxhdGlvbnNoaXBMaW5lKHRpbWVMaW5lRyk7CgogICAgICBfdGhpcy5kcmF3VGltZUF4aXMoX3RoaXMuVGltZUF4aXNTdmcpOwoKICAgICAgX3RoaXMuZHJhd1R5cGVSaXZlcihfdGhpcy5UaW1lQXhpc1N2Zyk7CgogICAgICBfdGhpcy51cGRhdGFUaW1lQXhpc0R1cihfdGhpcy5UaW1lQXhpc1N2ZywgX3RoaXMudGltZUF4aXNYLCBfdGhpcy50aW1lQXhpc1cpOwogICAgfSwKICAgIHVwZGF0YVRpbWVBeGlzRHVyOiBmdW5jdGlvbiB1cGRhdGFUaW1lQXhpc0R1cihzdmcsIHgsIHdpZHRoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgbWFyZ2luID0gX3RoaXMubWFyZ2luOwogICAgICB2YXIgdG90YWxXaWR0aCA9IF90aGlzLndpZHRoOyAvL21hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0OwoKICAgICAgdmFyIHkgPSAwOwogICAgICB2YXIgaCA9IDIwMDsKCiAgICAgIF90aGlzLmRyYXdSZWN0KHN2ZywgMCwgeSwgeCwgaCwgMywgMywgJ3doaXRlJywgMC4zLCAnJywgInRpbWVBeGlzUmVjdDEiKTsKCiAgICAgIHZhciBjdXJSZWN0ID0gX3RoaXMuZHJhd1JlY3Qoc3ZnLCB4LCB5IC0gMCwgd2lkdGgsIGggLSA1LCAzLCAzLCAncmdiYSgwLDAsMCwwKScsIDEsICdyZ2IoMTQ1LCAxODAsIDE4OSknLCAnd2luUmVjdCcsIDIpOyAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAvLyBjdXJSZWN0Lm9uKCdtb3VzZW1vdmUnLCBmdW5jdGlvbiAoZSkgewogICAgICAvLyAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJjdXJzb3IiLCAncG9pbnRlcicpOwogICAgICAvLyAgIGlmIChfdGhpcy50aW1lQXhpc0Ryb3BGbGFnID09IDEpIHsKICAgICAgLy8gICAgIGxldCBteCA9IGUuY2xpZW50WCAtIF90aGlzLnRpbWVBeGlzRG93blg7CiAgICAgIC8vICAgICBfdGhpcy50aW1lQXhpc1ggPSBlLmxheWVyWCAtIDQ1MCAtIF90aGlzLnRpbWVBeGlzVyAvIDI7CiAgICAgIC8vICAgfQogICAgICAvLyB9KQogICAgICAvLyBjdXJSZWN0Lm9uKCdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZSkgewogICAgICAvLyAgIF90aGlzLnRpbWVBeGlzRG93blggPSBlLmNsaWVudFg7CiAgICAgIC8vICAgX3RoaXMudGltZUF4aXNEcm9wRmxhZyA9IDE7CiAgICAgIC8vIH0pCiAgICAgIC8vIGN1clJlY3Qub24oJ21vdXNldXAnLCBmdW5jdGlvbiAoZSkgewogICAgICAvLyAgIF90aGlzLnRpbWVBeGlzRG93blggPSBlLmNsaWVudFg7CiAgICAgIC8vICAgX3RoaXMudGltZUF4aXNEcm9wRmxhZyA9IDA7CiAgICAgIC8vIH0pCiAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgogICAgICBfdGhpcy5kcmF3UmVjdChzdmcsIHggKyB3aWR0aCwgeSwgdG90YWxXaWR0aCAtIHdpZHRoLCBoLCAzLCAzLCAnd2hpdGUnLCAwLjMsICcnLCAidGltZUF4aXNSZWN0MiIpOwogICAgfSwKICAgIGRyYXdUeXBlUml2ZXI6IGZ1bmN0aW9uIGRyYXdUeXBlUml2ZXIoc3ZnKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgb3JpRGF0YSA9IF90aGlzLmRhdGE7CiAgICAgIHZhciByZXNEYXRhID0gW107CiAgICAgIHZhciB0cmlMaSA9IFtdOwogICAgICB2YXIgZXhlTGkgPSBbXTsKICAgICAgdmFyIGRlZnMgPSBzdmcuYXBwZW5kKCJkZWZzIik7CiAgICAgIHZhciBmaWx0ZXIgPSBkZWZzLmFwcGVuZCgiZmlsdGVyIikuYXR0cigiaWQiLCAiY29vbFNoYWRvdyIpLmF0dHIoIngiLCAiLTEwMCUiKS5hdHRyKCJ5IiwgIi0xMDAlIikgLy8KICAgICAgLmF0dHIoIndpZHRoIiwgIjMwMCUiKS5hdHRyKCJoZWlnaHQiLCAiMzAwJSIpOyAvLwoKICAgICAgZmlsdGVyLmFwcGVuZCgiZmVNb3JwaG9sb2d5IikuYXR0cigiaW4iLCAiU291cmNlR3JhcGhpYyIpLmF0dHIoInJlc3VsdCIsICJ1cHBlckxheWVyIikuYXR0cigib3BlcmF0b3IiLCAiZGlsYXRlIikuYXR0cigicmFkaXVzIiwgIjAuMiAwLjIiKTsKICAgICAgZmlsdGVyLmFwcGVuZCgiZmVNb3JwaG9sb2d5IikuYXR0cigiaW4iLCAiU291cmNlQWxwaGEiKS5hdHRyKCJyZXN1bHQiLCAiZW5sYXJnZWRBbHBoYSIpLmF0dHIoIm9wZXJhdG9yIiwgImRpbGF0ZSIpLmF0dHIoInJhZGl1cyIsICIwLjIgMC4yIik7CiAgICAgIGZpbHRlci5hcHBlbmQoImZlR2F1c3NpYW5CbHVyIikuYXR0cigiaW4iLCAiZW5sYXJnZWRBbHBoYSIpLmF0dHIoInJlc3VsdCIsICJibHVyZWRBbHBoYSIpLmF0dHIoInN0ZERldmlhdGlvbiIsICIzIik7CiAgICAgIGZpbHRlci5hcHBlbmQoImZlT2Zmc2V0IikuYXR0cigiaW4iLCAiYmx1cmVkQWxwaGEiKS5hdHRyKCJyZXN1bHQiLCAibG93ZXJMYXllciIpLmF0dHIoImR5IiwgIjEiKTsgLy8KCiAgICAgIHZhciBmZU1lcmdlID0gZmlsdGVyLmFwcGVuZCgiZmVNZXJnZSIpOwogICAgICBmZU1lcmdlLmFwcGVuZCgiZmVNZXJnZU5vZGUiKS5hdHRyKCJpbiIsICJsb3dlckxheWVyIik7CiAgICAgIGZlTWVyZ2UuYXBwZW5kKCJmZU1lcmdlTm9kZSIpLmF0dHIoImluIiwgInVwcGVyTGF5ZXIiKTsKICAgICAgdmFyIHRvdGFsID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3JpRGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBjdXJFbnQgPSBvcmlEYXRhW2ldOwogICAgICAgIHZhciB0cCA9IHt9OwogICAgICAgIHRwWydvZCddID0gaTsKICAgICAgICB0cFsnZHUnXSA9IHRvdGFsOwogICAgICAgIHRvdGFsICs9IGN1ckVudFsndG90YWxEdXJhdGlvbiddOwogICAgICAgIGNvbnNvbGUubG9nKGN1ckVudCk7CgogICAgICAgIGlmIChjdXJFbnRbJ3R5cGUnXSA9PSAiMSIpIHsKICAgICAgICAgIHRyaUxpLnB1c2godHApOwogICAgICAgIH0KCiAgICAgICAgaWYgKGN1ckVudFsndHlwZSddID09ICIyIikgewogICAgICAgICAgZXhlTGkucHVzaCh0cCk7CiAgICAgICAgfQoKICAgICAgICB2YXIgdHlwZURhdGEgPSBjdXJFbnRbImF0dHJpYnV0ZSJdWyJleHByZXNzaW9ucyJdOwogICAgICAgIHZhciB0b3RhbER1ciA9IDA7CgogICAgICAgIGZvciAodmFyIHQgaW4gdHlwZURhdGEpIHsKICAgICAgICAgIC8vIGxldCBjb2xvciA9IHR5cGVDb2xvcltpXTsKICAgICAgICAgIHZhciB0eXBlRHVyaXRpb24gPSB0eXBlRGF0YVt0XTsKICAgICAgICAgIHZhciB0b3RhbFR5cGVTZWNvbmRzID0gMDsKCiAgICAgICAgICBmb3IgKHZhciBkIGluIHR5cGVEdXJpdGlvbikgewogICAgICAgICAgICB0b3RhbFR5cGVTZWNvbmRzICs9IHRvb2xzLnRpbWUyc2Vjb25kcyh0eXBlRHVyaXRpb25bZF1bMV0pIC0gdG9vbHMudGltZTJzZWNvbmRzKHR5cGVEdXJpdGlvbltkXVswXSk7CiAgICAgICAgICB9CgogICAgICAgICAgdG90YWxEdXIgKz0gdG90YWxUeXBlU2Vjb25kczsKICAgICAgICAgIHRwW3RdID0gdG90YWxUeXBlU2Vjb25kczsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIF90IGluIHRwKSB7CiAgICAgICAgICBpZiAoX3QgIT0gJ29kJyAmJiBfdCAhPSAnZHUnKSB7CiAgICAgICAgICAgIHRwW190XSAvPSB0b3RhbER1cjsKCiAgICAgICAgICAgIGlmICh0b3RhbER1ciA9PSAwKSB7CiAgICAgICAgICAgICAgdHBbX3RdID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmVzRGF0YS5wdXNoKHRwKTsKICAgICAgfQoKICAgICAgdmFyIGRhdGEgPSByZXNEYXRhOwogICAgICB2YXIgc3RhY2sgPSBkMy5zdGFjaygpLmtleXMoWycxJywgJzInLCAnMyddKS5vcmRlcihkMy5zdGFja09yZGVySW5zaWRlT3V0KS5vZmZzZXQoZDMuc3RhY2tPZmZzZXRXaWdnbGUpOwogICAgICB2YXIgeVJhbmdlV2lkdGggPSA3MDsKICAgICAgdmFyIHcgPSBwYXJzZUludChzdmcuYXR0cigid2lkdGgiKSkgKyAzMDsKICAgICAgdmFyIHhTdGVwID0gdyAvIG9yaURhdGEubGVuZ3RoOwogICAgICB2YXIgeFNjYWxlID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIHRvdGFsXSkucmFuZ2UoWzAsIHddKTsKICAgICAgdmFyIHlTY2FsZSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFstMSwgMV0pLnJhbmdlKFswLCA3MF0pOwogICAgICB2YXIgYXJlYSA9IGQzLmFyZWEoKS5jdXJ2ZShkMy5jdXJ2ZUJhc2lzKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIDE1ICsgeFNjYWxlKGQuZGF0YS5kdSkgKyBkLmRhdGEub2QgKiAxMDsgLy94U3RlcCArIDE1OwogICAgICB9KS55MChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiAxNTMgKyB5UmFuZ2VXaWR0aCAtIHlTY2FsZShkWzBdKTsKICAgICAgfSkueTEoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gMTUzICsgeVJhbmdlV2lkdGggLSB5U2NhbGUoZFsxXSk7CiAgICAgIH0pOwogICAgICB2YXIgc3RhY2tEYXRhID0gc3RhY2soZGF0YSk7CiAgICAgIGNvbnNvbGUubG9nKCJzdGFjayIsIHJlc0RhdGEsIHN0YWNrRGF0YSk7CiAgICAgIHZhciBsZW5UaHJlc2hvbGQgPSAwLjQ7CiAgICAgIHZhciBpY29uTGkgPSB7fTsKCiAgICAgIGZvciAodmFyIHMgaW4gc3RhY2tEYXRhKSB7CiAgICAgICAgaWNvbkxpW3NdID0gW107CgogICAgICAgIGZvciAodmFyIF9pMiBpbiBzdGFja0RhdGFbc10pIHsKICAgICAgICAgIHZhciBsZW5BcmVhID0gc3RhY2tEYXRhW3NdW19pMl07CgogICAgICAgICAgaWYgKGxlbkFyZWFbMV0gLSBsZW5BcmVhWzBdID4gMC40KSB7CiAgICAgICAgICAgIGljb25MaVtzXS5wdXNoKFtfaTIsIGxlbkFyZWFdKTsKICAgICAgICAgIH0KCiAgICAgICAgICBmb3IgKHZhciBsaSBpbiBpY29uTGlbc10pIHsKICAgICAgICAgICAgaWYgKF9pMiA8IGljb25MaVtzXVtsaV1bMF0gKyAyKSB7CiAgICAgICAgICAgICAgdmFyIHNlbGVjdEFyZWEgPSBpY29uTGlbc11bbGldWzFdOwoKICAgICAgICAgICAgICBpZiAoc2VsZWN0QXJlYVsxXSAtIGxlbkFyZWFbMV0gLSAoc2VsZWN0QXJlYVswXSAtIGxlbkFyZWFbMF0pIDwgMC4yKSB7CiAgICAgICAgICAgICAgICBpY29uTGlbc10uc3BsaWNlKHMsIDEpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSAvLyBsZXQgYXJlYUcgPSBzdmcuYXBwZW5kKCJnIikKCgogICAgICB2YXIgdHlwZUNvbG9yID0gewogICAgICAgICIxIjogIiNmZjljOWMiLAogICAgICAgICIyIjogIiNmNGY0ZDAiLAogICAgICAgICIzIjogIiM2ZjhiZTAiCiAgICAgIH07CiAgICAgIHZhciBjb2xvckxpID0gX3RoaXMubWNvbG9yOwogICAgICBzdmcuc2VsZWN0QWxsKCJwYXRoIikuZGF0YShzdGFja0RhdGEpLmpvaW4oInBhdGgiKS5hdHRyKCJpZCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQua2V5OwogICAgICB9KS5hdHRyKCJjbGFzcyIsICJyaXZlciIpLmF0dHIoImQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBhcmVhKGQpOwogICAgICB9KS5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gdHlwZUNvbG9yW2Qua2V5XTsKICAgICAgfSkub24oIm1vdXNlb3ZlciIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZDMuc2VsZWN0QWxsKCIucml2ZXIiKS5zdHlsZSgiZmlsdGVyIiwgInVybCgpIik7CiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnN0eWxlKCJmaWx0ZXIiLCAidXJsKCNjb29sU2hhZG93KSIpOwogICAgICB9KTsKCiAgICAgIGZvciAodmFyIF90MiBpbiB0cmlMaSkgewogICAgICAgIHZhciBfYXJlYSA9IHRvb2xzLmNhbGNUcmlhbmdsZSh0cmlMaVtfdDJdWydvZCddICogeFN0ZXAsIC0zMCwgMTQpOwoKICAgICAgICBfdGhpcy5kcmF3VHJpYW5nbGUoc3ZnLCAicmdiKDI1MCwgMTk5LCA4OCkiLCBfYXJlYSwgInJnYigyNTAsIDE5OSwgODgpIiwgMSwgMTUsICJlbnRFIiwgImVudEVfIi5jb25jYXQoZGF0YVsnaWQnXSkpOwoKICAgICAgICBfdGhpcy5kcmF3VHh0KHN2ZywgdHJpTGlbX3QyXVsnb2QnXSAqIHhTdGVwLCAtMjMsICJUIiwgIndoaXRlIiwgMCwgIm1pZGRsZSIsIDE4KTsKICAgICAgfQoKICAgICAgZm9yICh2YXIgX3QzIGluIGV4ZUxpKSB7CiAgICAgICAgdmFyIF9hcmVhMiA9IHRvb2xzLmNhbGNUcmlhbmdsZShleGVMaVtfdDNdWydvZCddICogeFN0ZXAsIC0zMCwgMTQpOwoKICAgICAgICBfdGhpcy5kcmF3VHJpYW5nbGUoc3ZnLCAicmdiKDI1MCwgMTk5LCA4OCkiLCBfYXJlYTIsICJyZ2IoMjUwLCAxOTksIDg4KSIsIDEsIDE1LCAiZW50RSIsICJlbnRFXyIuY29uY2F0KGRhdGFbJ2lkJ10pKTsKCiAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIGV4ZUxpW190M11bJ29kJ10gKiB4U3RlcCwgLTIzLCAiRSIsICJ3aGl0ZSIsIDAsICJtaWRkbGUiLCAxOCk7CiAgICAgIH0KICAgIH0sCiAgICBkcmF3VGltZUF4aXM6IGZ1bmN0aW9uIGRyYXdUaW1lQXhpcyhzdmcpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzdW1Ub3RhbER1cmF0aW9uID0gX3RoaXMuc3VtVG90YWxEdXJhdGlvbjsKICAgICAgdmFyIGRhdGEgPSBfdGhpcy5kcmF3RW50aXR5TG9jYXRpb247CiAgICAgIHZhciBhZGREYXRhID0gdG9vbHMuZGVlcENsb25lKF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbik7CiAgICAgIHZhciBtYXJnaW4gPSBfdGhpcy5tYXJnaW47CiAgICAgIHZhciBwcmV4ID0gbWFyZ2luLmxlZnQ7CiAgICAgIHZhciBwcmV5ID0gNTA7CiAgICAgIHZhciB3aWR0aCA9IHN2Zy5hdHRyKCJ3aWR0aCIpIC0gMjA7IC8vbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7CgogICAgICB2YXIgaGVpZ2h0ID0gX3RoaXMuaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207CiAgICAgIHZhciB3aWR0aFNjYWxlID0gZDMuc2NhbGVMaW5lYXIoWzAsIHN1bVRvdGFsRHVyYXRpb25dLCBbMCwgd2lkdGhdKTsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChzZWxmLCBpbmR4LCBhcnIpIHsKICAgICAgICB2YXIgdG90YWxEdXJhdGlvblZhbHVlID0gc2VsZlsndG90YWxEdXJhdGlvbiddOwogICAgICAgIHZhciB0aW1lTGlzdCA9IHNlbGZbJ3RpbWUnXTsKICAgICAgICB2YXIgaWQgPSBzZWxmWydpZCddOwogICAgICAgIHZhciBkdXJhdGlvbiA9IHRvb2xzLnRpbWUyc2Vjb25kcyh0aW1lTGlzdFsxXSkgLSB0b29scy50aW1lMnNlY29uZHModGltZUxpc3RbMF0pOyAvLyBjb25zb2xlLmxvZyh0aW1lTGlzdCx0b29scy50aW1lMnNlY29uZHModGltZUxpc3RbMF0pKQoKICAgICAgICB2YXIgZXZXaWR0aCA9IHdpZHRoU2NhbGUoZHVyYXRpb24pIC0gNDsKICAgICAgICB2YXIgZXZUV2lkdGggPSB3aWR0aFNjYWxlKHRvdGFsRHVyYXRpb25WYWx1ZSk7CiAgICAgICAgdmFyIGxheSA9IHBhcnNlSW50KHNlbGZbJ2xheW91dCddKTsKICAgICAgICB2YXIgZXZIaWdodCA9IDgwIC0gMjAgKiBsYXk7CiAgICAgICAgdmFyIHggPSBwcmV4OwogICAgICAgIHZhciB5ID0gcHJleSArIDIwICogbGF5OwogICAgICAgIHByZXggKz0gZXZXaWR0aCArIDQ7CiAgICAgICAgdmFyIGNyID0gMzsgLy8gaWYoc2VsZlsndHlwZSddPT0wKXsKCiAgICAgICAgaWYgKDEpIHsKICAgICAgICAgIGlmIChsYXkgPT0gMCkgewogICAgICAgICAgICBfdGhpcy5kcmF3UmVjdChzdmcsIHggLSAxLCB5IC0gNTksIDMsIDQyLCAwLCAwLCBzZWxmWydjb2xvciddLCAwLjQsICd3aGl0ZScsICJ0aW1lQXhpc0VudEJsXyIuY29uY2F0KGluZHgpLCAwLCAndGltZUF4aXNFbnRCbCcpOwoKICAgICAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIHggKyAyMywgeSAtIDIzLCAxMCwgW3NlbGZbJ3RpbWUnXVswXS5zcGxpdCgiOiIpLnNwbGljZSgxKS5qb2luKCI6IildLCBzZWxmWydjb2xvciddLCAxNSwgInRpbWVEdXJUZXh0XyIuY29uY2F0KGlkKSwgJ3RpbWVEdXlyVGV4dCcpOwoKICAgICAgICAgICAgX3RoaXMuZHJhd1JlY3Qoc3ZnLCB4IC0gMiwgeSAtIDIwLCBldlRXaWR0aCwgMTAwLCA2LCA2LCBzZWxmWydjb2xvciddLCAwLjMsICd3aGl0ZScsICJ0aW1lQXhpc0VudEJfIi5jb25jYXQoaW5keCksIDEuNSwgJ3RpbWVBeGlzRW50QicpOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLmRyYXdSZWN0KHN2ZywgeCwgeSwgZXZXaWR0aCwgZXZIaWdodCwgMywgMywgc2VsZlsnY29sb3InXSwgMC40LCBzZWxmWydjb2xvckQnXSwgInRpbWVBeGlzRW50XyIuY29uY2F0KGlkKSwgMS41LCAndGltZUF4aXNFbnQnKTsKCiAgICAgICAgICBfdGhpcy5kcmF3VHh0KHN2ZywgeCArIGV2V2lkdGggLyAyLCB5ICsgZXZIaWdodCArIDIwLCAxMCwgW3NlbGZbJ25hbWUnXS5zcGxpdCgiICIpLmpvaW4oIiAiKV0sICJncmV5IiwgMTYsICJ0aW1lVGV4dF8iLmNvbmNhdChpZCksICd0aW1lVGV4dCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAobGF5ID09IDApIHsKICAgICAgICAgICAgX3RoaXMuZHJhd1JlY3Qoc3ZnLCB4IC0gMiwgeSAtIDIwLCBldlRXaWR0aCwgMTAwLCA2LCA2LCBzZWxmWydjb2xvciddLCAwLjMsICd3aGl0ZScsICJ0aW1lQXhpc0VudEJfIi5jb25jYXQoaWQpLCAxLjUsICd0aW1lQXhpc0VudCcpOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBhcmVhID0gW1t4ICsgY3IsIHkgKyBldkhpZ2h0IC0gY3JdLCBbeCAtIGNyICsgZXZXaWR0aCwgeSArIGV2SGlnaHQgLSBjcl0sIFt4ICsgZXZXaWR0aCAvIDIsIHldXTsKCiAgICAgICAgICBfdGhpcy5kcmF3VHJpYW5nbGUoc3ZnLCBzZWxmWydjb2xvciddLCBhcmVhLCBzZWxmWydjb2xvciddLCAxLCBjciAqIDIsICJlbnRFIiwgImVudEVfIi5jb25jYXQoZGF0YVsnaWQnXSkpOwogICAgICAgIH0KCiAgICAgICAgYWRkRGF0YVtpbmR4XVsndGltZVgnXSA9IHg7CiAgICAgICAgYWRkRGF0YVtpbmR4XVsndGltZVcnXSA9IGV2V2lkdGg7CiAgICAgIH0pOwogICAgICBkMy5zZWxlY3RBbGwoJy50aW1lVGV4dCcpLmF0dHIoIm9wYWNpdHkiLCAwKTsKICAgICAgX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uID0gYWRkRGF0YTsKICAgIH0sCiAgICBkcmF3VHJpYW5nbGU6IGZ1bmN0aW9uIGRyYXdUcmlhbmdsZShzdmcsIGNvbG9yLCBwb2ludHMsIHN0cm9rZSkgewogICAgICB2YXIgb3BhY2l0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogMTsKICAgICAgdmFyIHN0cm9rZVcgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IDE1OwogICAgICB2YXIgY2xhc3NOYSA9IGFyZ3VtZW50cy5sZW5ndGggPiA2ID8gYXJndW1lbnRzWzZdIDogdW5kZWZpbmVkOwogICAgICB2YXIgaWROYSA9IGFyZ3VtZW50cy5sZW5ndGggPiA3ID8gYXJndW1lbnRzWzddIDogdW5kZWZpbmVkOwoKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHN2Zy5hcHBlbmQoInBvbHlnb24iKS5hdHRyKCJwb2ludHMiLCBwb2ludHMpLmF0dHIoImZpbGwiLCBjb2xvcikuYXR0cigiaWQiLCBpZE5hKS5hdHRyKCJjbGFzcyIsIGNsYXNzTmEpLmF0dHIoInN0cm9rZS1saW5lam9pbiIsICJyb3VuZCIpLmF0dHIoIm9wYWNpdHkiLCBvcGFjaXR5KS5hdHRyKCJzdHJva2UiLCBzdHJva2UpLm9uKCJtb3VzZW92ZXIiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIC8vIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJyIiwgciAqIDEuMSkKICAgICAgICB2YXIgY2xhc3NOID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoImNsYXNzIik7CiAgICAgICAgdmFyIGlkTiA9IGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJpZCIpLnNwbGl0KCJfIilbMV07CiAgICAgICAgX3RoaXMub3ZlckVudGl0eUlkID0gaWROOwogICAgICAgIHZhciBzaG93UmVsID0gX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdDsKCiAgICAgICAgaWYgKCFzaG93UmVsLmluY2x1ZGVzKHBhcnNlSW50KGlkTikpKSB7CiAgICAgICAgICBzaG93UmVsLnB1c2gocGFyc2VJbnQoaWROKSk7CiAgICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRPdmVyU3RhdGUgPSAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRPdmVyU3RhdGUgPSAxOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdCA9IHNob3dSZWw7CgogICAgICAgIGlmIChjbGFzc04gPT0gJ2xpbmVQb2ludCcpIHsKICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJvcGFjaXR5IiwgMSkuYXR0cigiciIsIDUpOwogICAgICAgIH0gLy8gZWxzZSB7CiAgICAgICAgLy8gICBkMy5zZWxlY3RBbGwoIi5mIiArIGRhdGFbJ2lkJ10pCiAgICAgICAgLy8gICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCBmdW5jdGlvbiAoZCkgewogICAgICAgIC8vICAgICAgIGxldCB0cmFuc2Zvcm1kID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoInRyYW5zZm9ybSIpCiAgICAgICAgLy8gICAgICAgcmV0dXJuIHRyYW5zZm9ybWQuc3BsaXQoIiAiKVswXSArICIgc2NhbGUoMS4xKSIKICAgICAgICAvLyAgICAgfSkKICAgICAgICAvLyAgIGQzLnNlbGVjdEFsbCgiLmJhc2ljUmVsIikKICAgICAgICAvLyAgICAgLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAvLyAgICAgICBsZXQgY2xhc3NOID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoImNsYXNzIik7CiAgICAgICAgLy8gICAgICAgbGV0IGNsYXNzTkxpc3QgPSBjbGFzc04uc3BsaXQoIiAiKTsKICAgICAgICAvLyAgICAgICBsZXQgamcgPSAwOwogICAgICAgIC8vICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xhc3NOTGlzdC5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAvLyAgICAgICAgIGlmICgnc291cmNlJyArIGRhdGFbJ2lkJ10gPT0gY2xhc3NOTGlzdFtpXSkgeyBqZyA9IDE7IH0KICAgICAgICAvLyAgICAgICAgIGlmICgndGFyZ2V0JyArIGRhdGFbJ2lkJ10gPT0gY2xhc3NOTGlzdFtpXSkgeyBqZyA9IDE7IH0KICAgICAgICAvLyAgICAgICB9CiAgICAgICAgLy8gICAgICAgaWYgKGpnID09IDEpIHsKICAgICAgICAvLyAgICAgICAgIC8vIGNsYXNzTiArPSAiIGFjdGl2ZVMiOwogICAgICAgIC8vICAgICAgIH0KICAgICAgICAvLyAgICAgICByZXR1cm4gY2xhc3NOOwogICAgICAgIC8vICAgICB9KQogICAgICAgIC8vIH0KCiAgICAgIH0pLm9uKCJtb3VzZWxlYXZlIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAvLyBkMy5zZWxlY3QodGhpcykuYXR0cigiciIsIHIpCiAgICAgICAgX3RoaXMub3ZlckVudGl0eUlkID0gIiI7IC8vX3RoaXMuY3VyRW50SWQ7CgogICAgICAgIHZhciBjbGFzc04gPSBkMy5zZWxlY3QodGhpcykuYXR0cigiY2xhc3MiKTsKICAgICAgICB2YXIgaWROID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoImlkIikuc3BsaXQoIl8iKVsxXTsKICAgICAgICB2YXIgc2hvd1JlbCA9IF90aGlzLnNob3dFbnRpdHlSZWxJZExpc3Q7CgogICAgICAgIGlmIChfdGhpcy5zaG93RW50aXR5UmVsSWRPdmVyU3RhdGUgPT0gMSkgewogICAgICAgICAgc2hvd1JlbC5wdXNoKHBhcnNlSW50KGlkTikpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzaG93UmVsLnNwbGljZShzaG93UmVsLmluZGV4T2YocGFyc2VJbnQoaWROKSksIDEpOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdCA9IHNob3dSZWw7CgogICAgICAgIGlmIChjbGFzc04gPT0gJ2xpbmVQb2ludCcpIHsKICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJvcGFjaXR5IiwgMCkuYXR0cigiciIsIDUpOwogICAgICAgIH0gLy8gZWxzZSB7CiAgICAgICAgLy8gICBkMy5zZWxlY3RBbGwoIi5mIiArIGRhdGFbJ2lkJ10pCiAgICAgICAgLy8gICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCBmdW5jdGlvbiAoZCkgewogICAgICAgIC8vICAgICAgIGxldCB0cmFuc2Zvcm1kID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoInRyYW5zZm9ybSIpCiAgICAgICAgLy8gICAgICAgcmV0dXJuIHRyYW5zZm9ybWQuc3BsaXQoIiAiKVswXSArICIgc2NhbGUoMSkiCiAgICAgICAgLy8gICAgIH0pCiAgICAgICAgLy8gICBkMy5zZWxlY3QoIiNncmFwaFBhbmVsIikuc2VsZWN0QWxsKCJwYXRoIikKICAgICAgICAvLyAgICAgLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAvLyAgICAgICBsZXQgdGhpc1NlbGVjdCA9IGQzLnNlbGVjdCh0aGlzKQogICAgICAgIC8vICAgICAgIGxldCBjbGFzc04gPSB0aGlzU2VsZWN0LmF0dHIoImNsYXNzIik7CiAgICAgICAgLy8gICAgICAgbGV0IGNsYXNzTkxpc3QgPSBjbGFzc04uc3BsaXQoIiAiKQogICAgICAgIC8vICAgICAgIGlmIChjbGFzc05MaXN0W2NsYXNzTkxpc3QubGVuZ3RoIC0gMV0gPT0gImFjdGl2ZVMiKSB7CiAgICAgICAgLy8gICAgICAgICBjbGFzc04gPSAiIjsKICAgICAgICAvLyAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xhc3NOTGlzdC5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAvLyAgICAgICAgICAgY2xhc3NOICs9ICIgIiArIGNsYXNzTkxpc3RbaV07CiAgICAgICAgLy8gICAgICAgICB9CiAgICAgICAgLy8gICAgICAgfQogICAgICAgIC8vICAgICAgIHJldHVybiBjbGFzc04KICAgICAgICAvLyAgICAgfSkKICAgICAgICAvLyB9CgogICAgICB9KS5vbigiY2xpY2siLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciBpZE4gPSBkMy5zZWxlY3QodGhpcykuYXR0cigiaWQiKS5zcGxpdCgiXyIpWzFdOwogICAgICAgIHZhciBzaG93UmVsID0gX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdDsgLy8gIC0gX3RoaXMuc2hvd0VudGl0eVJlbElkT3ZlclN0YXRlOwoKICAgICAgICBpZiAoIXNob3dSZWwuaW5jbHVkZXMocGFyc2VJbnQoaWROKSkpIHsKICAgICAgICAgIHNob3dSZWwgPSBbcGFyc2VJbnQoaWROKV07CiAgICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRPdmVyU3RhdGUgPSAxOwogICAgICAgIH0gZWxzZSBpZiAoc2hvd1JlbC5pbmNsdWRlcyhwYXJzZUludChpZE4pKSkgewogICAgICAgICAgLy8gc2hvd1JlbC5maWx0ZXIoaXRlbT0+e3JldHVybiBpdGVtPT1wYXJzZUludChpZE4pfSkKICAgICAgICAgIF90aGlzLnNob3dFbnRpdHlSZWxJZE92ZXJTdGF0ZSA9IDA7CiAgICAgICAgICBzaG93UmVsLnNwbGljZShzaG93UmVsLmluZGV4T2YocGFyc2VJbnQoaWROKSksIDEpOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdCA9IHNob3dSZWw7IC8vIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJyIiwgcik7CiAgICAgICAgLy8gZDMuc2VsZWN0QWxsKCIuZiIgKyBkYXRhWydpZCddKQogICAgICAgIC8vICAgLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgLy8gICAgIGxldCB0cmFuc2Zvcm1kID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoInRyYW5zZm9ybSIpCiAgICAgICAgLy8gICAgIHJldHVybiB0cmFuc2Zvcm1kLnNwbGl0KCIgIilbMF0gKyAiIHNjYWxlKDEpIgogICAgICAgIC8vICAgfSkKCiAgICAgICAgdmFyIHRoaXNJZCA9IHRoaXMuaWQuc3BsaXQoIl8iKVsxXTsKICAgICAgICBfdGhpcy5jdXJFbnRJZCA9IHRoaXNJZDsKCiAgICAgICAgdmFyIHRoaXNEYXRhID0gX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uLmZpbmQoZnVuY3Rpb24gKGEpIHsKICAgICAgICAgIHJldHVybiBhWydpZCddID09IHRoaXNJZDsKICAgICAgICB9KTsKCiAgICAgICAgdmFyIHRoaXNUaW1lID0gdGhpc0RhdGFbJ3RpbWUnXTsKCiAgICAgICAgX3RoaXMuY2xpY2tfRW50KHRoaXNUaW1lKTsKCiAgICAgICAgdmFyIHBzdmcgPSBkMy5zZWxlY3QoIiNlbnRHIik7CiAgICAgICAgdmFyIGR3ID0gcHN2Zy5hdHRyKCJ3aWR0aCIpOwogICAgICAgIHZhciBkaCA9IHBzdmcuYXR0cigiaGVpZ2h0Iik7CiAgICAgICAgcHN2Zy5yZW1vdmUoKTsKICAgICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjZWRpdEVudCcpLmFwcGVuZCgiZyIpLmF0dHIoImlkIiwgImVudEciKS5hdHRyKCJ3aWR0aCIsIGR3KS5hdHRyKCJoZWlnaHQiLCBkaCk7CgogICAgICAgIF90aGlzLmRyYXdFbnRpdHkoc3ZnLCBkdyAvIDIsIDEwMCwgNTAsIHRoaXNEYXRhLCAxKTsgLy8gaWYgKHRoaXNEYXRhWyd0eXBlJ10gPT0gMCApIHsKICAgICAgICAvLyBfdGhpcy5kcmF3RW50aXR5VGltZUF4aXMoc3ZnLHRoaXNEYXRhLFtkdy8yLDEwMCwxMF0pOwogICAgICAgIC8vIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzVGltZSx0aGlzSWQsdGhpc0RhdGEpCgogICAgICB9KS5hdHRyKCJzdHJva2Utd2lkdGgiLCBzdHJva2VXKTsKICAgIH0sCiAgICBkcmF3cG9seWdvbjogZnVuY3Rpb24gZHJhd3BvbHlnb24oc3ZnLCBjb2xvciwgYXJlYXMsIHN0cm9rZSkgewogICAgICB2YXIgb3BhY2l0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogMTsKICAgICAgc3ZnLmFwcGVuZCgicG9seWdvbiIpLmF0dHIoInBvaW50cyIsIGFyZWFzKS5hdHRyKCJmaWxsIiwgY29sb3IpLmF0dHIoIm9wYWNpdHkiLCBvcGFjaXR5KS5hdHRyKCJzdHJva2UiLCBzdHJva2UpLmF0dHIoInN0cm9rZS13aWR0aCIsICIxLjVweCIpOwogICAgfSwKICAgIGRyYXdFbnRpdHlUaW1lQXhpczogZnVuY3Rpb24gZHJhd0VudGl0eVRpbWVBeGlzKHN2ZywgZW50RGF0YSkgewogICAgICB2YXIgY29weSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMDsKCiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgeCA9IGVudERhdGFbJ3gnXTsKICAgICAgdmFyIHIgPSBlbnREYXRhWydyJ107CiAgICAgIHZhciB5ID0gZW50RGF0YVsneSddICsgciAvIDI7CgogICAgICBpZiAoY29weSAhPSAwKSB7CiAgICAgICAgeCA9IGNvcHlbMF07CiAgICAgICAgciA9IGNvcHlbMl07CiAgICAgICAgeSA9IGNvcHlbMV0gKyByIC8gMjsKICAgICAgfQoKICAgICAgdmFyIHBhdGgxID0gZDMucGF0aCgpOwogICAgICB2YXIgamcxID0gMDsKICAgICAgdmFyIHBhdGgyID0gZDMucGF0aCgpOwogICAgICB2YXIgamcyID0gMDsKICAgICAgdmFyIGRhSWQgPSBlbnREYXRhWydpZCddOwogICAgICB2YXIgZW50RGF0YU8gPSBfdGhpcy5kcmF3RW50aXR5TG9jYXRpb247CiAgICAgIHZhciBzdW1Ub3RhbER1cmF0aW9uID0gX3RoaXMuc3VtVG90YWxEdXJhdGlvbjsKICAgICAgdmFyIHdpZHRoU2NhbGUgPSBkMy5zY2FsZUxpbmVhcihbMCwgc3VtVG90YWxEdXJhdGlvbl0sIFswLCBNYXRoLlBJXSk7CiAgICAgIHZhciB0aW1lU3RlcFIgPSAwOwogICAgICB2YXIgdGltZVN0YXJ0UiA9IC1NYXRoLlBJIC8gMjsKICAgICAgdmFyIGludGVyID0gMDsKICAgICAgdmFyIHNvbnMgPSB0b29scy5kZWVwQ2xvbmUoZW50RGF0YVsnc29uJ10pOwogICAgICB2YXIgcmVsTGlzdCA9IFtdOwogICAgICB2YXIgcmVsUm9vdExpc3QgPSBbXTsKICAgICAgdmFyIHBzTnVtID0gMC41OwoKICAgICAgaWYgKHNvbnMubGVuZ3RoID4gMCkgewogICAgICAgIGludGVyID0gMTQ7CiAgICAgIH0KCiAgICAgIHZhciByZWxEYXRhID0gX3RoaXMucmVsRGF0YTsKICAgICAgdmFyIG9EYXRhID0gX3RoaXMuZHJhd0VudGl0eUxvY2F0aW9uOwogICAgICB2YXIgYmFzaWNSZWwgPSByZWxEYXRhWydiYXNpY1JlbCddOwoKICAgICAgdmFyIF9sb29wOSA9IGZ1bmN0aW9uIF9sb29wOShyZSkgewogICAgICAgIHZhciBzb3JjZUlkID0gYmFzaWNSZWxbcmVdWzBdOwogICAgICAgIHZhciB0YXJnZXRJZCA9IGJhc2ljUmVsW3JlXVsxXTsKICAgICAgICB2YXIgY05vZGUgPSAnJzsKCiAgICAgICAgaWYgKHNvcmNlSWQgPT0gZGFJZCkgewogICAgICAgICAgY05vZGUgPSBvRGF0YS5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIHJldHVybiBkWydpZCddID09IHRhcmdldElkOwogICAgICAgICAgfSk7CiAgICAgICAgICByZWxMaXN0LnB1c2godGFyZ2V0SWQpOwogICAgICAgICAgcmVsUm9vdExpc3QucHVzaChjTm9kZVsncm9vdEluZGV4J10pOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRhcmdldElkID09IGRhSWQpIHsKICAgICAgICAgIGNOb2RlID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSBzb3JjZUlkOwogICAgICAgICAgfSk7CiAgICAgICAgICByZWxMaXN0LnB1c2goc29yY2VJZCk7CiAgICAgICAgICByZWxSb290TGlzdC5wdXNoKGNOb2RlWydyb290SW5kZXgnXSk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgZm9yICh2YXIgcmUgPSAwOyByZSA8IGJhc2ljUmVsLmxlbmd0aDsgcmUrKykgewogICAgICAgIF9sb29wOShyZSk7CiAgICAgIH0KCiAgICAgIDsgLy8gaWYoZW50RGF0YVtdKSAKCiAgICAgIHZhciB3bGluZSA9IDA7CiAgICAgIHZhciBzdW1Ub3RhbER1cmF0aW9uRiA9IDA7CiAgICAgIGVudERhdGFPLmZvckVhY2goZnVuY3Rpb24gKHNlbGYsIGluZHgsIGFycikgewogICAgICAgIHZhciB0b3RhbER1cmF0aW9uVmFsdWUgPSBzZWxmWyd0b3RhbER1cmF0aW9uJ107CiAgICAgICAgdmFyIHRpbWVMaXN0ID0gc2VsZlsndGltZSddOwogICAgICAgIHZhciBsYXlvdXQgPSBzZWxmWydsYXlvdXQnXTsKICAgICAgICB2YXIgcm9vdEluZGV4ID0gc2VsZlsncm9vdEluZGV4J107CiAgICAgICAgdmFyIGR1cmF0aW9uID0gdG9vbHMudGltZTJzZWNvbmRzKHRpbWVMaXN0WzFdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyh0aW1lTGlzdFswXSk7CiAgICAgICAgdGltZVN0ZXBSID0gd2lkdGhTY2FsZShkdXJhdGlvbik7CgogICAgICAgIGlmICghcmVsUm9vdExpc3QuaW5jbHVkZXMocm9vdEluZGV4KSkgewogICAgICAgICAgd2xpbmUgKz0gdGltZVN0ZXBSICogcHNOdW07CiAgICAgICAgICBzdW1Ub3RhbER1cmF0aW9uRiArPSBkdXJhdGlvbjsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgd2lkdGhTY2FsZUEgPSBkMy5zY2FsZUxpbmVhcihbMCwgc3VtVG90YWxEdXJhdGlvbiAtIHN1bVRvdGFsRHVyYXRpb25GXSwgWzAsIE1hdGguUEkgLSB3bGluZV0pOyAvLyBpZihyb290RW50aXR5TGlzdC5sZW5ndGg9PTApewogICAgICAvLyAgIHdpZHRoU2NhbGVBID0gd2lkdGhTY2FsZQogICAgICAvLyB9CiAgICAgIC8vIGxldCB3bGluZSA9IDA7CgogICAgICBlbnREYXRhTy5mb3JFYWNoKGZ1bmN0aW9uIChzZWxmLCBpbmR4LCBhcnIpIHsKICAgICAgICB2YXIgdG90YWxEdXJhdGlvblZhbHVlID0gc2VsZlsndG90YWxEdXJhdGlvbiddOwogICAgICAgIHZhciB0aW1lTGlzdCA9IHNlbGZbJ3RpbWUnXTsKICAgICAgICB2YXIgbGF5b3V0ID0gc2VsZlsnbGF5b3V0J107CiAgICAgICAgdmFyIHJvb3RJbmRleCA9IHNlbGZbJ3Jvb3RJbmRleCddOwogICAgICAgIHZhciBjSWQgPSBzZWxmWydpZCddOwogICAgICAgIHZhciBkdXJhdGlvbiA9IHRvb2xzLnRpbWUyc2Vjb25kcyh0aW1lTGlzdFsxXSkgLSB0b29scy50aW1lMnNlY29uZHModGltZUxpc3RbMF0pOwogICAgICAgIHRpbWVTdGVwUiA9IHdpZHRoU2NhbGUoZHVyYXRpb24pOwoKICAgICAgICBpZiAoIXJlbFJvb3RMaXN0LmluY2x1ZGVzKHJvb3RJbmRleCkpIHsKICAgICAgICAgIGlmIChyZWxSb290TGlzdC5sZW5ndGggIT0gMCkgewogICAgICAgICAgICB0aW1lU3RlcFIgPSBwc051bSAqIHdpZHRoU2NhbGUoZHVyYXRpb24pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aW1lU3RlcFIgPSB3aWR0aFNjYWxlQShkdXJhdGlvbik7CiAgICAgICAgfQoKICAgICAgICB2YXIgZW5kQW5nbGV0ID0gdGltZVN0YXJ0UiArIHRpbWVTdGVwUjsKICAgICAgICB2YXIgZGF0YXNldCA9IHsKICAgICAgICAgIHN0YXJ0QW5nbGU6IHRpbWVTdGFydFIsCiAgICAgICAgICBlbmRBbmdsZTogZW5kQW5nbGV0CiAgICAgICAgfTsgLy/liJvlu7rkuIDkuKrlvKfnlJ/miJDlmagKCiAgICAgICAgdGltZVN0YXJ0UiA9IGVuZEFuZ2xldDsKICAgICAgICB2YXIgY29sb3IgPSAnYmx1ZSc7CiAgICAgICAgdmFyIHJoID0gMzA7CiAgICAgICAgdmFyIGggPSByaDsKICAgICAgICB2YXIgbmggPSAwOwoKICAgICAgICBpZiAocmVsUm9vdExpc3QubGVuZ3RoICE9IDApIHsKICAgICAgICAgIGggPSByaCAqIDAuMzIgKyByaCAqIDAuNiAtIDMgKiBsYXlvdXQ7CiAgICAgICAgICBuaCA9IHJoICogMC4zOwogICAgICAgIH0KCiAgICAgICAgaWYgKCFyZWxSb290TGlzdC5pbmNsdWRlcyhzZWxmWydyb290SW5kZXgnXSkpIHsKICAgICAgICAgIGggPSByaCAqIDAuNzsKICAgICAgICAgIG5oID0gaCAqIDAgKyBoICogMC42OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkYXRhc2V0LnN0YXJ0QW5nbGUgKz0gMC4wMDM7CiAgICAgICAgICBkYXRhc2V0LmVuZEFuZ2xlIC09IDAuMDAzOwogICAgICAgIH0KCiAgICAgICAgdmFyIGFyY1BhdGggPSBkMy5hcmMoKS5pbm5lclJhZGl1cyhyICsgaW50ZXIgKyBuaCkub3V0ZXJSYWRpdXMociArIGludGVyICsgaCk7CiAgICAgICAgdmFyIHBhdGhBcmMgPSBhcmNQYXRoKGRhdGFzZXQpOwogICAgICAgIHZhciBhcmM7CgogICAgICAgIGlmIChyZWxSb290TGlzdC5sZW5ndGggIT0gMCkgewogICAgICAgICAgdmFyIGppYW50b3VQYXRoID0gZDMucGF0aCgpOwogICAgICAgICAgamlhbnRvdVBhdGguYXJjKHgsIHkgLSByIC8gMiwgciArIGggKyBpbnRlciwgLU1hdGguUEksIDApOyAvLyBfdGhpcy5kcmF3VGltZUxpbmUoX3RoaXMuYXJjRywgamlhbnRvdVBhdGgsICJyZ2IoMjAwLDIwMCwyMDApIiwgMSwgJzksNScsICd0aW1lTGF5b3V0ICcsICd0aW1lTGF5b3V0ICcpOwoKICAgICAgICAgIGlmIChyZWxSb290TGlzdC5pbmNsdWRlcyhzZWxmWydyb290SW5kZXgnXSkpIHsKICAgICAgICAgICAgaWYgKHJlbExpc3QuaW5jbHVkZXMocGFyc2VJbnQoc2VsZlsnaWQnXSkpKSB7CiAgICAgICAgICAgICAgaWYgKGNvcHkgIT0gMCAmJiBqZzEgPT0gMCkgewogICAgICAgICAgICAgICAgamcxID0gMTsKICAgICAgICAgICAgICAgIHBhdGgxLm1vdmVUbygyLCAyNSk7CiAgICAgICAgICAgICAgICBwYXRoMS5saW5lVG8oMTUwLCAyNSk7CiAgICAgICAgICAgICAgICB2YXIgYW5nID0gZGF0YXNldC5zdGFydEFuZ2xlICsgTWF0aC5QSSAvIDI7CgogICAgICAgICAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIDcwLCAyMCwgMTAwLCBbIkFzc29jaWF0ZWQgQ29uY2VwdCJdLCAiZ3JleSIsIDE1LCAidGV4dHNfMSIpOyAvLyBwYXRoMS5saW5lVG8oKHgrMTApLCh5LXIvMisxMCkpCgoKICAgICAgICAgICAgICAgIHBhdGgxLmxpbmVUbyh4IC0gKHIgKyBpbnRlciArIGgpICogTWF0aC5jb3MoYW5nKSwgeSAtIHIgLyAyIC0gKHIgKyBpbnRlciArIGgpICogTWF0aC5zaW4oYW5nKSk7CgogICAgICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgcGF0aDEsICJyZ2IoMjAwLDIwMCwyMDApIiwgMiwgJzksNScsICdtbSAnLCAnbW0gJyk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBhcmMgPSBfdGhpcy5kcmF3QXJjKHN2ZywgeCwgeSAtIHIgLyAyLCBwYXRoQXJjLCBzZWxmWydjb2xvciddLCBzZWxmWydjb2xvciddLCAidGltZUF4aXNGb3JTZSBmIi5jb25jYXQoZW50RGF0YVsnaWQnXSwgIiAiKS5jb25jYXQoc2VsZlsnaWQnXSksICcwJywgMCwgMSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gcGF0aDEubGluZVRvKDAsMCkgCiAgICAgICAgICAgICAgYXJjID0gX3RoaXMuZHJhd0FyYyhzdmcsIHgsIHkgLSByIC8gMiwgcGF0aEFyYywgIndoaXRlIiwgc2VsZlsnY29sb3InXSwgInRpbWVBeGlzRm9yIGYiLmNvbmNhdChlbnREYXRhWydpZCddLCAiICIpLmNvbmNhdChzZWxmWydpZCddKSwgJzAnLCAwLjAsIDAuNCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFyYyA9IF90aGlzLmRyYXdBcmMoc3ZnLCB4LCB5IC0gciAvIDIsIHBhdGhBcmMsIHNlbGZbJ2NvbG9yJ10sIHNlbGZbJ2NvbG9yJ10sICJ0aW1lQXhpc0ZvciBmIi5jb25jYXQoZW50RGF0YVsnaWQnXSwgIiAiKS5jb25jYXQoc2VsZlsnaWQnXSksICcwJywgMCwgMC4yKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoZGFJZCA9PSBzZWxmWydpZCddKSB7CiAgICAgICAgICAgIHZhciBfY29sb3IgPSBkMy5zZWxlY3QoIiNlbnRDaXJjbGVfIi5jb25jYXQoc2VsZlsnaWQnXSkpLmF0dHIoImZpbGwiKTsKCiAgICAgICAgICAgIHZhciBkYSA9IHRvb2xzLmRlZXBDbG9uZShkYXRhc2V0KTsKICAgICAgICAgICAgZGEuc3RhcnRBbmdsZSA9IChkYXRhc2V0LmVuZEFuZ2xlICsgZGF0YXNldC5zdGFydEFuZ2xlKSAvIDIgLSAwLjAwMTsKICAgICAgICAgICAgZGEuZW5kQW5nbGUgPSAoZGF0YXNldC5lbmRBbmdsZSArIGRhdGFzZXQuc3RhcnRBbmdsZSkgLyAyICsgMC4wMDAxOwogICAgICAgICAgICB2YXIgYXJjUGEgPSBkMy5hcmMoKS5pbm5lclJhZGl1cyhyICsgaW50ZXIgKyAobmggKyBoKSAvIDIpLm91dGVyUmFkaXVzKHIgKyBpbnRlciArIChuaCArIGgpIC8gMik7CiAgICAgICAgICAgIHZhciBwYXRoQSA9IGFyY1BhKGRhKTsKCiAgICAgICAgICAgIGlmIChjb3B5ICE9IDAgJiYgamcyID09IDApIHsKICAgICAgICAgICAgICBqZzIgPSAxOwogICAgICAgICAgICAgIHBhdGgyLm1vdmVUbyg0MDAsIDEyNSk7CiAgICAgICAgICAgICAgcGF0aDIubGluZVRvKDI5MCwgMTI1KTsKCiAgICAgICAgICAgICAgdmFyIF9hbmcgPSBkYS5zdGFydEFuZ2xlICsgMC4wMDEgKyBNYXRoLlBJIC8gMjsKCiAgICAgICAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIDM1MCwgMTIwLCAxMDAsIFsiQ3VycmVudCBDb25jZXB0Il0sICJncmV5IiwgMTUsICJ0ZXh0c18xIik7IC8vIHBhdGgxLmxpbmVUbygoeCsxMCksKHktci8yKzEwKSkKCgogICAgICAgICAgICAgIHBhdGgyLmxpbmVUbyh4IC0gKHIgKyBpbnRlciArIGgpICogTWF0aC5jb3MoX2FuZyksIHkgLSByIC8gMiAtIChyICsgaW50ZXIgKyBoKSAqIE1hdGguc2luKF9hbmcpKTsKCiAgICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgcGF0aDIsICJyZ2IoMjAwLDIwMCwyMDApIiwgMiwgJzksNScsICdtbSAnLCAnbW0gJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzLmRyYXdBcmMoc3ZnLCB4LCB5IC0gciAvIDIsIHBhdGhBLCBfY29sb3IsIHNlbGZbJ2NvbG9yJ10sICJ0aW1lQXhpc3NlbGYgZiIuY29uY2F0KHNlbGZbJ2lkJ10pLCAnMCcsIDYsIDEpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChjb3B5ICE9IDApIHsvLyBfdGhpcy5kcmF3VGltZUxpbmUoc3ZnLCBwYXRoMSwgInJnYigyMDAsMjAwLDIwMCkiLCAzLCAnOSw1JywgJ21tICcsICdtbSAnKTsKICAgICAgICAgIH0KCiAgICAgICAgICBhcmMub24oIm1vdXNlb3ZlciIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIHZhciBjbGFzc04gPSBkMy5zZWxlY3QodGhpcykuYXR0cigiY2xhc3MiKTsKICAgICAgICAgICAgdmFyIHNJZCA9IChjbGFzc04uc3BsaXQoIiAiKVsxXSArICIiKS5zbGljZSgxKTsKICAgICAgICAgICAgdmFyIHRJZCA9IGNsYXNzTi5zcGxpdCgiICIpWzJdOwogICAgICAgICAgICB2YXIgdHlwZSA9IGNsYXNzTi5zcGxpdCgiICIpWzBdOwogICAgICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0ID0gW3NJZF07CiAgICAgICAgICAgIF90aGlzLm92ZXJFbnRpdHlJZCA9IHNJZDsKICAgICAgICAgICAgX3RoaXMub3ZlclRhcmdldEVudGl0eUlkID0gdElkOwogICAgICAgICAgICBfdGhpcy5zaG93SU1HID0gZmFsc2U7CgogICAgICAgICAgICBpZiAodHlwZSAhPSAndGltZUF4aXNGb3InKSB7CiAgICAgICAgICAgICAgdmFyIGN1ckVudCA9IGVudERhdGFPLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChkWydpZCddKSA9PSB0SWQ7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX3RoaXMuYXNzaXN0R1RyYW5zZm9ybVggPSBwYXJzZUludCgtY3VyRW50Wyd4J10pICsgcGFyc2VGbG9hdChjdXJFbnRbJ3InXSk7IC8vICsgMjQwOwoKICAgICAgICAgICAgICBfdGhpcy5hc3Npc3RHVHJhbnNmb3JtWSA9IHBhcnNlSW50KC1jdXJFbnRbJ3knXSkgKyBwYXJzZUZsb2F0KGN1ckVudFsnciddKTsgLy8gKyAzNTA7CgogICAgICAgICAgICAgIF90aGlzLnVwZGF0YUFzc2lzdEdyYXBoUGFuZWwoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBhcmMub24oIm1vdXNlbGVhdmUiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgICB2YXIgY2xhc3NOID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoImNsYXNzIik7CiAgICAgICAgICAgIHZhciBzSWQgPSAoY2xhc3NOLnNwbGl0KCIgIilbMV0gKyAiIikuc2xpY2UoMSk7CiAgICAgICAgICAgIHZhciBzaG93UmVsID0gX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdDsKICAgICAgICAgICAgX3RoaXMub3ZlclRhcmdldEVudGl0eUlkID0gJyc7CiAgICAgICAgICAgIF90aGlzLm92ZXJFbnRpdHlJZCA9ICIiOyAvL190aGlzLmN1ckVudElkOwoKICAgICAgICAgICAgX3RoaXMuc2hvd0lNRyA9IHRydWU7CgogICAgICAgICAgICBpZiAoX3RoaXMuc2hvd0VudGl0eVJlbElkT3ZlclN0YXRlID09IDEpIHsKICAgICAgICAgICAgICBzaG93UmVsLnB1c2gocGFyc2VJbnQoc0lkKSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgc2hvd1JlbC5zcGxpY2Uoc2hvd1JlbC5pbmRleE9mKHBhcnNlSW50KHNJZCkpLCAxKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkcmF3RW50aXR5OiBmdW5jdGlvbiBkcmF3RW50aXR5KHN2ZywgeCwgeSwgciwgZGF0YSkgewogICAgICB2YXIgY29weSA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ICYmIGFyZ3VtZW50c1s1XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzVdIDogMDsKCiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY29sb3JfbGluZWFyID0gX3RoaXMuaW1wb3J0YW5jZUNvbG9yX2xpbmVhcjsKICAgICAgdmFyIGNvbXB1dGVfY29sb3IgPSBfdGhpcy5pbXBvcnRhbmNlQ29tcHV0ZV9jb2xvcjsKICAgICAgdmFyIHJTY2FsZSA9IF90aGlzLnJlbGV2YW5jZVNjYWxlX2xpbmVhcjsKICAgICAgdmFyIG9EYXRhID0gX3RoaXMuZGF0YTsKICAgICAgdmFyIHBhdGgxID0gZDMucGF0aCgpOwogICAgICB2YXIgcGF0aDIgPSBkMy5wYXRoKCk7CiAgICAgIHZhciBqZzIgPSAwOwogICAgICB2YXIgYW5nMiA9IDA7CiAgICAgIHZhciBwYXRoMyA9IGQzLnBhdGgoKTsKICAgICAgdmFyIGpnMyA9IDA7CiAgICAgIHZhciBhbmczID0gMDsKICAgICAgdmFyIGltcG9ydGFuY2VWYWx1ZSA9IGRhdGFbJ2F0dHJpYnV0ZSddWydpbXBvcnRhbmNlJ107IC8vIGxldCByZWxldmFuY2VWYWx1YWxlKHJlbGV2YW5jZVZhbHVlKQogICAgICAvLyB7ICdpZCc6IGRhZSA9IGRhdGFbJ2F0dHJpYnV0ZSddWydyZWxldmFuY2UnXTsKICAgICAgLy8gbGV0IHIgPSByU2N0YVtpXVsnaWQnXSwgIngiOiB4LCAiciI6IHIsICJsYXlvdXQiOiBsYXksICJ5IjogeSwgInNvbkZsYWciOiBzb25GbGFnIH0KCiAgICAgIGlmIChkYXRhWyd0eXBlJ10gPT0gJzEnKSB7CiAgICAgICAgdmFyIGFyZWEgPSB0b29scy5jYWxjVHJpYW5nbGUoeCwgeSwgcik7CgogICAgICAgIF90aGlzLmRyYXdUcmlhbmdsZShzdmcsICJyZ2IoMjUwLCAxOTksIDg4KSIsIGFyZWEsICJyZ2IoMjUwLCAxOTksIDg4KSIsIDEsIDE1LCAiZW50VCIsICJlbnRUXyIuY29uY2F0KGRhdGFbJ2lkJ10pKTsKCiAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIHgsIHkgKyA4LCAyMCwgWyJUIl0sICd3aGl0ZScsIDI4LCAiVCIpOwogICAgICB9IGVsc2UgaWYgKGRhdGFbJ3R5cGUnXSA9PSAnMicpIHsKICAgICAgICB2YXIgX2FyZWEzID0gdG9vbHMuY2FsY1RyaWFuZ2xlKHgsIHksIHIpOwoKICAgICAgICBfdGhpcy5kcmF3VHJpYW5nbGUoc3ZnLCAicmdiKDI1MCwgMTk5LCA4OCkiLCBfYXJlYTMsICJyZ2IoMjUwLCAxOTksIDg4KSIsIDEsIDE1LCAiZW50RSIsICJlbnRFXyIuY29uY2F0KGRhdGFbJ2lkJ10pKTsKCiAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIHgsIHkgKyA4LCAyMCwgWyJFIl0sICd3aGl0ZScsIDI4LCAiRSIpOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciB0eXBlU3RhcnRSOwogICAgICAgIHZhciB0eXBlU3RlcFI7CiAgICAgICAgdmFyIGRhdGFzZXQ7CiAgICAgICAgdmFyIGFyY1BhdGg7CiAgICAgICAgdmFyIHBhdGhBcmM7CiAgICAgICAgdmFyIHNvblN0YXJ0UjsKICAgICAgICB2YXIgZGF0YXNldDsKICAgICAgICB2YXIgYXJjUGF0aDsKICAgICAgICB2YXIgYXJjTWlkUGF0aDsKICAgICAgICB2YXIgcGF0aEFyYzsKICAgICAgICB2YXIgbWlkRGF0YXNldDsKICAgICAgICB2YXIgcGF0aE1pZEFyYzsKCiAgICAgICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBjeSA9IHk7CiAgICAgICAgICB2YXIgdG90YWxEdXJhdGlvbiA9IF90aGlzLnRvdGFsRHVyYXRpb247CiAgICAgICAgICB2YXIgdGltZUxpbmVTY2FsZV9saW5lYXIgPSBkMy5zY2FsZUxpbmVhcihbMCwgdG90YWxEdXJhdGlvbl0sIFt4IC0gciAqIE1hdGguc3FydCgzKSAvIDIsIHggKyByICogTWF0aC5zcXJ0KDMpIC8gMl0pOwogICAgICAgICAgdmFyIHRpbWVMaW5lSGlnaFNjYWxlX2xpbmVhciA9IGQzLnNjYWxlTGluZWFyKFswLCBfdGhpcy5tYXhUb3RhbER1cmF0aW9uIC0gNTBdLCBbciAvIDIsIHIgKiAoMSArIE1hdGguc3FydCgzKSAvIDMgKiAyKV0pOwogICAgICAgICAgdmFyIGNpcmNsZUNvbG9yID0gY29tcHV0ZV9jb2xvcihjb2xvcl9saW5lYXIoaW1wb3J0YW5jZVZhbHVlKSk7CgogICAgICAgICAgX3RoaXMuZHJhd0NpcmNsZShzdmcsIHgsIGN5LCByLCBjaXJjbGVDb2xvciwgZGF0YSwgMSwgImVudENpcmNsZSIsICJlbnRDaXJjbGVfIiArIGRhdGFbJ2lkJ10pOwoKICAgICAgICAgIHIgPSByICogTWF0aC5zcXJ0KDMpIC8gMjsKICAgICAgICAgIHkgKz0gciAvIDI7CiAgICAgICAgICB2YXIgcGF0aCA9IGQzLnBhdGgoKTsKICAgICAgICAgIHBhdGgubW92ZVRvKHggLSByLCB5KTsKICAgICAgICAgIHZhciBsaW5lTGkgPSBbZGF0YV07CiAgICAgICAgICB2YXIgbGluZVBvaW50ID0gW3sKICAgICAgICAgICAgJ2lkJzogZGF0YVsnaWQnXSwKICAgICAgICAgICAgJ3RpbWUnOiBkYXRhWyd0aW1lJ10sCiAgICAgICAgICAgICd4JzogMCwKICAgICAgICAgICAgJ3knOiAwCiAgICAgICAgICB9XTsKICAgICAgICAgIHZhciBqZ2lkTCA9IFtkYXRhWydpZCddXTsKICAgICAgICAgIHZhciBzaW1pbGFyaXR5UmVsc2xpID0gW2RhdGFbInNpbWlsYXJpdHlSZWwiXV07CgogICAgICAgICAgdmFyIF9sb29wMTAgPSBmdW5jdGlvbiBfbG9vcDEwKCkgewogICAgICAgICAgICB2YXIgc2ltaWxhcml0eVJlbHMgPSBzaW1pbGFyaXR5UmVsc2xpWzBdOwogICAgICAgICAgICBzaW1pbGFyaXR5UmVsc2xpLnNwbGljZSgwLCAxKTsKICAgICAgICAgICAgdmFyIGpnID0gMDsKCiAgICAgICAgICAgIHZhciBfbG9vcDE1ID0gZnVuY3Rpb24gX2xvb3AxNShzcmVsKSB7CiAgICAgICAgICAgICAgdmFyIGNkYXRhID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc2ltaWxhcml0eVJlbHNbc3JlbF07CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGlmIChqZ2lkTC5pbmRleE9mKGNkYXRhWydpZCddKSA9PSAtMSkgewogICAgICAgICAgICAgICAgc2ltaWxhcml0eVJlbHNsaS5wdXNoKGNkYXRhWyJzaW1pbGFyaXR5UmVsIl0pOwogICAgICAgICAgICAgICAgamcgPSAxOwogICAgICAgICAgICAgICAgbGluZUxpLnB1c2goY2RhdGEpOwogICAgICAgICAgICAgICAgamdpZEwucHVzaChjZGF0YVsnaWQnXSk7CiAgICAgICAgICAgICAgICBsaW5lUG9pbnQucHVzaCh7CiAgICAgICAgICAgICAgICAgICdpZCc6IGNkYXRhWydpZCddLAogICAgICAgICAgICAgICAgICAndGltZSc6IGNkYXRhWyd0aW1lJ10sCiAgICAgICAgICAgICAgICAgICd4JzogMCwKICAgICAgICAgICAgICAgICAgJ3knOiAwCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBmb3IgKHZhciBzcmVsIGluIHNpbWlsYXJpdHlSZWxzKSB7CiAgICAgICAgICAgICAgX2xvb3AxNShzcmVsKTsKICAgICAgICAgICAgfSAvLyBpZihqZz09MCl7CiAgICAgICAgICAgIC8vIGJyZWFrOwogICAgICAgICAgICAvLyB9CgogICAgICAgICAgfTsKCiAgICAgICAgICB3aGlsZSAoc2ltaWxhcml0eVJlbHNsaS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIF9sb29wMTAoKTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgc29ydG10ID0gZnVuY3Rpb24gc29ydG10KGEsIGIpIHsKICAgICAgICAgICAgcmV0dXJuIHRvb2xzLnRpbWUyc2Vjb25kcyhhWzBdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyhiWzBdKTsKICAgICAgICAgIH07CgogICAgICAgICAgdmFyIHNvcnRscCA9IGZ1bmN0aW9uIHNvcnRscChhLCBiKSB7CiAgICAgICAgICAgIHJldHVybiB0b29scy50aW1lMnNlY29uZHMoYVsndGltZSddWzBdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyhiWyd0aW1lJ11bMF0pOwogICAgICAgICAgfTsKCiAgICAgICAgICBsaW5lTGkgPSBsaW5lTGkuc29ydChzb3J0bHApOwogICAgICAgICAgbGluZVBvaW50ID0gbGluZVBvaW50LnNvcnQoc29ydGxwKTsKICAgICAgICAgIHZhciBsaW5lRGF0YSA9IFtbeCAtIHIgKiBNYXRoLnNxcnQoMykgLyAyIC0gNCwgeV1dOwoKICAgICAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgbGluZUxpLmxlbmd0aDsgdCsrKSB7CiAgICAgICAgICAgIHZhciBzdGFydFQgPSBsaW5lTGlbdF1bJ3RpbWUnXVswXTsKICAgICAgICAgICAgdmFyIF9kdXJhdGlvbiA9IGxpbmVMaVt0XVsndG90YWxEdXJhdGlvbiddOyAvLyBsZXQgZW5kVCA9IGxpbmVMaVt0XVsndGltZSddWzFdOwoKICAgICAgICAgICAgdmFyIHN0YXJ0UyA9IHRvb2xzLnRpbWUyc2Vjb25kcyhzdGFydFQpOwogICAgICAgICAgICB2YXIgZW5kUyA9IHN0YXJ0UyArIF9kdXJhdGlvbjsgLy8gbGV0IHN0YXJ0eCA9IHRpbWVMaW5lU2NhbGVfbGluZWFyKChzdGFydFMgLSBkdXJhdGlvbiAqIDEwKSk7CiAgICAgICAgICAgIC8vIGxldCBlbmR4ID0gdGltZUxpbmVTY2FsZV9saW5lYXIoKGVuZFMgKyBkdXJhdGlvbiAqIDEwKSk7CgogICAgICAgICAgICB2YXIgbGltc3QgPSB4IC0gciAqIE1hdGguc3FydCgzKSAvIDI7CiAgICAgICAgICAgIHZhciBsaW1lZCA9IHggKyByICogTWF0aC5zcXJ0KDMpIC8gMjsKICAgICAgICAgICAgdmFyIHN0YXJ0eCA9IGxpbXN0IDwgdGltZUxpbmVTY2FsZV9saW5lYXIoc3RhcnRTKSA/IHRpbWVMaW5lU2NhbGVfbGluZWFyKHN0YXJ0UykgOiBsaW1zdDsKICAgICAgICAgICAgdmFyIGVuZHggPSBsaW1lZCA+IHRpbWVMaW5lU2NhbGVfbGluZWFyKGVuZFMpID8gdGltZUxpbmVTY2FsZV9saW5lYXIoZW5kUykgOiBsaW1lZDsgLy8gbGV0IG1pZHggPSB0aW1lTGluZVNjYWxlX2xpbmVhcigoZW5kUyArIHN0YXJ0UykgLyAyKTsKCiAgICAgICAgICAgIHZhciBtaWR4ID0gKHN0YXJ0eCArIGVuZHgpIC8gMjsKICAgICAgICAgICAgdmFyIHlzID0geTsKICAgICAgICAgICAgdmFyIHl6ID0geSAtIHRpbWVMaW5lSGlnaFNjYWxlX2xpbmVhcihfZHVyYXRpb24pOwogICAgICAgICAgICBsaW5lUG9pbnRbdF1bJ3gnXSA9IG1pZHg7CiAgICAgICAgICAgIGxpbmVQb2ludFt0XVsneSddID0geSAtIHRpbWVMaW5lSGlnaFNjYWxlX2xpbmVhcihfZHVyYXRpb24pIC8gMS43OyAvLyBpZiAoc3RhcnR4IDwgKGxpbmVEYXRhW2xpbmVEYXRhLmxlbmd0aCAtIDFdWzBdKSkgewoKICAgICAgICAgICAgaWYgKHQgPiAwKSB7CiAgICAgICAgICAgICAgbGluZURhdGEuc3BsaWNlKGxpbmVEYXRhLmxlbmd0aCAtIDEsIDEpOwogICAgICAgICAgICAgIG1pZHggKz0gdCAqIDU7CiAgICAgICAgICAgICAgc3RhcnR4ID0gbWlkeCAtIChtaWR4IC0gKGxpbmVEYXRhW2xpbmVEYXRhLmxlbmd0aCAtIDFdWzBdICsgbWlkeCkgLyAyKSAvIDI7CiAgICAgICAgICAgICAgZW5keCArPSB0ICogNTsKICAgICAgICAgICAgICB5cyA9IHkgKyAoeSAtIGxpbmVEYXRhW2xpbmVEYXRhLmxlbmd0aCAtIDFdWzFdKSAvIDM7CiAgICAgICAgICAgIH0gLy8gfQoKCiAgICAgICAgICAgIGxpbmVEYXRhLnB1c2goW3N0YXJ0eCwgeXNdLCBbbWlkeCwgeXpdLCBbZW5keCwgeV0pOyAvLyBsZXQgc3RhcnR4ID0gdGltZUxpbmVTY2FsZV9saW5lYXIoKHN0YXJ0UyAtIGR1cmF0aW9uICogMTApKTsKICAgICAgICAgICAgLy8gbGV0IGVuZHggPSB0aW1lTGluZVNjYWxlX2xpbmVhcigoZW5kUyArIGR1cmF0aW9uICogMTApKTsKICAgICAgICAgICAgLy8gbGV0IHN0YXJ0eWYgPSB5ICsgdGltZUxpbmVIaWdoU2NhbGVfbGluZWFyKChkdXJhdGlvbikpIC8gODsKICAgICAgICAgICAgLy8gbGV0IHN0YXJ0eWYxID0geSArIHRpbWVMaW5lSGlnaFNjYWxlX2xpbmVhcigoZHVyYXRpb24pKSAvIDg7CiAgICAgICAgICAgIC8vIGxldCBlbmR5ZiA9IHkgKyB0aW1lTGluZUhpZ2hTY2FsZV9saW5lYXIoKGR1cmF0aW9uKSkgLyA4OwogICAgICAgICAgICAvLyBsZXQgZW5keWYxID0geSArIHRpbWVMaW5lSGlnaFNjYWxlX2xpbmVhcigoZHVyYXRpb24pKSAvIDg7CiAgICAgICAgICAgIC8vIGxldCB5eiA9IHkgLSB0aW1lTGluZUhpZ2hTY2FsZV9saW5lYXIoKGR1cmF0aW9uKSk7CiAgICAgICAgICAgIC8vIGxldCBtaWR4ID0gdGltZUxpbmVTY2FsZV9saW5lYXIoKGVuZFMgKyBzdGFydFMpIC8gMik7CiAgICAgICAgICAgIC8vIGxpbmVQb2ludFt0XVsneCddID0gbWlkeDsKICAgICAgICAgICAgLy8gbGluZVBvaW50W3RdWyd5J10gPSB5IC0gdGltZUxpbmVIaWdoU2NhbGVfbGluZWFyKGR1cmF0aW9uKSAvIDEuNzsKICAgICAgICAgICAgLy8gbGV0IHkxID0geTsKICAgICAgICAgICAgLy8gaWYgKHN0YXJ0eCA8IChsaW5lRGF0YVtsaW5lRGF0YS5sZW5ndGggLSAxXVswXSkpIHsKICAgICAgICAgICAgLy8gICBpZiAodCA+IDApIHsKICAgICAgICAgICAgLy8gICAgIGxpbmVEYXRhLnNwbGljZShsaW5lRGF0YS5sZW5ndGggLSAzLCAzKTsKICAgICAgICAgICAgLy8gICAgIHN0YXJ0eCA9IChsaW5lRGF0YVtsaW5lRGF0YS5sZW5ndGggLSAxXVswXSArIG1pZHgpIC8gMjsKICAgICAgICAgICAgLy8gICAgIHkxID0gbGluZURhdGFbbGluZURhdGEubGVuZ3RoIC0gMV1bMV0gKyB0aW1lTGluZUhpZ2hTY2FsZV9saW5lYXIoKGR1cmF0aW9uKSkgLyAyOwogICAgICAgICAgICAvLyAgICAgc3RhcnR5ZiA9IGxpbmVEYXRhW2xpbmVEYXRhLmxlbmd0aCAtIDFdWzFdICsgdGltZUxpbmVIaWdoU2NhbGVfbGluZWFyKChkdXJhdGlvbikpIC8gMjsKICAgICAgICAgICAgLy8gICAgIHN0YXJ0eWYxID0gbGluZURhdGFbbGluZURhdGEubGVuZ3RoIC0gMV1bMV0gKyB0aW1lTGluZUhpZ2hTY2FsZV9saW5lYXIoKGR1cmF0aW9uKSkgLyAyOwogICAgICAgICAgICAvLyAgIH0KICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAvLyBsZXQgc3RhcnR4MSA9IHN0YXJ0eCArICh0aW1lTGluZVNjYWxlX2xpbmVhcigoc3RhcnRTICsgZHVyYXRpb24pKSAtIHRpbWVMaW5lU2NhbGVfbGluZWFyKChzdGFydFMpKSk7CiAgICAgICAgICAgIC8vIGxldCBlbmR4MSA9IGVuZHggLSAodGltZUxpbmVTY2FsZV9saW5lYXIoKHN0YXJ0UyArIGR1cmF0aW9uKSkgLSB0aW1lTGluZVNjYWxlX2xpbmVhcigoc3RhcnRTKSkpOwogICAgICAgICAgICAvLyBsZXQgc3RhcnR4MiA9IHN0YXJ0eDEgKyAodGltZUxpbmVTY2FsZV9saW5lYXIoKHN0YXJ0UyArIGR1cmF0aW9uKSkgLSB0aW1lTGluZVNjYWxlX2xpbmVhcigoc3RhcnRTKSkpOwogICAgICAgICAgICAvLyBsZXQgZW5keDIgPSBlbmR4MSAtICh0aW1lTGluZVNjYWxlX2xpbmVhcigoc3RhcnRTICsgZHVyYXRpb24pKSAtIHRpbWVMaW5lU2NhbGVfbGluZWFyKChzdGFydFMpKSk7CiAgICAgICAgICAgIC8vIGlmIChlbmR4ID4gKHIgKyB4KSkgZW5keCA9IHIgKyB4OwogICAgICAgICAgICAvLyBpZiAoc3RhcnR4MSA8IChsaW5lRGF0YVtsaW5lRGF0YS5sZW5ndGggLSAxXVswXSkpIHN0YXJ0eDEgPSBsaW5lRGF0YVtsaW5lRGF0YS5sZW5ndGggLSAxXVswXTsKICAgICAgICAgICAgLy8gaWYgKGVuZHgxID4gKHIgKyB4KSkgZW5keDEgPSByICsgeDsKICAgICAgICAgICAgLy8gaWYgKHN0YXJ0eDIgPCAobGluZURhdGFbbGluZURhdGEubGVuZ3RoIC0gMV1bMF0pKSBzdGFydHgyID0gbGluZURhdGFbbGluZURhdGEubGVuZ3RoIC0gMV1bMF07CiAgICAgICAgICAgIC8vIGlmIChlbmR4MiA+IChyICsgeCkpIGVuZHgyID0gciArIHg7CiAgICAgICAgICAgIC8vIGxpbmVEYXRhLnB1c2goW3N0YXJ0eCwgeTFdLCBbc3RhcnR4MSwgc3RhcnR5ZjFdLCBbc3RhcnR4Miwgc3RhcnR5Zl0sIFttaWR4LCB5el0sIFtlbmR4MiwgZW5keWZdLCBbZW5keDEsIGVuZHlmMV0sIFtlbmR4LCB5XSkKICAgICAgICAgIH0KCiAgICAgICAgICBsaW5lRGF0YS5wdXNoKFt4ICsgciwgeV0pOwogICAgICAgICAgdmFyIGN1cnZlX2dlbmVyYXRvciA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgIHJldHVybiBkWzBdOwogICAgICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgICAgICB2YXIgaCA9IE1hdGguc3FydChNYXRoLnBvdyhyLCAyKSAtIE1hdGgucG93KGRbMF0gLSAoeCAtIHIpLCAyKSk7CiAgICAgICAgICAgIGlmICh5IC0gZFsxXSA+IGggKyByICogTWF0aC5zcXJ0KDMpIC8gMikgcmV0dXJuIHkgLSAoaCArIHIgKiBNYXRoLnNxcnQoMykgLyAyKSArIDI7CiAgICAgICAgICAgIHJldHVybiBkWzFdOwogICAgICAgICAgfSkuY3VydmUoZDMuY3VydmVCdW5kbGUpOyAvLyAuY3VydmUoZDMuY3VydmVDYXRtdWxsUm9tICApCiAgICAgICAgICAvLyAuY3VydmUoZDMuY3VydmVCYXNpcykKCiAgICAgICAgICBfdGhpcy5kcmF3VGltZUxpbmUoc3ZnLCBjdXJ2ZV9nZW5lcmF0b3IobGluZURhdGEpLCAid2hpdGUiLCAyLCAnMCcsICdzb25MaW5lICcsICdzb25MaW5lICcpOwoKICAgICAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgbGluZVBvaW50Lmxlbmd0aDsgcCsrKSB7CiAgICAgICAgICAgIF90aGlzLmRyYXdDaXJjbGUoc3ZnLCBsaW5lUG9pbnRbcF1bJ3gnXSwgbGluZVBvaW50W3BdWyd5J10sIDUsICJyZWQiLCBsaW5lUG9pbnRbcF0sIDAsICJsaW5lUG9pbnQiLCAibGluZVBvaW50XyIgKyBsaW5lUG9pbnRbcF1bJ2lkJ10pOwogICAgICAgICAgfSAvLyAiMSI6ICJyZ2IoMTQ1LCAyMDQsIDExNykiLAogICAgICAgICAgLy8gICAiMiI6ICJyZ2IoODQsIDExMiwgMTk4KSIsCiAgICAgICAgICAvLyAgICIzIjogInJnYigyMzgsIDEwMiwgMTAyKSIsCgoKICAgICAgICAgIHZhciB0eXBlQ29sb3IgPSB7CiAgICAgICAgICAgICIxIjogIiNmZjljOWMiLAogICAgICAgICAgICAiMiI6ICIjZjRmNGQwIiwKICAgICAgICAgICAgIjMiOiAiIzZmOGJlMCIKICAgICAgICAgIH07CiAgICAgICAgICB2YXIgZHVyYXRpb24gPSB0b29scy50aW1lMnNlY29uZHMoZGF0YVsndGltZSddWzBdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyhkYXRhWyd0aW1lJ11bMV0pOwogICAgICAgICAgdmFyIHR5cGVEYXRhID0gZGF0YVsnYXR0cmlidXRlJ11bJ2V4cHJlc3Npb25zJ107CiAgICAgICAgICB2YXIgc29uTGlzdCA9IGRhdGFbJ3NvbiddOwogICAgICAgICAgdmFyIHNvbnMgPSBbc29uTGlzdF07CgogICAgICAgICAgdmFyIF9sb29wMTEgPSBmdW5jdGlvbiBfbG9vcDExKCkgewogICAgICAgICAgICB2YXIgY3VyU29uTGlzdCA9IHNvbnNbMF07CiAgICAgICAgICAgIHNvbnMuc3BsaWNlKDAsIDEpOwoKICAgICAgICAgICAgaWYgKGN1clNvbkxpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgIHZhciBfbG9vcDE2ID0gZnVuY3Rpb24gX2xvb3AxNihfczIpIHsKICAgICAgICAgICAgICAgIHZhciBzb25EYXRhID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gZFsnaWQnXSA9PSBjdXJTb25MaXN0W19zMl07CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHZhciBzb25UeXBlRGF0YSA9IHNvbkRhdGFbJ2F0dHJpYnV0ZSddWydleHByZXNzaW9ucyddOwoKICAgICAgICAgICAgICAgIGZvciAodmFyIF90NSBpbiBzb25UeXBlRGF0YSkgewogICAgICAgICAgICAgICAgICB2YXIgX3R5cGVEdXJpdGlvbjIgPSBzb25UeXBlRGF0YVtfdDVdOwoKICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2QyIGluIF90eXBlRHVyaXRpb24yKSB7CiAgICAgICAgICAgICAgICAgICAgdHlwZURhdGFbX3Q1XS5wdXNoKF90eXBlRHVyaXRpb24yW19kMl0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgc29ucy5wdXNoKHNvbkRhdGFbJ3NvbiddKTsKICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBmb3IgKHZhciBfczIgaW4gY3VyU29uTGlzdCkgewogICAgICAgICAgICAgICAgX2xvb3AxNihfczIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfTsKCiAgICAgICAgICB3aGlsZSAoc29ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIF9sb29wMTEoKTsKICAgICAgICAgIH0KCiAgICAgICAgICB0eXBlU3RhcnRSID0gMDsgLy9NYXRoLlBJLzQ7CgogICAgICAgICAgdHlwZVN0ZXBSID0gTWF0aC5QSSAvIDE7CgogICAgICAgICAgaWYgKHNvbkxpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgICB2YXIgdHlwZVRvdGFsRHVyID0gMDsKCiAgICAgICAgICAgIGZvciAodmFyIF90NCBpbiB0eXBlRGF0YSkgewogICAgICAgICAgICAgIHZhciB0eXBlRHVyaXRpb24gPSB0eXBlRGF0YVtfdDRdOwoKICAgICAgICAgICAgICBmb3IgKHZhciBkIGluIHR5cGVEdXJpdGlvbikgewogICAgICAgICAgICAgICAgdHlwZVRvdGFsRHVyICs9IHRvb2xzLnRpbWUyc2Vjb25kcyh0eXBlRHVyaXRpb25bZF1bMV0pIC0gdG9vbHMudGltZTJzZWNvbmRzKHR5cGVEdXJpdGlvbltkXVswXSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgdHlwZUFyY1NjYWxlX2xpbmVhciA9IGQzLnNjYWxlTGluZWFyKFswLCB0eXBlVG90YWxEdXJdLCBbMCwgTWF0aC5QSSAqIDJdKTsKCiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gdHlwZURhdGEpIHsKICAgICAgICAgICAgICB2YXIgY29sb3IgPSB0eXBlQ29sb3JbaV07CiAgICAgICAgICAgICAgdmFyIF90eXBlRHVyaXRpb24gPSB0eXBlRGF0YVtpXTsKICAgICAgICAgICAgICB2YXIgdG90YWxUeXBlU2Vjb25kcyA9IDA7CgogICAgICAgICAgICAgIGZvciAodmFyIF9kIGluIF90eXBlRHVyaXRpb24pIHsKICAgICAgICAgICAgICAgIHRvdGFsVHlwZVNlY29uZHMgKz0gdG9vbHMudGltZTJzZWNvbmRzKF90eXBlRHVyaXRpb25bX2RdWzFdKSAtIHRvb2xzLnRpbWUyc2Vjb25kcyhfdHlwZUR1cml0aW9uW19kXVswXSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAodG90YWxUeXBlU2Vjb25kcyA+IDApIHsKICAgICAgICAgICAgICAgIHZhciBfdHlwZVN0ZXBSID0gdHlwZUFyY1NjYWxlX2xpbmVhcih0b3RhbFR5cGVTZWNvbmRzKTsgLy9NYXRoLlBJLzI7CgoKICAgICAgICAgICAgICAgIHZhciBlbmRBbmdsZXQgPSB0eXBlU3RhcnRSICsgMSAqIF90eXBlU3RlcFI7CiAgICAgICAgICAgICAgICBkYXRhc2V0ID0gewogICAgICAgICAgICAgICAgICBzdGFydEFuZ2xlOiB0eXBlU3RhcnRSLAogICAgICAgICAgICAgICAgICBlbmRBbmdsZTogZW5kQW5nbGV0CiAgICAgICAgICAgICAgICB9OyAvL+WIm+W7uuS4gOS4quW8p+eUn+aIkOWZqAoKICAgICAgICAgICAgICAgIHR5cGVTdGFydFIgPSBlbmRBbmdsZXQ7CiAgICAgICAgICAgICAgICBhcmNQYXRoID0gZDMuYXJjKCkuaW5uZXJSYWRpdXMociArIDEwKS5vdXRlclJhZGl1cyhyICsgMjUpOwogICAgICAgICAgICAgICAgcGF0aEFyYyA9IGFyY1BhdGgoZGF0YXNldCk7CgogICAgICAgICAgICAgICAgX3RoaXMuZHJhd0FyYyhzdmcsIHgsIHkgLSByIC8gMiwgcGF0aEFyYywgY29sb3IsIGNvbG9yLCAndHlwZSBmJyArIGRhdGFbJ2lkJ10gKyAiIHQiICsgaSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoY29weSAhPSAwICYmIGpnMiA9PSAwKSB7CiAgICAgICAgICAgICAgICBqZzIgPSAxOwogICAgICAgICAgICAgICAgYW5nMiA9IGRhdGFzZXQuc3RhcnRBbmdsZSArIE1hdGguUEkgLyAyOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHNvblRvdGFsID0gMDsKICAgICAgICAgICAgdmFyIHNvbk51bSA9IDA7CgogICAgICAgICAgICB2YXIgX2xvb3AxMiA9IGZ1bmN0aW9uIF9sb29wMTIocykgewogICAgICAgICAgICAgIHZhciBzb25EYXRhID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29uTGlzdFtzXTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB2YXIgc29uRHVyID0gc29uRGF0YVsndG90YWxEdXJhdGlvbiddOwogICAgICAgICAgICAgIHNvblRvdGFsICs9IHNvbkR1cjsKICAgICAgICAgICAgICBzb25OdW0gKz0gMTsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGZvciAodmFyIHMgaW4gc29uTGlzdCkgewogICAgICAgICAgICAgIF9sb29wMTIocyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciBza2lwQXJjID0gTWF0aC5QSSAvIChzb25OdW0gKyAyKTsKICAgICAgICAgICAgdmFyIHRpbWVTb25MaW5lYXIgPSBkMy5zY2FsZUxpbmVhcihbMCwgc29uVG90YWxdLCBbMCwgTWF0aC5QSSAtIHNraXBBcmMgKiAoc29uTnVtIC0gMSldKTsKICAgICAgICAgICAgdmFyIHRpbWVTb25IZWlnaExpbmVhciA9IGQzLnNjYWxlTGluZWFyKFswLCBzb25Ub3RhbF0sIFs0MCwgNDBdKTsKICAgICAgICAgICAgdmFyIHRpbWVTb25Db2xvcl9saW5lYXIgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgc29uVG90YWxdKS5yYW5nZShbMCwgMV0pOwogICAgICAgICAgICB2YXIgdGltZVNvbkNvbXB1dGVfY29sb3IgPSBkMy5pbnRlcnBvbGF0ZSgid2hpdGUiLCBjaXJjbGVDb2xvcik7CiAgICAgICAgICAgIHNvblN0YXJ0UiA9IE1hdGguUEkgLyAyOwogICAgICAgICAgICB2YXIgcmVsTGlzdCA9IFtdOwogICAgICAgICAgICB2YXIgcmVsUm9vdExpc3QgPSBbXTsKICAgICAgICAgICAgdmFyIHBzTnVtID0gMC4xOwogICAgICAgICAgICB2YXIgZGFJZCA9IGRhdGFbJ2lkJ107CiAgICAgICAgICAgIHZhciByZWxEYXRhID0gX3RoaXMucmVsRGF0YTsKICAgICAgICAgICAgdmFyIG9kRGF0YSA9IF90aGlzLmRhdGE7CiAgICAgICAgICAgIHZhciBiYXNpY1JlbCA9IHJlbERhdGFbJ2Jhc2ljUmVsJ107CgogICAgICAgICAgICB2YXIgX2xvb3AxMyA9IGZ1bmN0aW9uIF9sb29wMTMocmUpIHsKICAgICAgICAgICAgICB2YXIgc29yY2VJZCA9IGJhc2ljUmVsW3JlXVswXTsKICAgICAgICAgICAgICB2YXIgdGFyZ2V0SWQgPSBiYXNpY1JlbFtyZV1bMV07CiAgICAgICAgICAgICAgdmFyIGNOb2RlID0gJyc7CgogICAgICAgICAgICAgIGlmIChzb3JjZUlkID09IGRhSWQpIHsKICAgICAgICAgICAgICAgIGNOb2RlID0gb2REYXRhLmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGRbJ2lkJ10pID09IHBhcnNlSW50KHRhcmdldElkKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmVsTGlzdC5wdXNoKHRhcmdldElkKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICh0YXJnZXRJZCA9PSBkYUlkKSB7CiAgICAgICAgICAgICAgICBjTm9kZSA9IG9kRGF0YS5maW5kKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChkWydpZCddKSA9PSBwYXJzZUludChzb3JjZUlkKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmVsTGlzdC5wdXNoKHNvcmNlSWQpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGZvciAodmFyIHJlID0gMDsgcmUgPCBiYXNpY1JlbC5sZW5ndGg7IHJlKyspIHsKICAgICAgICAgICAgICBfbG9vcDEzKHJlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgOwoKICAgICAgICAgICAgaWYgKHJlbExpc3QubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICBzb25TdGFydFIgPSAwOwogICAgICAgICAgICAgIHRpbWVTb25MaW5lYXIgPSBkMy5zY2FsZUxpbmVhcihbMCwgc29uVG90YWxdLCBbMCwgTWF0aC5QSSAqIDIgLSBza2lwQXJjICogc29uTnVtXSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciBfbG9vcDE0ID0gZnVuY3Rpb24gX2xvb3AxNChfcykgewogICAgICAgICAgICAgIHZhciBzb25EYXRhID0gb0RhdGEuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gc29uTGlzdFtfc107CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgdmFyIHNvbkR1ciA9IHNvbkRhdGFbJ3RvdGFsRHVyYXRpb24nXTsKICAgICAgICAgICAgICB2YXIgc29uU3RlcFIgPSB0aW1lU29uTGluZWFyKHNvbkR1cik7IC8vTWF0aC5QSS8yOwoKICAgICAgICAgICAgICB2YXIgZW5kQW5nbGV0ID0gc29uU3RhcnRSICsgc29uU3RlcFI7CiAgICAgICAgICAgICAgZGF0YXNldCA9IHsKICAgICAgICAgICAgICAgIHN0YXJ0QW5nbGU6IHNvblN0YXJ0UiwKICAgICAgICAgICAgICAgIGVuZEFuZ2xlOiBlbmRBbmdsZXQKICAgICAgICAgICAgICB9OyAvL+WIm+W7uuS4gOS4quW8p+eUn+aIkOWZqAoKICAgICAgICAgICAgICBzb25TdGFydFIgPSBlbmRBbmdsZXQ7CiAgICAgICAgICAgICAgdmFyIGNvbG9yID0gJ2JsdWUnOwogICAgICAgICAgICAgIGFyY1BhdGggPSBkMy5hcmMoKS5pbm5lclJhZGl1cyhyICsgMjgpLm91dGVyUmFkaXVzKHIgKyB0aW1lU29uSGVpZ2hMaW5lYXIoc29uRHVyKSk7CiAgICAgICAgICAgICAgYXJjTWlkUGF0aCA9IGQzLmFyYygpLmlubmVyUmFkaXVzKDApLm91dGVyUmFkaXVzKHIgKyAzMik7CiAgICAgICAgICAgICAgcGF0aEFyYyA9IGFyY1BhdGgoZGF0YXNldCk7CiAgICAgICAgICAgICAgZW5kQW5nbGV0ID0gc29uU3RhcnRSICsgc2tpcEFyYzsKICAgICAgICAgICAgICBtaWREYXRhc2V0ID0gewogICAgICAgICAgICAgICAgc3RhcnRBbmdsZTogc29uU3RhcnRSLAogICAgICAgICAgICAgICAgZW5kQW5nbGU6IGVuZEFuZ2xldAogICAgICAgICAgICAgIH07IC8v5Yib5bu65LiA5Liq5byn55Sf5oiQ5ZmoCgogICAgICAgICAgICAgIHZhciBqaWFudG91UGF0aCA9IGQzLnBhdGgoKTsKICAgICAgICAgICAgICBqaWFudG91UGF0aC5hcmMoeCwgeSAtIHIgLyAyLCByICsgMzIsIHNvblN0YXJ0UiAtIE1hdGguUEkgLyAyLCBlbmRBbmdsZXQgLSBNYXRoLlBJIC8gMik7CiAgICAgICAgICAgICAgc29uU3RhcnRSICs9IHNraXBBcmM7CiAgICAgICAgICAgICAgcGF0aE1pZEFyYyA9IGFyY01pZFBhdGgobWlkRGF0YXNldCk7CiAgICAgICAgICAgICAgdmFyIHRpbWVTb25Db2xvciA9IGNvbXB1dGVfY29sb3IoY29sb3JfbGluZWFyKHNvbkRhdGFbJ2F0dHJpYnV0ZSddWydpbXBvcnRhbmNlJ10pKTsKCiAgICAgICAgICAgICAgX3RoaXMuZHJhd0FyYyhzdmcsIHgsIHkgLSByIC8gMiwgcGF0aEFyYywgdGltZVNvbkNvbG9yLCB0aW1lU29uQ29sb3IsICdzb24gZicgKyBkYXRhWydpZCddICsgIiBzIiArIHNvbkxpc3RbX3NdLCAnMCcpOwoKICAgICAgICAgICAgICBpZiAoX3MgIT0gc29uTGlzdC5sZW5ndGggLSAxKSB7CiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZwogICAgICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgamlhbnRvdVBhdGgsICJyZ2IoMjAwLDIwMCwyMDApIiwgMywgJzksNScsICdtaWRBcmMgJywgJ21pZEFyYyAnKTsgLy8gX3RoaXMuZHJhd1RpbWVMaW5lKF90aGlzLmFyY0csIHBhdGgsICJ3aGl0ZSIsIDIsJzAnLCAnc29uTGluZSAnLCAnc29uTGluZSAnKTsKICAgICAgICAgICAgICAgIC8vIF90aGlzLmRyYXdBcmMoX3RoaXMuYXJjRywgeCwgeSAtIHIgLyAyLCBwYXRoTWlkQXJjLCAicmdiKDIwMCwyMDAsMjAwKSIsICJ3aGl0ZSIsICdzb24gZicgKyBkYXRhWydpZCddLCAiOSw1IiwgMyk7CgogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKGNvcHkgIT0gMCkgewogICAgICAgICAgICAgICAgamczID0gMTsKICAgICAgICAgICAgICAgIGFuZzMgPSAoZGF0YXNldC5lbmRBbmdsZSArIGRhdGFzZXQuc3RhcnRBbmdsZSkgLyAyICsgTWF0aC5QSSAvIDI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgZm9yICh2YXIgX3MgaW4gc29uTGlzdCkgewogICAgICAgICAgICAgIF9sb29wMTQoX3MpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgOwoKICAgICAgICAgIGlmIChjb3B5ICE9IDApIHsKICAgICAgICAgICAgLy8gamcyPTEKICAgICAgICAgICAgcGF0aDEubW92ZVRvKDEwLCAxNTUpOwogICAgICAgICAgICBwYXRoMS5saW5lVG8oMTIwLCAxNTUpOyAvLyBsZXQgYW5nID0gZGEuc3RhcnRBbmdsZSswLjAwMStNYXRoLlBJLzIKCiAgICAgICAgICAgIF90aGlzLmRyYXdUeHQoc3ZnLCA2MCwgMTIwLCA4MCwgWyJDb25jZXB0IiwgIlRpbWUiLCAiRGlzdHJpYnV0aW9uIl0sICJncmV5IiwgMTUsICJ0ZXh0c18xIik7CgogICAgICAgICAgICBwYXRoMS5saW5lVG8obGluZURhdGFbMF1bMF0sIGxpbmVEYXRhWzBdWzFdKTsgLy8gcGF0aDIubGluZVRvKCh4LShyICsgaW50ZXIgKyBoKSpNYXRoLmNvcyhhbmcpKSwoeS1yLzItKHIgKyBpbnRlciArIGgpKk1hdGguc2luKGFuZykpKQoKICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgcGF0aDEsICJyZ2IoMjAwLDIwMCwyMDApIiwgMiwgJzksNScsICdtbSAnLCAnbW0gJyk7CgogICAgICAgICAgICBpZiAoamcyID09IDEpIHsKICAgICAgICAgICAgICBwYXRoMi5tb3ZlVG8oNTUwLCAzNSk7CiAgICAgICAgICAgICAgcGF0aDIubGluZVRvKDMyMCwgMzUpOwoKICAgICAgICAgICAgICBfdGhpcy5kcmF3VHh0KHN2ZywgMzYwLCAyMCwgODAsIFsiQ291cnNlIFN0eWxlIl0sICJncmV5IiwgMTUsICJ0ZXh0c18xIik7CgogICAgICAgICAgICAgIHBhdGgyLmxpbmVUbyh4IC0gKHIgKyAyNSkgKiBNYXRoLmNvcyhhbmcyKSwgeSAtIHIgLyAyIC0gKHIgKyAyNSkgKiBNYXRoLnNpbihhbmcyKSk7CgogICAgICAgICAgICAgIF90aGlzLmRyYXdUaW1lTGluZShzdmcsIHBhdGgyLCAicmdiKDIwMCwyMDAsMjAwKSIsIDIsICc5LDUnLCAnbW0gJywgJ21tICcpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGpnMyA9PSAxKSB7CiAgICAgICAgICAgIHBhdGgzLm1vdmVUbyg1NTAsIDIzNSk7CiAgICAgICAgICAgIHBhdGgzLmxpbmVUbygzMjAsIDIzNSk7CgogICAgICAgICAgICB2YXIgX2FuZzIgPSBNYXRoLlBJICogKDEgLyAyICsgMSAtIDAuMDUpOwoKICAgICAgICAgICAgX3RoaXMuZHJhd1R4dChzdmcsIDM2MCwgMjAwLCA4MCwgWyJTdWJjb25jZXB0IiwgIkRpc3RyaWJ1dGlvbiJdLCAiZ3JleSIsIDE1LCAidGV4dHNfMSIpOwoKICAgICAgICAgICAgcGF0aDMubGluZVRvKHggLSAociArIDMyKSAqIE1hdGguY29zKF9hbmcyKSwgeSAtIHIgLyAyIC0gKHIgKyAzMikgKiBNYXRoLnNpbihfYW5nMikpOwoKICAgICAgICAgICAgX3RoaXMuZHJhd1RpbWVMaW5lKHN2ZywgcGF0aDMsICJyZ2IoMjAwLDIwMCwyMDApIiwgMiwgJzksNScsICdtbSAnLCAnbW0gJyk7CiAgICAgICAgICB9CiAgICAgICAgfSkoKTsKICAgICAgfQoKICAgICAgdmFyIHR4dHMgPSBkYXRhWyduYW1lJ10uc3BsaXQoIiAiKTsKICAgICAgdmFyIHR4ID0geCAtIHIgLSAzMDsKICAgICAgdmFyIHR5ID0geSArIHIgKyA2MDsKICAgICAgdmFyIHR3ID0gciAqIDI7CiAgICAgIHR4ID0geDsKCiAgICAgIGlmIChkYXRhWydzb24nXS5sZW5ndGggPT0gMCkgewogICAgICAgIHR4ID0geDsgLy8tci0xMDsKCiAgICAgICAgdHkgPSB5ICsgciAqIDI7CiAgICAgIH0gLy8gaWYgKGRhdGFbJ2lkJ10gPT0gIjMiKSB7CiAgICAgIC8vICAgdHggPSB4IC0gMTA7CiAgICAgIC8vICAgdHkgPSB5ICsgciAqIDI7CiAgICAgIC8vIH0KICAgICAgLy8gaWYgKGRhdGFbJ2lkJ10gPT0gIjQiKSB7CiAgICAgIC8vICAgdHggPSB4ICsgMTA7CiAgICAgIC8vICAgdHkgPSB5ICsgciAqIDI7CiAgICAgIC8vIH0KICAgICAgLy8gaWYoZGF0YVsndHlwZSddPT0nMScpewogICAgICAvLyAgIHR4ID0geC1yLzI7CiAgICAgIC8vICAgdHkgPSB5K3IqMjsKICAgICAgLy8gfQoKCiAgICAgIF90aGlzLmRyYXdUeHQoc3ZnLCB0eCwgdHksIHR3LCB0eHRzLCAiZ3JleSIsIDE2LCAidGV4dF8iLmNvbmNhdChkYXRhWydpZCddKSk7CiAgICB9LAogICAgZHJhd0FyYzogZnVuY3Rpb24gZHJhd0FyYyhzdmcsIHgsIHksIGFyY1BhdGgsIHN0cm9rZSwgZmlsbCwgY2xhc3NOYW1lKSB7CiAgICAgIHZhciBzdHJva2VfZGFzaGFycmF5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDcgJiYgYXJndW1lbnRzWzddICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbN10gOiAiMCI7CiAgICAgIHZhciB3aWR0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiA4ICYmIGFyZ3VtZW50c1s4XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzhdIDogMzsKICAgICAgdmFyIG9wYWNpdHkgPSBhcmd1bWVudHMubGVuZ3RoID4gOSAmJiBhcmd1bWVudHNbOV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s5XSA6IDE7CiAgICAgIHZhciBhcmMgPSBzdmcuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIGFyY1BhdGgpLmF0dHIoImNsYXNzIiwgY2xhc3NOYW1lKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyB4ICsgIiwiICsgeSArICIpIikuYXR0cigic3Ryb2tlIiwgc3Ryb2tlKS5hdHRyKCdzdHJva2Utd2lkdGgnLCB3aWR0aCkuYXR0cigic3Ryb2tlLWRhc2hhcnJheSIsIHN0cm9rZV9kYXNoYXJyYXkpLmF0dHIoInN0cm9rZS1saW5lam9pbiIsICJyb3VuZCIpLmF0dHIoImZpbGwiLCBmaWxsKS5hdHRyKCJvcGFjaXR5Iiwgb3BhY2l0eSk7CiAgICAgIHJldHVybiBhcmM7CiAgICB9LAogICAgZHJhd0NpcmNsZTogZnVuY3Rpb24gZHJhd0NpcmNsZShzdmcsIHgsIHksIHIsIGZpbGwsIGRhdGEsIG9wYWNpdHksIGNsYXNzTmFtZSwgaWROYW1lKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgb0RhdGEgPSBfdGhpcy5kYXRhOwogICAgICBzdmcuYXBwZW5kKCJjaXJjbGUiKS5hdHRyKCJpZCIsIGlkTmFtZSkuYXR0cigiY2xhc3MiLCBjbGFzc05hbWUpLmF0dHIoIm9wYWNpdHkiLCBvcGFjaXR5KS5hdHRyKCJjeCIsIHgpLmF0dHIoImN5IiwgeSkuYXR0cigiciIsIHIpLmF0dHIoImZpbGwiLCBmaWxsKS5vbigibW91c2VvdmVyIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBkMy5zZWxlY3QodGhpcykuYXR0cigiciIsIHIgKiAxLjEpOwogICAgICAgIHZhciBjbGFzc04gPSBkMy5zZWxlY3QodGhpcykuYXR0cigiY2xhc3MiKTsKICAgICAgICB2YXIgaWROID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoImlkIikuc3BsaXQoIl8iKVsxXTsKICAgICAgICBfdGhpcy5vdmVyRW50aXR5SWQgPSBpZE47CiAgICAgICAgdmFyIHNob3dSZWwgPSBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0OwoKICAgICAgICBpZiAoIXNob3dSZWwuaW5jbHVkZXMocGFyc2VJbnQoaWROKSkpIHsKICAgICAgICAgIHNob3dSZWwucHVzaChwYXJzZUludChpZE4pKTsKICAgICAgICAgIF90aGlzLnNob3dFbnRpdHlSZWxJZE92ZXJTdGF0ZSA9IDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLnNob3dFbnRpdHlSZWxJZE92ZXJTdGF0ZSA9IDE7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0ID0gc2hvd1JlbDsKCiAgICAgICAgaWYgKGNsYXNzTiA9PSAnbGluZVBvaW50JykgewogICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLmF0dHIoIm9wYWNpdHkiLCAxKS5hdHRyKCJyIiwgNSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgiLmYiICsgZGF0YVsnaWQnXSkuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgdmFyIHRyYW5zZm9ybWQgPSBkMy5zZWxlY3QodGhpcykuYXR0cigidHJhbnNmb3JtIik7CiAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm1kLnNwbGl0KCIgIilbMF0gKyAiIHNjYWxlKDEuMSkiOwogICAgICAgICAgfSk7CiAgICAgICAgICBkMy5zZWxlY3RBbGwoIi5iYXNpY1JlbCIpLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgdmFyIGNsYXNzTiA9IGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJjbGFzcyIpOwogICAgICAgICAgICB2YXIgY2xhc3NOTGlzdCA9IGNsYXNzTi5zcGxpdCgiICIpOwogICAgICAgICAgICB2YXIgamcgPSAwOwoKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGFzc05MaXN0Lmxlbmd0aCAtIDE7IGkrKykgewogICAgICAgICAgICAgIGlmICgnc291cmNlJyArIGRhdGFbJ2lkJ10gPT0gY2xhc3NOTGlzdFtpXSkgewogICAgICAgICAgICAgICAgamcgPSAxOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKCd0YXJnZXQnICsgZGF0YVsnaWQnXSA9PSBjbGFzc05MaXN0W2ldKSB7CiAgICAgICAgICAgICAgICBqZyA9IDE7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoamcgPT0gMSkgey8vIGNsYXNzTiArPSAiIGFjdGl2ZVMiOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gY2xhc3NOOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5vbigibW91c2VsZWF2ZSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLmF0dHIoInIiLCByKTsKICAgICAgICBfdGhpcy5vdmVyRW50aXR5SWQgPSAiIjsgLy9fdGhpcy5jdXJFbnRJZDsKCiAgICAgICAgdmFyIGNsYXNzTiA9IGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJjbGFzcyIpOwogICAgICAgIHZhciBpZE4gPSBkMy5zZWxlY3QodGhpcykuYXR0cigiaWQiKS5zcGxpdCgiXyIpWzFdOwogICAgICAgIHZhciBzaG93UmVsID0gX3RoaXMuc2hvd0VudGl0eVJlbElkTGlzdDsKCiAgICAgICAgaWYgKF90aGlzLnNob3dFbnRpdHlSZWxJZE92ZXJTdGF0ZSA9PSAxKSB7CiAgICAgICAgICBzaG93UmVsLnB1c2gocGFyc2VJbnQoaWROKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHNob3dSZWwuc3BsaWNlKHNob3dSZWwuaW5kZXhPZihwYXJzZUludChpZE4pKSwgMSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0ID0gc2hvd1JlbDsKCiAgICAgICAgaWYgKGNsYXNzTiA9PSAnbGluZVBvaW50JykgewogICAgICAgICAgZDMuc2VsZWN0KHRoaXMpLmF0dHIoIm9wYWNpdHkiLCAwKS5hdHRyKCJyIiwgNSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGQzLnNlbGVjdEFsbCgiLmYiICsgZGF0YVsnaWQnXSkuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgdmFyIHRyYW5zZm9ybWQgPSBkMy5zZWxlY3QodGhpcykuYXR0cigidHJhbnNmb3JtIik7CiAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm1kLnNwbGl0KCIgIilbMF0gKyAiIHNjYWxlKDEpIjsKICAgICAgICAgIH0pOwogICAgICAgICAgZDMuc2VsZWN0KCIjZ3JhcGhQYW5lbCIpLnNlbGVjdEFsbCgicGF0aCIpLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgdmFyIHRoaXNTZWxlY3QgPSBkMy5zZWxlY3QodGhpcyk7CiAgICAgICAgICAgIHZhciBjbGFzc04gPSB0aGlzU2VsZWN0LmF0dHIoImNsYXNzIik7CiAgICAgICAgICAgIHZhciBjbGFzc05MaXN0ID0gY2xhc3NOLnNwbGl0KCIgIik7CgogICAgICAgICAgICBpZiAoY2xhc3NOTGlzdFtjbGFzc05MaXN0Lmxlbmd0aCAtIDFdID09ICJhY3RpdmVTIikgewogICAgICAgICAgICAgIGNsYXNzTiA9ICIiOwoKICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsYXNzTkxpc3QubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgICAgICAgICBjbGFzc04gKz0gIiAiICsgY2xhc3NOTGlzdFtpXTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBjbGFzc047CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLm9uKCJjbGljayIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgdmFyIGlkTiA9IGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJpZCIpLnNwbGl0KCJfIilbMV07CiAgICAgICAgdmFyIHNob3dSZWwgPSBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0OyAvLyAgLSBfdGhpcy5zaG93RW50aXR5UmVsSWRPdmVyU3RhdGU7CgogICAgICAgIGlmICghc2hvd1JlbC5pbmNsdWRlcyhwYXJzZUludChpZE4pKSkgewogICAgICAgICAgc2hvd1JlbCA9IFtwYXJzZUludChpZE4pXTsKICAgICAgICAgIF90aGlzLnNob3dFbnRpdHlSZWxJZE92ZXJTdGF0ZSA9IDE7CiAgICAgICAgfSBlbHNlIGlmIChzaG93UmVsLmluY2x1ZGVzKHBhcnNlSW50KGlkTikpKSB7CiAgICAgICAgICAvLyBzaG93UmVsLmZpbHRlcihpdGVtPT57cmV0dXJuIGl0ZW09PXBhcnNlSW50KGlkTil9KQogICAgICAgICAgX3RoaXMuc2hvd0VudGl0eVJlbElkT3ZlclN0YXRlID0gMDsKICAgICAgICAgIHNob3dSZWwuc3BsaWNlKHNob3dSZWwuaW5kZXhPZihwYXJzZUludChpZE4pKSwgMSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5zaG93RW50aXR5UmVsSWRMaXN0ID0gc2hvd1JlbDsKICAgICAgICBkMy5zZWxlY3QodGhpcykuYXR0cigiciIsIHIpOwogICAgICAgIGQzLnNlbGVjdEFsbCgiLmYiICsgZGF0YVsnaWQnXSkuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHZhciB0cmFuc2Zvcm1kID0gZDMuc2VsZWN0KHRoaXMpLmF0dHIoInRyYW5zZm9ybSIpOwogICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWQuc3BsaXQoIiAiKVswXSArICIgc2NhbGUoMSkiOwogICAgICAgIH0pOwogICAgICAgIHZhciB0aGlzSWQgPSB0aGlzLmlkLnNwbGl0KCJfIilbMV07CiAgICAgICAgX3RoaXMuY3VyRW50SWQgPSB0aGlzSWQ7CgogICAgICAgIHZhciB0aGlzRGF0YSA9IF90aGlzLmRyYXdFbnRpdHlMb2NhdGlvbi5maW5kKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICByZXR1cm4gYVsnaWQnXSA9PSB0aGlzSWQ7CiAgICAgICAgfSk7CgogICAgICAgIHZhciB0aGlzVGltZSA9IHRoaXNEYXRhWyd0aW1lJ107CgogICAgICAgIF90aGlzLmNsaWNrX0VudCh0aGlzVGltZSk7CgogICAgICAgIHZhciBwc3ZnID0gZDMuc2VsZWN0KCIjZW50RyIpOwogICAgICAgIHZhciBkdyA9IHBzdmcuYXR0cigid2lkdGgiKTsKICAgICAgICB2YXIgZGggPSBwc3ZnLmF0dHIoImhlaWdodCIpOwogICAgICAgIHBzdmcucmVtb3ZlKCk7CiAgICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI2VkaXRFbnQnKS5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJlbnRHIikuYXR0cigid2lkdGgiLCBkdykuYXR0cigiaGVpZ2h0IiwgZGgpOwoKICAgICAgICBfdGhpcy5kcmF3RW50aXR5KHN2ZywgZHcgLyAyLCAxMDAsIHIsIHRoaXNEYXRhLCAxKTsgLy8gaWYgKHRoaXNEYXRhWyd0eXBlJ10gPT0gMCApIHsKCgogICAgICAgIF90aGlzLmRyYXdFbnRpdHlUaW1lQXhpcyhzdmcsIHRoaXNEYXRhLCBbZHcgLyAyLCAxMDAsIHJdKTsgLy8gfQogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXNUaW1lLHRoaXNJZCx0aGlzRGF0YSkKCiAgICAgIH0pLm9uKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgZC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICBpZiAoX3RoaXMuYnRuRWRpKSB7CiAgICAgICAgICBfdGhpcy5lZGl0RGl2U2hvdyA9IHRydWU7CiAgICAgICAgICBfdGhpcy4kcmVmcy5lZGl0RGl2LnN0eWxlLnRvcCA9ICIiLmNvbmNhdChkLmNsaWVudFksICJweCIpOwogICAgICAgICAgX3RoaXMuJHJlZnMuZWRpdERpdi5zdHlsZS5sZWZ0ID0gIiIuY29uY2F0KGQuY2xpZW50WCwgInB4Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciB0aGlzSWQgPSB0aGlzLmlkLnNwbGl0KCJfIilbMV07CgogICAgICAgICAgdmFyIHRoaXNTaG93RW50aXR5RGF0YSA9IF90aGlzLnNob3dFbnRpdHlMaXN0LmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gdGhpc0lkOwogICAgICAgICAgfSk7CgogICAgICAgICAgdmFyIHRoaXNTb25zID0gdGhpc1Nob3dFbnRpdHlEYXRhWydzb24nXTsKCiAgICAgICAgICBpZiAodGhpc1NvbnMubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgdmFyIHNvbnMgPSB0b29scy5kZWVwQ2xvbmUodGhpc1NvbnMpOwogICAgICAgICAgICB2YXIgc2hvd0phZ2UgPSBmYWxzZTsKICAgICAgICAgICAgdmFyIF9pMyA9IDA7CgogICAgICAgICAgICB2YXIgX2xvb3AxNyA9IGZ1bmN0aW9uIF9sb29wMTcoKSB7CiAgICAgICAgICAgICAgdmFyIHMgPSBzb25zWzBdOwogICAgICAgICAgICAgIHNvbnMuc3BsaWNlKDAsIDEpOwoKICAgICAgICAgICAgICB2YXIgY3Vyc29uID0gX3RoaXMuc2hvd0VudGl0eUxpc3QuZmluZChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRbJ2lkJ10gPT0gcyArICcnOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBpZiAoX2kzID09IDApIHsKICAgICAgICAgICAgICAgIF9pMysrOwogICAgICAgICAgICAgICAgc2hvd0phZ2UgPSAhY3Vyc29uWydzaG93J107CiAgICAgICAgICAgICAgfSAvLyBbJ3Nob3cnXSA9ICFfdGhpcy5zaG93RW50aXR5TGlzdC5maW5kKGZ1bmN0aW9uIChkKSB7IHJldHVybiBkWydpZCddID09IHRoaXNTb25zW3NdIH0pWydzaG93J10KCgogICAgICAgICAgICAgIGN1cnNvblsnc2hvdyddID0gc2hvd0phZ2U7CiAgICAgICAgICAgICAgdmFyIGN1cmdzb24gPSBjdXJzb25bJ3NvbiddOwoKICAgICAgICAgICAgICBpZiAoIXNob3dKYWdlKSB7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBncyA9IDA7IGdzIDwgY3VyZ3Nvbi5sZW5ndGg7IGdzKyspIHsKICAgICAgICAgICAgICAgICAgc29ucy5wdXNoKGN1cmdzb25bZ3NdKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICB3aGlsZSAoc29ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgX2xvb3AxNygpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBfdGhpcy51cGRhdGFHcmFwaCgpOwogICAgICB9KTsgLy8gLm9uKCIiKQogICAgfSwKICAgIGRyYXdSZWN0OiBmdW5jdGlvbiBkcmF3UmVjdChzdmcsIHgsIHksIHcsIGgsIHJ4LCByeSwgZmlsbCwgb3BhY2l0eSwgc3Ryb2tlKSB7CiAgICAgIHZhciBpZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxMCAmJiBhcmd1bWVudHNbMTBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMTBdIDogJ3JlY3QnOwogICAgICB2YXIgc3Ryb2tlVyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxMSAmJiBhcmd1bWVudHNbMTFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMTFdIDogMS41OwogICAgICB2YXIgY2xhc3NOID0gYXJndW1lbnRzLmxlbmd0aCA+IDEyICYmIGFyZ3VtZW50c1sxMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxMl0gOiAncmVjdCc7CiAgICAgIGQzLnNlbGVjdCgiIyIuY29uY2F0KGlkKSkucmVtb3ZlKCk7CiAgICAgIHZhciByZWN0ID0gc3ZnLmFwcGVuZCgicmVjdCIpLmF0dHIoImlkIiwgaWQpLmF0dHIoImNsYXNzIiwgY2xhc3NOKS5hdHRyKCJ4IiwgeCkuYXR0cigieSIsIHkpLmF0dHIoInJ4IiwgcngpLmF0dHIoInJ5IiwgcnkpLmF0dHIoImhlaWdodCIsIGgpLmF0dHIoIndpZHRoIiwgdykgLy/liJrmiY3orr7nva7nmoTlnZfnmoTlrr3luqYKICAgICAgLmF0dHIoImZpbGwiLCBmaWxsKS5hdHRyKCJvcGFjaXR5Iiwgb3BhY2l0eSkuYXR0cigic3Ryb2tlIiwgc3Ryb2tlKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAiIi5jb25jYXQoc3Ryb2tlVywgInB4IikpOwogICAgICByZXR1cm4gcmVjdDsKICAgIH0sCiAgICBkcmF3VHh0OiBmdW5jdGlvbiBkcmF3VHh0KHN2ZywgeCwgeSwgd2lkdGgsIHR4dHMsIGZpbGwpIHsKICAgICAgdmFyIGZvbnRzaXplID0gYXJndW1lbnRzLmxlbmd0aCA+IDYgJiYgYXJndW1lbnRzWzZdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNl0gOiAxMjsKICAgICAgdmFyIGlkTiA9IGFyZ3VtZW50cy5sZW5ndGggPiA3ID8gYXJndW1lbnRzWzddIDogdW5kZWZpbmVkOwogICAgICB2YXIgY2xhc3NOID0gYXJndW1lbnRzLmxlbmd0aCA+IDggJiYgYXJndW1lbnRzWzhdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbOF0gOiAidGV4dCI7CiAgICAgIHZhciB0eCA9IHg7CiAgICAgIHZhciB0eSA9IHk7CiAgICAgIHZhciBwcmVXaWR0aCA9IDA7CiAgICAgIHZhciBwcmVJZE4gPSAwOwogICAgICB2YXIgcHJldGV4dCA9ICcnOwoKICAgICAgZm9yICh2YXIgdCA9IDA7IHQgPCB0eHRzLmxlbmd0aDsgdCsrKSB7CiAgICAgICAgcHJldGV4dCArPSAiICIgKyB0eHRzW3RdOwogICAgICAgIHZhciB0eHQgPSBzdmcuYXBwZW5kKCJ0ZXh0IikuYXR0cigieSIsIHR5KS5hdHRyKCJ4IiwgdHgpLmF0dHIoImlkIiwgIiIuY29uY2F0KGlkTiwgIl8iKS5jb25jYXQodCkpLmF0dHIoImNsYXNzIiwgIiIuY29uY2F0KGNsYXNzTikpLmF0dHIoImZpbGwiLCBmaWxsKS5hdHRyKCJmb250LXNpemUiLCBmb250c2l6ZSkuc3R5bGUoInRleHQtYW5jaG9yIiwgIm1pZGRsZSIpLnRleHQocHJldGV4dCk7CiAgICAgICAgdmFyIHRleHRXaWR0aCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIiLmNvbmNhdChpZE4sICJfIikuY29uY2F0KHQpKS5nZXRCQm94KCkud2lkdGg7CgogICAgICAgIGlmICh0ZXh0V2lkdGggPiB3aWR0aCB8fCB0ID09IHR4dHMubGVuZ3RoIC0gMSkgewogICAgICAgICAgcHJldGV4dCA9ICcnOwogICAgICAgICAgdHggPSB4OwogICAgICAgICAgdHkgKz0gMjU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHR4dC5yZW1vdmUoKTsKICAgICAgICB9CgogICAgICAgIHByZVdpZHRoICs9IHRleHRXaWR0aDsKICAgICAgfQogICAgfSwKICAgIGRyYXdUaW1lTGluZTogZnVuY3Rpb24gZHJhd1RpbWVMaW5lKHN2ZywgcGF0aCwgc3Ryb2tlLCB3aWR0aCkgewogICAgICB2YXIgc3Ryb2tlX2Rhc2hhcnJheSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogIjAiOwogICAgICB2YXIgaWROYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgPyBhcmd1bWVudHNbNV0gOiB1bmRlZmluZWQ7CiAgICAgIHZhciBjbGFzc05hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gNiA/IGFyZ3VtZW50c1s2XSA6IHVuZGVmaW5lZDsKICAgICAgc3ZnLmFwcGVuZCgncGF0aCcpLmF0dHIoJ2QnLCBwYXRoLnRvU3RyaW5nKCkpLmF0dHIoJ3N0cm9rZScsIHN0cm9rZSkuYXR0cignY2xhc3MnLCBjbGFzc05hbWUpLmF0dHIoJ2lkJywgaWROYW1lKS5hdHRyKCJzdHJva2UtZGFzaGFycmF5Iiwgc3Ryb2tlX2Rhc2hhcnJheSkuYXR0cignc3Ryb2tlLXdpZHRoJywgd2lkdGgpLmF0dHIoJ2ZpbGwnLCAnbm9uZScpLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciB0aGlzU2VsZWN0ID0gZDMuc2VsZWN0KHRoaXMpOwogICAgICAgIHZhciBjbGFzc04gPSB0aGlzU2VsZWN0LmF0dHIoImNsYXNzIik7CiAgICAgICAgdmFyIGlkTiA9IHRoaXNTZWxlY3QuYXR0cigiaWQiKTsKCiAgICAgICAgaWYgKGNsYXNzTi5zcGxpdCgiICIpWzBdID09ICJiYXNpY1JlbCIpIHsvLyBkMy5zZWxlY3QodGhpcykuYXR0cigiY2xhc3MiLCBjbGFzc04gKyAiIGFjdGl2ZVMiKTsKICAgICAgICB9CiAgICAgIH0pLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICB2YXIgdGhpc1NlbGVjdCA9IGQzLnNlbGVjdCh0aGlzKTsKICAgICAgICB2YXIgY2xhc3NOID0gdGhpc1NlbGVjdC5hdHRyKCJjbGFzcyIpOwogICAgICAgIHZhciBjbGFzc05MaXN0ID0gY2xhc3NOLnNwbGl0KCIgIik7CgogICAgICAgIGlmIChjbGFzc05MaXN0W2NsYXNzTkxpc3QubGVuZ3RoIC0gMV0gPT0gImFjdGl2ZVMiKSB7CiAgICAgICAgICBjbGFzc04gPSAiIjsKCiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsYXNzTkxpc3QubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgICAgIGNsYXNzTiArPSBjbGFzc05MaXN0W2ldICsgIiAiOwogICAgICAgICAgfQoKICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKCJjbGFzcyIsIGNsYXNzTik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICB0cmFuc2Zvcm1HcmFwaFN2ZzogZnVuY3Rpb24gdHJhbnNmb3JtR3JhcGhTdmcoZmxhZykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGdyb3VwcyA9IF90aGlzLmdyb3Vwc1N2ZzsKICAgICAgdmFyIHNjYWxlUHJlID0gX3RoaXMuZ3JhcGhTdmdTY2FsZTsKICAgICAgdmFyIG1hcmdpbiA9IF90aGlzLm1hcmdpbjsKCiAgICAgIGlmIChmbGFnID09ICdsZWZ0JykgewogICAgICAgIF90aGlzLmdyYXBoR1RyYW5zZm9ybVggKz0gMTA7CiAgICAgIH0KCiAgICAgIGlmIChmbGFnID09ICdyaWdodCcpIHsKICAgICAgICBfdGhpcy5ncmFwaEdUcmFuc2Zvcm1YIC09IDEwOwogICAgICB9IC8vIGdyb3Vwcy5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyAoX3RoaXMuZ3JhcGhHVHJhbnNmb3JtWCkgKyAnLCcgKyAobWFyZ2luLnRvcCkgKyAnKSBzY2FsZSgnICsgKHNjYWxlUHJlKSArICcpJykKCiAgICB9LAogICAgdXBkYXRhQXNzaXN0R3JhcGhQYW5lbDogZnVuY3Rpb24gdXBkYXRhQXNzaXN0R3JhcGhQYW5lbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb250ZW50ID0gdGhpcy5ncm91cHNTdmcuaHRtbCgpOwogICAgICB2YXIgaGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFzc2lzdEdyYXBoUGFuZWwiKS5jbGllbnRIZWlnaHQ7CiAgICAgIHZhciB3aWR0aCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhc3Npc3RHcmFwaFBhbmVsIikuY2xpZW50V2lkdGg7CiAgICAgIGQzLnNlbGVjdCgnI2Fzc2lzdEdyYXBoUGFuZWwnKS5zZWxlY3QoJ3N2ZycpLnJlbW92ZSgpOwogICAgICB2YXIgdHJhbnNYID0gX3RoaXMuYXNzaXN0R1RyYW5zZm9ybVg7CiAgICAgIHZhciB0cmFuc1kgPSBfdGhpcy5hc3Npc3RHVHJhbnNmb3JtWTsKICAgICAgdmFyIGRpdiA9IGQzLnNlbGVjdCgnI2Fzc2lzdEdyYXBoUGFuZWwnKS5hcHBlbmQoJ3N2ZycpLmF0dHIoIndpZHRoIiwgd2lkdGgpLmF0dHIoImhlaWdodCIsIGhlaWdodCkuYXBwZW5kKCJnIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiLmNvbmNhdCh0cmFuc1ggKyB3aWR0aCAvIDIsICIsIikuY29uY2F0KHRyYW5zWSArIGhlaWdodCAvIDIsICIpIikpLmh0bWwoY29udGVudCk7CiAgICB9LAogICAgbW92ZUdyYXBoTGVmdDogZnVuY3Rpb24gbW92ZUdyYXBoTGVmdChlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBfdGhpcy5tb3ZlRmxhZyA9PSB0cnVlOwogICAgICBjbGVhckludGVydmFsKHRoaXMubW92ZVRpbWVyKTsgLy8g5riF6Zmk5a6a5pe25ZmoCgogICAgICB0aGlzLm1vdmVUaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy50cmFuc2Zvcm1HcmFwaFN2ZygibGVmdCIpOwogICAgICB9LCAxMCk7IC8vX3RoaXMudHJhbnNmb3JtR3JhcGhTdmcoJ2xlZnQnKSwgMTAwKTsKICAgIH0sCiAgICBtb3ZlR3JhcGhSaWdodDogZnVuY3Rpb24gbW92ZUdyYXBoUmlnaHQoZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOyAvLyBjb25zb2xlLmxvZygi4pqh8J+QsvCfq6finYTvuI/wn5GB77iPIixlKQoKCiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5tb3ZlVGltZXIpOyAvLyDmuIXpmaTlrprml7blmagKCiAgICAgIF90aGlzLm1vdmVGbGFnID09IHRydWU7CiAgICAgIHRoaXMubW92ZVRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnRyYW5zZm9ybUdyYXBoU3ZnKCJyaWdodCIpOwogICAgICB9LCAxMCk7IC8vX3RoaXMudHJhbnNmb3JtR3JhcGhTdmcoJ2xlZnQnKSwgMTAwKTsKICAgIH0sCiAgICBsZWF2ZUdyYXBoTW92ZTogZnVuY3Rpb24gbGVhdmVHcmFwaE1vdmUoKSB7CiAgICAgIC8vIHRoaXMubW92ZUZsYWcgPT0gZmFsc2U7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5tb3ZlVGltZXIpOyAvLyDmuIXpmaTlrprml7blmagKICAgICAgLy8gdGhpcy5ncmFwaEdUcmFuc2Zvcm1YID0gMDsKICAgIH0sCiAgICB1cGRhdGFHcmFwaDogZnVuY3Rpb24gdXBkYXRhR3JhcGgoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgbWFyZ2luID0gX3RoaXMubWFyZ2luOwogICAgICB2YXIgd2lkdGggPSBfdGhpcy4kcmVmcy5ncmFwaERpdi5vZmZzZXRXaWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0OwogICAgICB2YXIgaGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImdyYXBoUGFuZWwiKS5jbGllbnRIZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbTsKICAgICAgdmFyIGhlaWdodFRpbWVBeGlzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImdyYXBoVGltZUF4aXNQYW5lbCIpLmNsaWVudEhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOwogICAgICBfdGhpcy53aWR0aCA9IHdpZHRoOwogICAgICBfdGhpcy5oZWlnaHQgPSBoZWlnaHQ7CiAgICAgIGQzLnNlbGVjdCgiI2dyYXBoUGFuZWwiKS5zZWxlY3QoInN2ZyIpLnJlbW92ZSgpOwogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjZ3JhcGhQYW5lbCIpLmFwcGVuZCgic3ZnIikuYXR0cigid2lkdGgiLCB3aWR0aCkuYXR0cigiaGVpZ2h0IiwgaGVpZ2h0KTsKICAgICAgX3RoaXMucm9vdFN2ZyA9IHN2ZzsKICAgICAgZDMuc2VsZWN0KCIjZ3JhcGhUaW1lQXhpc1BhbmVsIikuc2VsZWN0KCJzdmciKS5yZW1vdmUoKTsKICAgICAgdmFyIFRpbWVBeGlzU3ZnID0gZDMuc2VsZWN0KCIjZ3JhcGhUaW1lQXhpc1BhbmVsIikuYXBwZW5kKCJzdmciKS5hdHRyKCJ3aWR0aCIsIHdpZHRoKS5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwogICAgICBfdGhpcy5UaW1lQXhpc1N2ZyA9IFRpbWVBeGlzU3ZnOwogICAgICB2YXIgZGF0YSA9IF90aGlzLmRhdGE7CiAgICAgIHZhciBtYXhESW1wb3J0YW5jZSA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGRhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbJ2F0dHJpYnV0ZSddWydpbXBvcnRhbmNlJ107CiAgICAgIH0pKTsKICAgICAgdmFyIG1pbkRJbXBvcnRhbmNlID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgZGF0YS5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZFsnYXR0cmlidXRlJ11bJ2ltcG9ydGFuY2UnXTsKICAgICAgfSkpOwogICAgICB2YXIgbWF4RFJlbGV2YW5jZSA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGRhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbJ2F0dHJpYnV0ZSddWydyZWxldmFuY2UnXTsKICAgICAgfSkpOwogICAgICB2YXIgbWluRFJlbGV2YW5jZSA9IE1hdGgubWluLmFwcGx5KE1hdGgsIGRhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbJ2F0dHJpYnV0ZSddWydyZWxldmFuY2UnXTsKICAgICAgfSkpOwogICAgICB2YXIgbWF4RER1cmF0aW9uID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgZGF0YS5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gdG9vbHMudGltZTJzZWNvbmRzKGRbJ3RpbWUnXVsxXSkgLSB0b29scy50aW1lMnNlY29uZHMoZFsndGltZSddWzBdKTsKICAgICAgfSkpOwogICAgICB2YXIgbWF4VG90YWxEdXJhdGlvbiA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGRhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGRbJ3RvdGFsRHVyYXRpb24nXTsKICAgICAgfSkpOwogICAgICBfdGhpcy5kcmF3RW50aXR5TG9jYXRpb24gPSBbXTsKICAgICAgX3RoaXMubWluREltcG9ydGFuY2UgPSBtaW5ESW1wb3J0YW5jZTsKICAgICAgX3RoaXMubWF4REltcG9ydGFuY2UgPSBtYXhESW1wb3J0YW5jZTsKICAgICAgX3RoaXMubWluRFJlbGV2YW5jZSA9IG1pbkRSZWxldmFuY2U7CiAgICAgIF90aGlzLm1heERSZWxldmFuY2UgPSBtYXhEUmVsZXZhbmNlOwogICAgICBfdGhpcy5tYXhERHVyYXRpb24gPSBtYXhERHVyYXRpb247CiAgICAgIF90aGlzLm1heFRvdGFsRHVyYXRpb24gPSBtYXhUb3RhbER1cmF0aW9uOwogICAgICB2YXIgY3VycmVudE1heENvbG9yID0gX3RoaXMuaW1wb3J0YW5jZU1heENvbG9yOwogICAgICB2YXIgY3VycmVudE1pbkNvbG9yID0gX3RoaXMuaW1wb3J0YW5jZU1pbkNvbG9yOwogICAgICBfdGhpcy5pbXBvcnRhbmNlQ29sb3JfbGluZWFyID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oW21pbkRJbXBvcnRhbmNlLCBtYXhESW1wb3J0YW5jZV0pLnJhbmdlKFswLCAxXSk7CgogICAgICBfdGhpcy4kYnVzLiRlbWl0KCJpbXBvcnRhbmNlTGluZWFyIiwgW21pbkRJbXBvcnRhbmNlLCBtYXhESW1wb3J0YW5jZV0pOwoKICAgICAgX3RoaXMuaW1wb3J0YW5jZUNvbXB1dGVfY29sb3IgPSBkMy5pbnRlcnBvbGF0ZShjdXJyZW50TWluQ29sb3IsIGN1cnJlbnRNYXhDb2xvcik7CiAgICAgIF90aGlzLnJlbGV2YW5jZVNjYWxlX2xpbmVhciA9IGQzLnNjYWxlTGluZWFyKFttaW5EUmVsZXZhbmNlLCBtYXhEUmVsZXZhbmNlXSwgWzIwLCA1MF0pOwogICAgICBfdGhpcy50b3RhbER1cmF0aW9uU2NhbGVfbGluZWFyID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIG1heFRvdGFsRHVyYXRpb25dKS5yYW5nZShbMjAsIDYwXSk7CgogICAgICBfdGhpcy5kcmF3TWFpbihzdmcpOyAvLyB9KTsKCiAgICB9LAogICAgem9vbUluTGF5b3V0Q2xrOiBmdW5jdGlvbiB6b29tSW5MYXlvdXRDbGsoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBfdGhpcy5sYXlvdXRTaG93ICs9IDE7CgogICAgICBpZiAoX3RoaXMubGF5b3V0U2hvdyA+IDMpIHsKICAgICAgICBfdGhpcy5sYXlvdXRTaG93ID0gMzsKICAgICAgfSAvLyBfdGhpcy51cGRhdGFHcmFwaCgpOwoKICAgIH0sCiAgICB6b29tT3V0TGF5b3V0Q2xrOiBmdW5jdGlvbiB6b29tT3V0TGF5b3V0Q2xrKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX3RoaXMubGF5b3V0U2hvdyAtPSAxOwoKICAgICAgaWYgKF90aGlzLmxheW91dFNob3cgPCAwKSB7CiAgICAgICAgX3RoaXMubGF5b3V0U2hvdyA9IDA7CiAgICAgIH0gLy8gX3RoaXMudXBkYXRhR3JhcGgoKTsKCiAgICB9LAogICAgY2xpY2tfRW50OiBmdW5jdGlvbiBjbGlja19FbnQodGltZSkgewogICAgICB0aGlzLiRlbWl0KCJ0aW1lRHVyIiwgdGltZSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgbWFyZ2luID0gX3RoaXMubWFyZ2luOwogICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy51cGRhdGFHcmFwaCgpOwoKICAgICAgX3RoaXMudXBkYXRhQXNzaXN0R3JhcGhQYW5lbCgpOwogICAgfSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgd2lkdGggPSBfdGhpcy4kcmVmcy5ncmFwaERpdi5vZmZzZXRXaWR0aDsKICAgIHZhciBoZWlnaHQgPSBfdGhpcy5oZWlnaHQ7CiAgICB2YXIgc2hvd0VudGl0eUxpc3QgPSB0b29scy5kZWVwQ2xvbmUoX3RoaXMuZGF0YSk7CgogICAgZm9yICh2YXIgZSBpbiBzaG93RW50aXR5TGlzdCkgewogICAgICBzaG93RW50aXR5TGlzdFtlXVsnc2hvdyddID0gdHJ1ZTsKICAgIH0KCiAgICBfdGhpcy5zaG93RW50aXR5TGlzdCA9IHNob3dFbnRpdHlMaXN0OyAvLyBsZXQgd2lkdGggPSBfdGhpcy53aWR0aDsKCiAgICB0aGlzLiRidXMuJG9uKCdncmFwaERhdGEnLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIF90aGlzLmRhdGEgPSB2YWw7CiAgICAgIHZhciBzaG93RW50aXR5TGlzdCA9IHRvb2xzLmRlZXBDbG9uZShfdGhpcy5kYXRhKTsKCiAgICAgIGZvciAodmFyIF9lIGluIHNob3dFbnRpdHlMaXN0KSB7CiAgICAgICAgc2hvd0VudGl0eUxpc3RbX2VdWydzaG93J10gPSB0cnVlOwogICAgICB9CgogICAgICBfdGhpcy5zaG93RW50aXR5TGlzdCA9IHNob3dFbnRpdHlMaXN0OwoKICAgICAgX3RoaXMudXBkYXRhR3JhcGgoKTsKICAgIH0pOwogICAgdGhpcy4kYnVzLiRvbigndG9waWNSZWN0dXAnLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIF90aGlzLmVkaXRDb25maXJtKCk7CiAgICB9KTsKICAgIHRoaXMuJGJ1cy4kb24oJ3N3aXRjaEwnLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIF90aGlzLnN3aXRjaEwgPSB2YWw7CiAgICB9KTsgLy8gZGlzYWJsZWQgaW4gdGhlIG9ubGluZSBkZW1vCiAgICAvLyB0aGlzLiRidXMuJG9uKCdlbnREYXRhJywgKHZhbCkgPT4gewogICAgLy8gICBfdGhpcy5kYXRhID0gdmFsOwogICAgLy8gfSk7CiAgICAvLyB0aGlzLiRidXMuJG9uKCdyZWxEYXRhJywgKHZhbCkgPT4gewogICAgLy8gICBfdGhpcy5yZWxEYXRhID0gdmFsOwogICAgLy8gfSk7CiAgICAvLyB0aGlzLiRyZWZzLm1vdmVHcmFwaExlZnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgX3RoaXMubW92ZUdyYXBoTGVmdCk7IC8vIOebkeWQrOeCueWHu+S6i+S7tgogICAgLy8gdGhpcy4kcmVmcy5tb3ZlR3JhcGhSaWdodC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLCBfdGhpcy5tb3ZlR3JhcGhSaWdodCk7IC8vIOebkeWQrOeCueWHu+S6i+S7tgogICAgLy8gdGhpcy4kcmVmcy5tb3ZlR3JhcGhMZWZ0LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlbGVhdmUiLCBfdGhpcy5sZWF2ZUdyYXBoTW92ZSk7IC8vIOebkeWQrOeCueWHu+S6i+S7tgogICAgLy8gdGhpcy4kcmVmcy5tb3ZlR3JhcGhSaWdodC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwgX3RoaXMubGVhdmVHcmFwaE1vdmUpOyAvLyDnm5HlkKzngrnlh7vkuovku7YKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMubW92ZVRpbWVyKTsKICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"graph\" ref=\"graphDiv\" >\r\n    <!-- <div class=\"panelHead\">ConceptMap</div> -->\r\n    <div id=\"loadLoadingPanel\" class=\"\" v-loading=\"loadLoading\" v-show=\"loadLoading\">\r\n    </div>    \r\n    <div id=\"graphTimeAxisPanel\" class=\"\">\r\n    </div>\r\n    <div id=\"editConfirm\" v-show=\"editConfirmShow\" @click=\"editConfirm\">\r\n      <img class=\"editConfirm\" :src=\"editConfirmUrl\" @click=\"editConfirm\">\r\n    </div>\r\n    <div id=\"graphPanel\" class=\"panelBody\">\r\n    </div>\r\n    <!-- <div id=\"moveLeft\" ref=\"moveGraphLeft\"></div>\r\n                    <div id=\"moveRight\" ref=\"moveGraphRight\"></div> -->\r\n    <div id=\"assistGraphPanel\" class=\"panel\">\r\n      <div class=\"panelHead\">SupportPanel</div>\r\n      <div id=\"slidesBack\" :src=\"slidesUpUrl\"  v-show=\"showIMG\"></div>\r\n      <img id=\"slidesUp\" :src=\"slidesUpUrl\"  v-show=\"showIMG\">\r\n      <img id=\"slidesDown\" :src=\"slidesDownUrl\" v-show=\"showIMG\">\r\n    </div>\r\n\r\n    <div v-show=\"editDivShow\" ref=\"editDiv\" id=\"editDiv\" class=\"panel\">\r\n      <div id=\"editAdd\" @click=\"addNode\">\r\n        <img class=\"editIcons1\" :src=\"editAddUrl\" @click=\"addNode\">\r\n        Add sibling\r\n      </div>\r\n      <div id=\"editAddN\" @click=\"addNodeN\">\r\n        <img class=\"editIcons2\" :src=\"editAddNUrl\" @click=\"addNodeN\">\r\n        Add in next level\r\n      </div>\r\n      <div id=\"editDel\" @click=\"delNode\">\r\n        <img class=\"editIcons editDelIcons\" :src=\"editDelUrl\" @click=\"delNode\">\r\n        Delete\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"tipDiv\">\r\n      <img class=\"tip\" :src=\"tipUrl\">\r\n    </div>\r\n    <div id=\"zoomInDiv\" @click=\"zoomInLayoutClk\">\r\n    </div>\r\n    <div id=\"zoomOutDiv\" @click=\"zoomOutLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomOutUrl\">\r\n    </div>\r\n    <div id=\"editToolDiv\" @click=\"editToolClk\">\r\n      <img class=\"icons\" :src=\"editToolUrl\">\r\n    </div>\r\n    <div id=\"VideoEditPanel\" ref=\"VideoEditPanel\" class=\"\" v-show=\"VideoEditPanelShow\">\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { Loading } from 'element-ui'\r\nimport { onMounted, ref } from 'vue';\r\nimport domtoimage from 'dom-to-image';\r\nimport TestJson from \"@/assets/json/case1_1_fin.json\";\r\nimport ImgMapJson from \"@/assets/Case1-Slides/imgMap.json\";\r\nimport TestRelJson from \"@/assets/json/case1_1_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nimport ocrad from \"@/utils/ocrad.js\";\r\nimport {createWorker} from \"@/utils/tesseract.min.js\";\r\nimport Tesseract from '@/utils/tesseract.min.js';\r\n// let worker= createWorker({\r\n//     // langPath:\"@/assets/data\"\r\n//     workerPath: '/uti/worker.min.js',\r\n//     // corePath: './tesseract-core.wasm.js',\r\n//     // langPath: 'D:/Cailibuhong/video2Graph/video2Graph/src/utils/tesseract'\r\n//   });;\r\n// console.log(worker)\r\n// worker.load()\r\n// worker.loadLanguage('eng')\r\n// worker.initialize('eng')\r\nexport default {\r\n  props: [\"videoTime\"],\r\n  data() {\r\n    return {\r\n      data: TestJson,  //test in the online demo\r\n      editConfirmShow:false,\r\n      showIMG:true,\r\n      gData: \"TestJson\",\r\n      imgMap:ImgMapJson,\r\n      relData: TestRelJson, //test in the online demo\r\n      slidesUpUrl:require(\"@/assets/Case1-Slides/0.00.png\"),\r\n      slidesDownUrl:require(\"@/assets/Case1-Slides/0.08.png\"),\r\n      assistGTransformX: -200,\r\n      assistGTransformY: -200,\r\n      recognizeText:\"\",\r\n      loadLoading: false,\r\n      drawEntityLocation: [],\r\n      VideoEditPanelShow:false,\r\n      showEntityList: [],\r\n      switchL: [],\r\n      overEntityId: '',\r\n      overTargetEntityId: '',\r\n      showEntityRelIdList: [],\r\n      showEntityRelIdOverState: '',\r\n      rootEntityList: [],\r\n      rootSvg: null,\r\n      TimeAxisSvg: null,\r\n      groupsSvg: null,\r\n      arcG: null,\r\n      curEntId: '',\r\n      insertEntId: '',\r\n      editDivShow: false,\r\n      minDImportance: 0,\r\n      maxDImportance: 0,\r\n      minDRelevance: 0,\r\n      maxDRelevance: 0,\r\n      maxDDuration: 0,\r\n      timeAxisX: 0,\r\n      timeAxisW: 200,\r\n      timeAxisDropFlag: 0,\r\n      timeAxisDownX: 0,\r\n      timeAxisDownW: 60,\r\n      maxTotalDuration: 0,\r\n      videoDuration: 668,\r\n      totalDuration: 1000,\r\n      importanceColor_linear: null,\r\n      importanceCompute_color: null,\r\n      relevanceScale_linear: null,\r\n      totalDurationScale_linear: null,\r\n      sumTotalDuration: 0,\r\n      // importanceMinColor: \"rgb(1, 164, 183)\",\r\n      // importanceMaxColor: \"rgb(106, 52, 127)\",\r\n      zoomInUrl: require(\"@/assets/img/zoomIn.png\"),\r\n      zoomOutUrl: require(\"@/assets/img/zoomOut.png\"),\r\n      editToolUrl: require(\"@/assets/img/edit.png\"),\r\n      tipUrl: require(\"@/assets/img/tip.png\"),\r\n      editAddUrl: require(\"@/assets/img/edit_Add.png\"),\r\n      editAddNUrl: require(\"@/assets/img/edit_AddN.png\"),\r\n      editDelUrl: require(\"@/assets/img/edit_Delete.png\"),\r\n      editConfirmUrl: require(\"@/assets/img/已看.png\"),\r\n      layoutShow: 2,\r\n      graphGTransformK: 1,\r\n      graphGTransformX: 10,\r\n      graphGTransformY: 100,\r\n      graphGMoveX: 10,\r\n      graphSvgScale: 1,\r\n      moveTimer: null,\r\n      moveFlag: false,\r\n      importanceMinColor: \"rgb(203, 230, 209)\",\r\n      importanceMaxColor: \"rgb(22, 144, 207)\",\r\n      stepX: 150,\r\n      stepY: 100,\r\n      btnRel: false,\r\n      btnSim: false,\r\n      btnAso: false,\r\n      btnEdi: false,\r\n      circleInterval: 55,\r\n      width: 0,\r\n      height: 0,\r\n      curToolState: 'unEdit',\r\n      margin: { top: 80, right: 20, bottom: 0, left: 20 },\r\n      color: [\r\n        \"rgb(255,60,60)\",\r\n        \"rgb(0, 178, 171)\",\r\n        // \"rgb(255,83,255)\",\r\n        \"rgb(235,135,162)\",\r\n        \"rgb(255,178,101)\",\r\n        \"rgb(63,151,134)\",\r\n        \"rgb(83,255,255)\",\r\n        \"rgb(0,122,244)\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      mcolor: [\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n      ],\r\n      // mcolor: [\r\n      //   \"rgb(91, 107, 255)\",\r\n      //   \"rgb(0, 178, 171)\",\r\n      //   // \"rgb(6, 214, 160)\",\r\n      //   \"rgb(255, 120, 90)\",\r\n      //   \"rgb(125, 98, 211)\",\r\n      //   \"rgb(255, 113, 212)\",\r\n      //   \"rgb(112, 214, 255)\",\r\n      //   \"rgb(255, 159, 28)\",\r\n      //   \"rgb(255, 77, 109)\",\r\n      // ],\r\n      mDarkcolor: [\r\n        \"rgb(95, 39, 179)\",\r\n        \"rgb(221, 83, 72)\",\r\n        \"rgb(0, 158, 148)\",\r\n        \"rgb(93, 88, 202)\",\r\n        \"rgb(180, 72, 79)\",\r\n        \"rgb(202, 134, 32)\",\r\n        \"rgb(46, 174, 202)\",\r\n      ],\r\n      mLigntcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      editVideoJage:false,\r\n      editVideoSP:[],\r\n      editVideoEP:[],\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    switchL: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.btnRel = val[0];\r\n        this.btnSim = val[1];\r\n        this.btnAso = val[2];\r\n        this.btnEdi = val[3];\r\n        this.updataRel()\r\n      }\r\n    },\r\n    recognizeText(val){\r\n      const _this =this;\r\n      _this.$bus.$emit(\"recognizeText\", [1,val]);\r\n    },\r\n    timeAxisX(val) {\r\n      const _this = this;\r\n      _this.updataTimeAxisDur(_this.TimeAxisSvg, _this.timeAxisX, _this.timeAxisW);\r\n    },\r\n    curEntId(val) {\r\n      const _this = this;\r\n      _this.overEntityId = val;\r\n      console.log(val)\r\n      _this.$bus.$emit(\"selectE\", val);\r\n      let entityLocationData = _this.drawEntityLocation;\r\n\r\n      let relData = _this.relData;\r\n      let showJageData = _this.showEntityList;\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n        let sorceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          let trnId = '-1';\r\n          if (sorceId == parseInt(val)) {\r\n            trnId = targetId;\r\n          }\r\n          else if (targetId == parseInt(val)) {\r\n            trnId = sorceId;\r\n          }\r\n\r\n          // if (trnId != '-1') {\r\n          //   let curEnt = entityLocationData.find(function (d) { return parseInt(d['id']) == trnId });\r\n          //   _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r']) + 150;\r\n          //   _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r']) + 300;\r\n          //   _this.updataAssistGraphPanel();\r\n          // }\r\n        }\r\n\r\n      };\r\n      let similarityRel = relData['similarityRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n        let sorceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          let trnId = '-1';\r\n          if (sorceId == parseInt(val)) {\r\n            trnId = targetId;\r\n          }\r\n          else if (targetId == parseInt(val)) {\r\n            trnId = sorceId;\r\n          }\r\n          // if (trnId != '-1') {\r\n          //   let curEnt = entityLocationData.find(function (d) { return parseInt(d['id']) == trnId });\r\n          //   _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r']) + 150;\r\n          //   _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r']) + 300;\r\n          //   _this.updataAssistGraphPanel();\r\n          // }\r\n        }\r\n\r\n      };\r\n\r\n\r\n    },\r\n    overEntityId(val) {\r\n      const _this = this;\r\n\r\n      _this.$bus.$emit(\"overEntityId\", val);\r\n      let relList = [];\r\n      let relRootList = [];\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let basicRel = relData['basicRel'];\r\n      d3.selectAll('.timeText').attr(\"opacity\", 0)\r\n      d3.selectAll('.timeAxisEnt').attr(\"stroke-width\", 0).attr(\"opacity\", 0.4).attr(\"stroke\", function () {\r\n        let cid = d3.select(this).attr(\"id\").split(\"_\")[1];\r\n        let nd = oData.find(function (d) { return d['id'] == cid });\r\n        return nd['colorD']\r\n      });\r\n      for (let re = 0; re < basicRel.length; re++) {\r\n\r\n        let sorceId = basicRel[re][0];\r\n        let targetId = basicRel[re][1];\r\n        let cNode = '';\r\n        if (sorceId == val) {\r\n          cNode = oData.find(function (d) { return d['id'] == targetId });\r\n          relList.push(targetId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n\r\n        if (targetId == val) {\r\n          cNode = oData.find(function (d) { return d['id'] == sorceId });\r\n          relList.push(sorceId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n      };\r\n      relList.forEach((self, indx, arr) => {\r\n\r\n        d3.select(`#timeAxisEnt_${self}`).attr(\"stroke\", 'white').attr(\"stroke-width\", 2).attr(\"opacity\", 1);\r\n        d3.select(`#timeText_${self}_0`).attr(\"opacity\", 1);\r\n      })\r\n      d3.select(`#timeAxisEnt_${val}`).attr(\"stroke-width\", 2).attr(\"opacity\", 1);\r\n      d3.select(`#timeText_${val}_0`).attr(\"opacity\", 1);\r\n    },\r\n    showEntityRelIdList(val) {\r\n      this.updataRel();\r\n    },\r\n    groupsSvg: {\r\n      deep: true,\r\n      handler() {\r\n        this.updataAssistGraphPanel();\r\n      }\r\n    },\r\n    gData(val) {\r\n    },\r\n    layoutShow(val) {\r\n      const _this = this;\r\n      let showEntityList = tools.deepClone(_this.data);\r\n      for (let e in showEntityList) {\r\n        if (parseInt(showEntityList[e]['layout']) < parseInt(val))\r\n          showEntityList[e]['show'] = true;\r\n        else {\r\n          showEntityList[e]['show'] = false;\r\n        }\r\n      }\r\n      _this.showEntityList = showEntityList;\r\n      _this.updataGraph();\r\n    },\r\n    data(val) {\r\n    },\r\n    videoTime(val) {\r\n      const _this = this;\r\n      let imgMap  =_this.imgMap;\r\n      for(let i=0;i<imgMap.length-1;i++){\r\n        console.log(i,imgMap[i+1]);\r\n        let timeStart = tools.time2seconds2(imgMap[i]);\r\n        let timeEnd = tools.time2seconds2(imgMap[i+1]);\r\n        if ((val > timeStart) && (val < timeEnd)) {\r\n          let u = i-1;\r\n          let d = i+1;\r\n          if(u<0){u=0}\r\n          if(d>imgMap.length-1){d = imgMap.length-1}\r\n          _this.slidesUpUrl = require(`@/assets/Case1-Slides/${imgMap[u]}.png`);\r\n        \r\n          _this.slidesDownUrl = require(`@/assets/Case1-Slides/${imgMap[d]}.png`)\r\n        }\r\n      }\r\n      let entityLocationData = _this.drawEntityLocation;\r\n      for (let e = 0; e < entityLocationData.length; e++) {\r\n        let curD = entityLocationData[e];\r\n        let timeStart = tools.time2seconds(entityLocationData[e]['time'][0]);\r\n        let timeEnd = tools.time2seconds(entityLocationData[e]['time'][1]);\r\n        if ((val > timeStart) && (val < timeEnd)) {\r\n          let entX = entityLocationData[e]['x'];\r\n          let entY = entityLocationData[e]['y'];\r\n          let entR = entityLocationData[e]['r'];\r\n          let moveLinear = d3.scaleLinear([timeStart, timeEnd], [entX - entR, entX + entR])\r\n          _this.graphGTransformX = -moveLinear((val));\r\n        }\r\n      }\r\n    },\r\n    graphGMoveX(val) {\r\n      const _this = this;\r\n      let data = _this.drawEntityLocation;\r\n      let stjg = 0;\r\n      let enjg = 0;\r\n      let snode = '';\r\n      let enode = '';\r\n      let width = 1590\r\n      data.forEach((self, indx, arr) => {\r\n        let entx = self['x'] * _this.graphGTransformK;\r\n        let transformX = entx + val;\r\n        if ((transformX > 0) && (transformX < width)) {\r\n          stjg++;\r\n        }\r\n        else {\r\n          if ((stjg > 0) && enjg == 0) {\r\n            enode = self;\r\n            enjg = 1\r\n          }\r\n        }\r\n        if (stjg == 1) {\r\n          snode = self\r\n        }\r\n      })\r\n      let ew = enode['timeW'];\r\n      if (snode == '') {\r\n        _this.timeAxisX = 0\r\n      }\r\n      else\r\n        _this.timeAxisX = snode['timeX'];\r\n      _this.timeAxisW = enode['timeX'] - snode['timeX'] + enode['timeW']\r\n      if (ew == undefined) {\r\n        _this.timeAxisW = width - snode['timeX']\r\n      }\r\n    },\r\n    graphGTransformX(val) {\r\n      const _this = this;\r\n      let groups = _this.groupsSvg;\r\n      _this.graphGMoveX = _this.graphGTransformX;\r\n      let graphGTransformX = _this.graphGTransformX;\r\n      let graphGTransformY = _this.graphGTransformY;\r\n      let graphGTransformK = _this.graphGTransformK;\r\n      groups.attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n    }\r\n  },\r\n  methods: {\r\n    addNode() {\r\n      const _this = this;\r\n      _this.editConfirmShow = true,\r\n      _this.VideoEditPanelShow = true,\r\n      _this.editDivShow = false;\r\n      _this.$bus.$emit(\"recognizeText\", [1,\"Please select on the video\"]);\r\n      d3.select(\"#VideoEditPanel\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#VideoEditPanel\").append(\"svg\")\r\n        .attr(\"width\", \"946\")\r\n        .attr(\"height\", \"553\");\r\n      svg.on(\"mousedown\",function(d){\r\n        _this.editVideoSP = [d.layerX,d.layerY];\r\n        _this.editVideoJage = true;\r\n      }).on(\"mousemove\",function(d){\r\n        if(_this.editVideoJage){\r\n        let sP = _this.editVideoSP;\r\n        _this.editVideoEP = [d.layerX,d.layerY];\r\n        let eP =  [d.layerX,d.layerY];\r\n        let eX  = sP[0]>eP[0]?sP[0]:eP[0];\r\n        let eY  = sP[1]>eP[1]?sP[1]:eP[1];\r\n        let sX  = sP[0]<eP[0]?sP[0]:eP[0];\r\n        let sY  = sP[1]<eP[1]?sP[1]:eP[1];\r\n        _this.drawRect(svg,sX , sY, Math.abs(eX-sX), Math.abs(eY - sY), 0,0,\"rgba(0,0,0,0)\",1, \"red\", `videoRect`)}\r\n      }).on(\"mouseup\",function(d){\r\n        _this.editVideoJage = false;\r\n        \r\n        let sP = _this.editVideoSP;\r\n        let eP = [d.layerX,d.layerY];;\r\n\r\n        let eX  = sP[0]>eP[0]?sP[0]:eP[0];\r\n        let eY  = sP[1]>eP[1]?sP[1]:eP[1];\r\n        let sX  = sP[0]<eP[0]?sP[0]:eP[0];\r\n        let sY  = sP[1]<eP[1]?sP[1]:eP[1];\r\n        \r\n        var player = document.getElementById(\"playVideo\");   //获取video的Dom节点\r\n        player.setAttribute(\"crossOrigin\", \"anonymous\");  //添加srossOrigin属性，解决跨域问题\r\n        var canvas = document.createElement(\"canvas\");\r\n        \r\n        canvas.width = player.clientWidth;\r\n        canvas.height = player.clientHeight;\r\n        // canvas = canvas.getContext(\"2d\")\r\n        canvas.getContext(\"2d\").drawImage(player , 0, 0, canvas.width, canvas.height);//截\r\n        const data = canvas.getContext(\"2d\").getImageData(sX , sY,eX-sX, eY-sY);\r\n        // const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\r\n        var canvass = document.createElement(\"canvas\");\r\n        canvass.width =eX-sX;\r\n        canvass.height = eY-sY;\r\n        canvass.getContext(\"2d\").putImageData(data, 0,0)\r\n        var dataURL = canvass.toDataURL(\"image/png\");  //将图片转成base64格式\r\n        var img = document.createElement('img');\r\n        img.src = dataURL\r\n        Tesseract.recognize(\r\n          canvass,\r\n          'eng',\r\n          { logger: m => console.log(m) }\r\n        ).then((d) => {\r\n          console.log(d.data.text);\r\n          _this.$bus.$emit(\"recognizeText\", [1,d.data.text]);\r\n        })\r\n        \r\n        // document.getElementById(\"VideoEditPanel\").appendChild(img);   //显示在页面中\r\n        // var string = ocrad(canvass);\r\n        // console.log(string)\r\n        // alert(string);\r\n      })\r\n    },\r\n    // VideoEditPanelShow(val) {\r\n    //   const _this = this;\r\n    //   if (val) {\r\n    //     let width = _this.$refs.VideoEditPanel.offsetWidth;\r\n    //     let height = document.getElementById(\"VideoEditPanel\").clientHeight;\r\n    //     d3.select(\"#VideoEditPanel\").select(\"svg\").remove()\r\n    //     var svg = d3.select(\"#VideoEditPanel\").append(\"svg\")\r\n    //       .attr(\"width\", width)\r\n    //       .attr(\"height\", height);\r\n    //   }\r\n    // },\r\n    addNodeN() {\r\n      const _this = this;\r\n      _this.editDivShow = false;\r\n\r\n    },\r\n    delNode() {\r\n      const _this = this;\r\n      _this.editDivShow = false;\r\n    },\r\n    editToolClk() {\r\n      // const _this = this;\r\n      // if (_this.curToolState == 'edit') _this.curToolState = 'unEdit';\r\n      // else if (_this.curToolState != 'edit') _this.curToolState = 'edit';\r\n      // this.$emit(\"toolState\", this.curToolState);\r\n    },\r\n    editConfirm(){\r\n      console.log(\"confirm\")\r\n      const _this = this;\r\n      _this.loadLoading = true;\r\n      setTimeout(() => {\r\n        _this.loadLoading = false;\r\n        }, 2000);\r\n      _this.editDivShow = false;\r\n      _this.editConfirmShow = false;\r\n      _this.VideoEditPanelShow = false;\r\n      _this.$bus.$emit(\"recognizeText\", [0,\"\"]);\r\n    },\r\n    updataRel() {\r\n      const _this = this;\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let showJageData = _this.showEntityList;\r\n      let showRel = _this.showEntityRelIdList;\r\n      let basicRel = relData['basicRel'];\r\n\r\n      if (_this.btnRel) {\r\n        if (_this.btnSim) {\r\n          d3.selectAll('.similarityRel').attr('opacity', 1);\r\n        }\r\n        else if (!_this.btnSim) {\r\n          d3.selectAll('.similarityRel').attr('opacity', 0);\r\n        }\r\n        if (_this.btnAso) {\r\n          d3.selectAll('.basicRel').attr('opacity', 1);\r\n        }\r\n        else if (!_this.btnAso) {\r\n          d3.selectAll('.basicRel').attr('opacity', 0);\r\n        }\r\n        // d3.selectAll('.similarityRel').attr('opacity', 1);\r\n        // d3.selectAll('.basicRel').attr('opacity', 1);\r\n      }\r\n      else if (!_this.btnRel) {\r\n        d3.selectAll('.similarityRel').attr('opacity', 0);\r\n        d3.selectAll('.basicRel').attr('opacity', 0);\r\n      }\r\n      if (!_this.btnRel || !_this.btnAso) {\r\n        for (let r = 0; r < basicRel.length; r++) {\r\n          let sorceId = basicRel[r][0];\r\n          let targetId = basicRel[r][1];\r\n          let idN = \"basicRel\" + sorceId + \"_\" + targetId;\r\n          if (_this.overTargetEntityId == '') {\r\n            if ((showRel.includes(sorceId)) || (showRel.includes(targetId))) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'grey')\r\n            }\r\n            else {\r\n              d3.select(`#${idN}`).attr('opacity', 0)\r\n            }\r\n          }\r\n          else {\r\n\r\n            if ((showRel.includes(sorceId + '')) || (showRel.includes(targetId + ''))) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'grey')\r\n            }\r\n            else {\r\n              d3.select(`#${idN}`).attr('opacity', 0)\r\n            }\r\n            if ((showRel.includes(sorceId + '')) && (targetId == _this.overTargetEntityId)) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'darkslateblue')\r\n            }\r\n            else if ((showRel.includes(targetId + '')) && (sorceId == _this.overTargetEntityId)) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'darkslateblue')\r\n            }\r\n          }\r\n        };\r\n      };\r\n      \r\n      _this.updataAssistGraphPanel();\r\n    },\r\n    drawRelationshipLine(svg) {\r\n      const _this = this;\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let showJageData = _this.showEntityList;\r\n      let margin = _this.margin;\r\n      let height = svg.attr('height');\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n\r\n        let sorceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        let idN = \"basicRel\" + sorceId + \"_\" + targetId;\r\n        let classN = \"basicRel source\" + sorceId + \" target\" + targetId;\r\n        let sorceNode = oData.find(function (d) { return d['id'] == sorceId });\r\n        let targetNode = oData.find(function (d) { return d['id'] == targetId });\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          if (sorceNode['x'] > targetNode['x']) {\r\n            let tp = sorceNode;\r\n            sorceNode = targetNode;\r\n            targetNode = tp;\r\n          }\r\n          const path = d3.path();\r\n\r\n          let startX = sorceNode['x'];\r\n          let endX = targetNode['x'];\r\n          let midX = (startX + endX) / 2;\r\n          let flag = ((sorceNode['sonFlag']) || (targetNode['sonFlag']));\r\n          // if((targetNode['id'] == \"4\")||((sorceNode['id']==\"1\")&&(targetNode['id']==\"6\"))||((sorceNode['id']==\"2\")&&(targetNode['id']==\"7\"))||((sorceNode['id']==\"3\")&&(targetNode['id']==\"8\"))){\r\n          //   flag = true;\r\n          // }\r\n          if (targetNode['id'] == \"4\") {\r\n            flag = true;\r\n          }\r\n          // if(targetNode['id'] == \"30\"){\r\n          //   flag = true;\r\n          // }\r\n          let rsourceint = (sorceNode['sonFlag']) ? (49) : (2);\r\n          let rtargetint = (targetNode['sonFlag']) ? (49) : (2);\r\n          let startY = (flag) ? (sorceNode['y'] - sorceNode['r'] - rsourceint) : (sorceNode['y'] + sorceNode['r'] + rsourceint);\r\n          let endY = (flag) ? (targetNode['y'] - targetNode['r'] - rtargetint) : (targetNode['y'] + targetNode['r'] + rtargetint);\r\n\r\n          let cnx1 = startX - 50;\r\n          let cnx2 = endX + 50;\r\n          let midY = (startY + endY) / 2;\r\n          // if(((sorceNode['id']==\"1\")&&(targetNode['id']==\"6\"))||((sorceNode['id']==\"2\")&&(targetNode['id']==\"7\"))||((sorceNode['id']==\"3\")&&(targetNode['id']==\"8\"))){\r\n          //   midY-=140\r\n          // }\r\n          let h = (((endX - startX) / 5) > (parseInt(height) + 100)) ? (parseInt(height) + 100) : ((endX - startX) / 5);\r\n          let cny = (flag) ? (midY - h) : (midY + h);\r\n\r\n          let cny1 = cny;\r\n          let cny2 = cny;\r\n\r\n          if (((sorceNode['layout'] == 2) && (cny < 0)) || ((sorceNode['layout'] == 0) && (cny > 0))) {\r\n            cnx1 -= 250;\r\n            cny1 = cny * 1.3;\r\n          }\r\n          if (((targetNode['layout'] == 2) && (cny < 0)) || ((targetNode['layout'] == 0) && (cny > 0))) {\r\n            cnx2 += 250;\r\n            cny2 = cny * 1.3;\r\n          }\r\n          if((sorceId == '14')&&(targetId == '7')){\r\n            cny*=1.4}\r\n          // let midP = [(startP[0]+endP[0])/2,(startP[1])>(endP[1])?(startP[1]-100):(endP[1]-100)];\r\n          path.moveTo(startX, startY);\r\n          path.bezierCurveTo(midX, cny, midX, cny, endX, endY);\r\n          _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"9,9\", idN, classN);\r\n        }\r\n\r\n      };\r\n      let similarityRel = relData['similarityRel'];\r\n      // let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n\r\n        let sorceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n\r\n        let idN = \"similarityRel\" + sorceId + \"_\" + targetId;\r\n\r\n        let classN = \"similarityRel source\" + sorceId + \" target\" + targetId;\r\n        let sorceNode = oData.find(function (d) { return d['id'] == sorceId });\r\n        let targetNode = oData.find(function (d) { return d['id'] == targetId });\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n\r\n          if (sorceNode['x'] > targetNode['x']) {\r\n            let tp = sorceNode;\r\n            sorceNode = targetNode;\r\n            targetNode = tp;\r\n          }\r\n          const path = d3.path();\r\n\r\n          let startX = sorceNode['x'] + sorceNode['r'] / 2;\r\n          let endX = targetNode['x'] - targetNode['r'] / 2;\r\n          let midX = (startX + endX) / 2;\r\n          let flag = ((sorceNode['sonFlag']) || (targetNode['sonFlag']));\r\n          let rsourceint = (sorceNode['sonFlag']) ? (20) : (2);\r\n          let rtargetint = (targetNode['sonFlag']) ? (20) : (2);\r\n          let startY = (flag) ? (sorceNode['y'] - sorceNode['r'] - rsourceint) : (sorceNode['y'] + sorceNode['r'] + rsourceint);\r\n          let endY = (flag) ? (targetNode['y'] - targetNode['r'] - rtargetint) : (targetNode['y'] + targetNode['r'] + rtargetint);\r\n\r\n          let midY = (startY + endY) / 2;\r\n\r\n          // let h1Scale_linear = d3.scaleLinear([0, _this.width], [(sorceNode['y']>targetNode['y'])?(sorceNode['y']*2):(targetNode['y']*2),parseInt(height)])\r\n          let h = (((endX - startX) / 14) > (parseInt(height) - 10)) ? (parseInt(height) - 10) : ((endX - startX) / 14);\r\n          let hScale_linear = d3.scaleLinear([0, _this.width / 2], [0, (h-80) / 3 * 2])\r\n          let cny = (flag) ? (midY - hScale_linear(endX)) : (midY + hScale_linear(endX));\r\n          // if (sorceNode['id'] == '7') { cny -= 20 }\r\n          if (cny < -150) {\r\n            startY = sorceNode['y'] + sorceNode['r'] + rsourceint\r\n            endY = targetNode['y'] + targetNode['r'] + rtargetint\r\n            cny = height - cny - 300;\r\n          }\r\n          if(targetId==\"5\"||sorceId==\"5\"){cny+=250}\r\n          if(targetId==\"28\"||sorceId==\"9\"){cny-=1050}\r\n          if(targetId==\"6\"||sorceId==\"6\"){cny+=150}\r\n          path.moveTo(startX, startY);\r\n          path.lineTo(startX, cny);\r\n          path.lineTo(endX, cny);\r\n          path.lineTo(endX, endY);\r\n          _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"0\", idN, classN);\r\n        }\r\n\r\n\r\n      };\r\n      _this.updataRel()\r\n    },\r\n    drawMain(svg) {\r\n      let _this = this;\r\n      let data = _this.data;\r\n      let margin = _this.margin;\r\n\r\n      let width = _this.width - margin.left - margin.right;\r\n      let height = _this.height - margin.top - margin.bottom;\r\n\r\n      let graphGTransformX = _this.graphGTransformX;\r\n      let graphGTransformY = _this.graphGTransformY;\r\n      let graphGTransformK = _this.graphGTransformK;\r\n      let axisGroups = svg.append(\"g\").attr(\"id\", \"axisGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      let groups = svg.append(\"g\").attr(\"id\", \"groups\").attr(\"width\", width).attr(\"height\", height)\r\n        .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"backG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"arcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let timeLineG = groups.append(\"g\").attr(\"id\", \"timeLineG\").attr(\"width\", width).attr(\"height\", height);\r\n      let circleG = groups.append(\"g\").attr(\"id\", \"circleG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      _this.arcG = arcG;\r\n      let stepX = _this.stepX;\r\n      let stepY = _this.stepY;\r\n      let interval = _this.circleInterval;\r\n\r\n\r\n      let scalePre = _this.graphSvgScale;\r\n      let stx = 0;\r\n      let sty = 0;\r\n      let stk = 1;\r\n      var graphZoom = d3.zoom()\r\n        .scaleExtent([0, 10])\r\n        .on(\"start\", (e) => {\r\n          sty = e.transform.y;\r\n          stx = e.transform.x;\r\n          stk = e.transform.k;\r\n        })\r\n        .on('zoom', (e) => {\r\n          graphGTransformX = _this.graphGTransformX + e.transform.x - stx;\r\n          graphGTransformY = _this.graphGTransformY + e.transform.y - sty;\r\n          graphGTransformK = _this.graphGTransformK + e.transform.k - stk;\r\n          _this.graphGMoveX = graphGTransformX;\r\n\r\n          groups.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        })\r\n        .on('end', (e) => {\r\n          _this.graphGTransformX = graphGTransformX;\r\n          _this.graphGTransformY = graphGTransformY;\r\n          _this.graphGTransformK = graphGTransformK;\r\n          groups.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        });\r\n\r\n\r\n      svg.call(graphZoom)\r\n      // .call(graphZoom.transform, d3.zoomIdentity.scale(1))\r\n      const path = d3.path()\r\n      path.moveTo(margin.left, margin.top)\r\n      let x = margin.left;\r\n      let prex = margin.left;\r\n      let prey = margin.top;\r\n      let prer = 0;\r\n      let preSonLen = 0;\r\n      let layoutShow = _this.layoutShow;\r\n      let sumTotalDuration = 0;\r\n      let rootIndex = -1;\r\n      for (let i = 0; i < data.length; i++) {\r\n        let lay = parseInt(data[i]['layout']);\r\n\r\n        let colors = _this.mcolor;\r\n        let colorsD = _this.mDarkcolor;\r\n        let entityLocationData = tools.deepClone(data[i]);\r\n        if (lay == 0) {\r\n          rootIndex++;\r\n        }\r\n        entityLocationData['rootIndex'] = rootIndex;\r\n        entityLocationData['color'] = colors[rootIndex % colors.length];\r\n        entityLocationData['colorD'] = colorsD[rootIndex % colorsD.length];\r\n        let timeList = data[i]['time'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        sumTotalDuration += duration;\r\n        let showEntity = _this.showEntityList.find(function (d) { return d['id'] == data[i]['id'] });\r\n        if ((showEntity['show'] == true)) {\r\n          let y = margin.top + lay * stepY\r\n          let relevanceValue = data[i]['attribute']['relevance'];\r\n          let totalDurationValue = data[i]['totalDuration'];\r\n          let rScale = _this.totalDurationScale_linear;\r\n\r\n\r\n          let r = rScale(totalDurationValue);\r\n          let stepL = r + stepX / 2 + interval / 10;\r\n          let controlP1x = prex + interval / 1;\r\n          let controlP2x = x - interval / 1;\r\n          let curLinex = x - r - interval;\r\n\r\n          let relData = _this.relData;\r\n          let oData = _this.drawEntityLocation;\r\n          let basicRel = relData['basicRel'];\r\n          let daId = data[(i)]['id'];\r\n          let jg = 0;\r\n          for (let re = 0; re < basicRel.length; re++) {\r\n\r\n            let sorceId = basicRel[re][0];\r\n            let targetId = basicRel[re][1];\r\n            let cNode = '';\r\n            if ((sorceId == daId) || (targetId == daId)) {\r\n              jg = 1;\r\n            }\r\n          };\r\n          let sonFlag = 1;\r\n          if (((i > 0) && (preSonLen == 0)) && (data[(i)]['son'].length == 0)) {\r\n            sonFlag = 0;\r\n            stepL = r + stepX / 1.2 + interval / 10;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval / 2 - interval / 1;\r\n            curLinex = r + interval / 10;\r\n          }\r\n          else if (((i > 0) && (preSonLen != 0)) && (data[(i)]['son'].length == 0)) {\r\n            sonFlag = 0;\r\n            stepL = r + stepX + interval + 30;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval / 1 - interval / 1;\r\n            curLinex = r + interval / 10;\r\n          }\r\n          else {\r\n            stepL = r + stepX + interval + 10;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval - interval / 1;\r\n            curLinex = r + interval;\r\n          }\r\n\r\n          if ((jg == 1) && (data[i]['type'] == 0) && (data[(i)]['son'].length == 0)) {\r\n            curLinex += r * 1.5\r\n          }\r\n          _this.drawEntity(circleG, x, y, r, data[i])\r\n          path.bezierCurveTo(controlP1x, prey, controlP2x, y, x - curLinex, y)\r\n          // path.lineTo(controlP1x, prey)\r\n          // path.lineTo(controlP2x, y)\r\n          // path.lineTo(x - curLinex, y)\r\n          path.moveTo(x + curLinex, y);\r\n          prex = x + curLinex;\r\n          prey = y;\r\n          prer = r;\r\n          preSonLen = data[(i)]['son'].length;\r\n          entityLocationData['x'] = x;\r\n          entityLocationData['y'] = y;\r\n          entityLocationData['r'] = r;\r\n        }\r\n        else {\r\n          entityLocationData['x'] = prex;\r\n          entityLocationData['y'] = prey;\r\n          entityLocationData['r'] = prer;\r\n        }\r\n        entityLocationData['sonFlag'] = (entityLocationData['son'].length > 0) ? (1) : (0);\r\n        // entityLocationData['showRel'] = false;\r\n        _this.drawEntityLocation.push(entityLocationData);\r\n      }\r\n      let entityLocationData = _this.drawEntityLocation;\r\n      let colors = _this.mcolor;\r\n      let colorIndex = 0;\r\n      let colorrootIndex = 0;\r\n\r\n      _this.sumTotalDuration = sumTotalDuration;\r\n      for (let i = 0; i < entityLocationData.length; i++) {\r\n        let x = entityLocationData[i]['x'];\r\n        let y = entityLocationData[i]['y'];\r\n        let r = entityLocationData[i]['r'];\r\n\r\n        let showEntity = _this.showEntityList.find(function (d) { return d['id'] == entityLocationData[i]['id'] });\r\n        if (entityLocationData[i]['type'] == 0 && (showEntity['show'] == true)) {\r\n          _this.drawEntityTimeAxis(circleG, entityLocationData[i]);\r\n        }\r\n        if ((entityLocationData[i]['layout'] == '0' && (entityLocationData[i]['name'] != 'Test'))) {\r\n          colorIndex = colorrootIndex;\r\n          colorrootIndex++;\r\n\r\n        }\r\n        if ((entityLocationData[i]['son'].length != 0) && (_this.showEntityList.find(function (d) { return d['id'] == entityLocationData[i]['son'][0] })['show'])) {\r\n          let maxxs = entityLocationData[i]['x'] - entityLocationData[i]['r'] - 40;\r\n          let maxys = entityLocationData[i]['y'] - entityLocationData[i]['r'] - 40;\r\n          let minxs = tools.deepClone(maxxs);\r\n          let minys = tools.deepClone(maxys);\r\n          let rectPoints = [[maxxs, maxys]];\r\n          let sons = tools.deepClone(data[i]['son']);\r\n          while ((sons.length > 0)) {\r\n            let s = sons[0];\r\n            sons.splice(0, 1);\r\n            let curson = entityLocationData.find(function (d) { return d['id'] == s; });\r\n            let curgson = curson['son'];\r\n            let curx = curson['x'] + curson['r'] * 2;\r\n            let cury = curson['y'] + curson['r'] * 2;\r\n            if (curx > maxxs) { maxxs = curx; }\r\n            // if(curson['y']<maxys)maxys = curson['y'];\r\n            if (cury < minys) minys = cury;\r\n            if (cury > maxys) maxys = cury;\r\n            for (let gs = 0; gs < curgson.length; gs++) {\r\n              sons.push(curgson[gs]);\r\n            }\r\n          }\r\n          rectPoints = [[minxs, minys], [minxs, maxys], [maxxs, maxys], [maxxs, minys]];\r\n          // _this.drawpolygon(backG, colors[colorIndex], rectPoints, \"rgb(255,255,255)\",0.3);\r\n          _this.drawRect(backG, minxs, minys, Math.abs(maxxs - minxs), Math.abs(maxys - minys), 20, 20, colors[colorIndex], 0.1, \"white\", `backRect${i}`)\r\n\r\n          colorIndex++;\r\n          colorIndex %= colors.length\r\n        }\r\n        // entityLocationData[i]['color'] = colors[colorIndex - 1];\r\n        // if ((entityLocationData[i]['layout'] == '0') && ((entityLocationData[i]['name'] == 'Test') || (entityLocationData[i]['name'] == 'Example'))) {\r\n        //   entityLocationData[i]['color'] = colors[colorIndex]\r\n        // }\r\n      }\r\n      _this.drawTimeLine(timeLineG, path, \"rgb(200,200,200)\", 5, '0', 'timeLine ', 'timeLine ');\r\n      _this.drawRelationshipLine(timeLineG);\r\n      _this.drawTimeAxis(_this.TimeAxisSvg);\r\n      _this.drawTypeRiver(_this.TimeAxisSvg);\r\n      _this.updataTimeAxisDur(_this.TimeAxisSvg, _this.timeAxisX, _this.timeAxisW);\r\n    },\r\n    updataTimeAxisDur(svg, x, width) {\r\n      const _this = this;\r\n      let margin = _this.margin;\r\n      let totalWidth = _this.width //margin.left - margin.right;\r\n      let y = 0;\r\n      let h = 200;\r\n      _this.drawRect(svg, 0, y, x, h, 3, 3, 'white', 0.3, '', \"timeAxisRect1\")\r\n      let curRect = _this.drawRect(svg, x, y - 0, width, h - 5, 3, 3, 'rgba(0,0,0,0)', 1, 'rgb(145, 180, 189)', 'winRect', 2);\r\n      // --------------------------------------\r\n      // curRect.on('mousemove', function (e) {\r\n      //   d3.select(this).attr(\"cursor\", 'pointer');\r\n      //   if (_this.timeAxisDropFlag == 1) {\r\n      //     let mx = e.clientX - _this.timeAxisDownX;\r\n      //     _this.timeAxisX = e.layerX - 450 - _this.timeAxisW / 2;\r\n      //   }\r\n      // })\r\n      // curRect.on('mousedown', function (e) {\r\n      //   _this.timeAxisDownX = e.clientX;\r\n      //   _this.timeAxisDropFlag = 1;\r\n      // })\r\n      // curRect.on('mouseup', function (e) {\r\n      //   _this.timeAxisDownX = e.clientX;\r\n      //   _this.timeAxisDropFlag = 0;\r\n      // })\r\n      // ----------------------------------------\r\n\r\n      _this.drawRect(svg, x + width, y, totalWidth - width, h, 3, 3, 'white', 0.3, '', \"timeAxisRect2\")\r\n    },\r\n    drawTypeRiver(svg) {\r\n      const _this = this;\r\n      let oriData = _this.data;\r\n      let resData = [];\r\n      let triLi = [];\r\n      let exeLi = [];\r\n      var defs = svg.append(\"defs\");\r\n\r\n      var filter = defs\r\n        .append(\"filter\")\r\n        .attr(\"id\", \"coolShadow\")\r\n        .attr(\"x\", \"-100%\")\r\n        .attr(\"y\", \"-100%\") //\r\n        .attr(\"width\", \"300%\")\r\n        .attr(\"height\", \"300%\"); //\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceGraphic\")\r\n        .attr(\"result\", \"upperLayer\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceAlpha\")\r\n        .attr(\"result\", \"enlargedAlpha\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feGaussianBlur\")\r\n        .attr(\"in\", \"enlargedAlpha\")\r\n        .attr(\"result\", \"bluredAlpha\")\r\n        .attr(\"stdDeviation\", \"3\");\r\n\r\n      filter\r\n        .append(\"feOffset\")\r\n        .attr(\"in\", \"bluredAlpha\")\r\n        .attr(\"result\", \"lowerLayer\")\r\n        .attr(\"dy\", \"1\"); //\r\n\r\n      var feMerge = filter.append(\"feMerge\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"lowerLayer\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"upperLayer\");\r\n      let total = 0\r\n      for (let i = 0; i < oriData.length; i++) {\r\n        let curEnt = oriData[i];\r\n        let tp = {}\r\n        tp['od'] = i;\r\n        tp['du'] =total;\r\n        total+=curEnt['totalDuration'];\r\n        console.log(curEnt)\r\n        if ((curEnt['type'] == \"1\")) {\r\n          triLi.push(tp);\r\n        }\r\n        if (curEnt['type'] == \"2\") {\r\n          exeLi.push(tp);\r\n        }\r\n        let typeData = curEnt[\"attribute\"][\"expressions\"];\r\n        let totalDur = 0;\r\n\r\n        for (let t in typeData) {\r\n          // let color = typeColor[i];\r\n          let typeDurition = typeData[t];\r\n          let totalTypeSeconds = 0;\r\n          for (let d in typeDurition) {\r\n            totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n          }\r\n          totalDur += totalTypeSeconds;\r\n          tp[t] = totalTypeSeconds;\r\n        }\r\n        for (let t in tp) {\r\n          if ((t != 'od')&&(t!='du')) {\r\n            tp[t] /= totalDur;\r\n            if (totalDur == 0) {\r\n              tp[t] = 0;\r\n            }\r\n          }\r\n        }\r\n        resData.push(tp)\r\n      }\r\n      let data = resData;\r\n      var stack = d3.stack()\r\n        .keys(['1', '2', '3'])\r\n        .order(d3.stackOrderInsideOut)\r\n        .offset(d3.stackOffsetWiggle);\r\n\r\n      let yRangeWidth = 70;\r\n      let w = parseInt(svg.attr(\"width\")) + 30\r\n      let xStep = (w) / oriData.length;\r\n      let xScale = d3.scaleLinear().domain([0,total]).range([0,w])\r\n      let yScale = d3.scaleLinear().domain([-1, 1]).range([0, 70]);\r\n      var area = d3.area()\r\n        .curve(d3.curveBasis)\r\n        .x(function (d) {\r\n          return 15+xScale(d.data.du)+d.data.od * 10//xStep + 15;\r\n        })\r\n        .y0(function (d) {\r\n          return 153 + yRangeWidth - yScale(d[0]);\r\n        })\r\n        .y1(function (d) {\r\n          return 153 + yRangeWidth - yScale(d[1]);\r\n        });\r\n      let stackData = stack(data)\r\n      console.log(\"stack\",resData,stackData)\r\n      let lenThreshold = 0.4;\r\n      let iconLi = {}\r\n      for (let s in stackData) {\r\n        iconLi[s] = []\r\n        for (let i in stackData[s]) {\r\n          let lenArea = stackData[s][i]\r\n          if ((lenArea[1] - lenArea[0]) > 0.4) {\r\n            iconLi[s].push([i, lenArea]);\r\n          }\r\n          for (let li in iconLi[s]) {\r\n            if (i < (iconLi[s][li][0] + 2)) {\r\n              let selectArea = iconLi[s][li][1]\r\n              if (((selectArea[1] - lenArea[1]) - (selectArea[0] - lenArea[0])) < 0.2) {\r\n                iconLi[s].splice(s, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // let areaG = svg.append(\"g\")\r\n      let typeColor = {\r\n        \"1\": \"#ff9c9c\",\r\n        \"2\": \"#f4f4d0\",\r\n        \"3\": \"#6f8be0\",\r\n      };\r\n      let colorLi = _this.mcolor;\r\n      svg.selectAll(\"path\")\r\n        .data(stackData)\r\n        .join(\"path\")\r\n        .attr(\"id\", function (d) { return d.key })\r\n        .attr(\"class\", \"river\")\r\n        .attr(\"d\", function (d) {\r\n          return area(d)\r\n        })\r\n        .attr(\"fill\", function (d, i) {\r\n          return typeColor[d.key]\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          d3.selectAll(\".river\").style(\"filter\", \"url()\")\r\n          d3.select(this).style(\"filter\", \"url(#coolShadow)\")\r\n        })\r\n\r\n      for (let t in triLi) {\r\n        let area = tools.calcTriangle((triLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n        _this.drawTxt(svg, (triLi[t]['od']) * xStep, -23, \"T\", \"white\", 0, \"middle\", 18)\r\n      }\r\n      for (let t in exeLi) {\r\n        let area = tools.calcTriangle((exeLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n        _this.drawTxt(svg, (exeLi[t]['od']) * xStep, -23, \"E\", \"white\", 0, \"middle\", 18)\r\n      }\r\n    },\r\n    drawTimeAxis(svg) {\r\n      const _this = this;\r\n      let sumTotalDuration = _this.sumTotalDuration;\r\n      let data = _this.drawEntityLocation;\r\n      let addData = tools.deepClone(_this.drawEntityLocation);\r\n      let margin = _this.margin;\r\n      let prex = margin.left;\r\n      let prey = 50;\r\n      let width = svg.attr(\"width\") -20 //margin.left - margin.right;\r\n      let height = _this.height - margin.top - margin.bottom;\r\n      let widthScale = d3.scaleLinear([0, sumTotalDuration], [0, width]);\r\n      data.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let id = self['id']\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        // console.log(timeList,tools.time2seconds(timeList[0]))\r\n        let evWidth = widthScale(duration) - 4;\r\n\r\n        let evTWidth = widthScale(totalDurationValue);\r\n        let lay = parseInt(self['layout']);\r\n        let evHight = 80 - 20 * lay;\r\n        let x = prex;\r\n        let y = prey + 20 * lay;\r\n        prex += evWidth + 4;\r\n        let cr = 3;\r\n        // if(self['type']==0){\r\n        if (1) {\r\n          if (lay == 0) {\r\n            _this.drawRect(svg, x-1, y - 59, 3, 42, 0, 0, self['color'], 0.4, 'white', `timeAxisEntBl_${indx}`, 0, 'timeAxisEntBl')\r\n\r\n            _this.drawTxt(svg, x+23, y  - 23, 10, [self['time'][0].split(\":\").splice(1).join(\":\")], self['color'], 15, `timeDurText_${id}`, 'timeDuyrText');\r\n            _this.drawRect(svg, x - 2, y - 20, evTWidth, 100, 6, 6, self['color'], 0.3, 'white', `timeAxisEntB_${indx}`, 1.5, 'timeAxisEntB')\r\n          }\r\n          _this.drawRect(svg, x, y, evWidth, evHight, 3, 3, self['color'], 0.4, self['colorD'], `timeAxisEnt_${id}`, 1.5, 'timeAxisEnt')\r\n          _this.drawTxt(svg, x + evWidth / 2, y + evHight + 20, 10, [self['name'].split(\" \").join(\" \")], \"grey\", 16, `timeText_${id}`, 'timeText');\r\n        }\r\n        else {\r\n          if (lay == 0) {\r\n            _this.drawRect(svg, x - 2, y - 20, evTWidth, 100, 6, 6, self['color'], 0.3, 'white', `timeAxisEntB_${id}`, 1.5, 'timeAxisEnt')\r\n          }\r\n          let area = [[x + cr, y + evHight - cr], [x - cr + evWidth, y + evHight - cr], [x + evWidth / 2, y]];\r\n          _this.drawTriangle(svg, self['color'], area, self['color'], 1, cr * 2,\"entE\",`entE_${data['id']}`);\r\n        }\r\n        addData[indx]['timeX'] = x;\r\n        addData[indx]['timeW'] = evWidth\r\n      })\r\n\r\n      d3.selectAll('.timeText').attr(\"opacity\", 0)\r\n      _this.drawEntityLocation = addData;\r\n    },\r\n    drawTriangle(svg, color, points, stroke, opacity = 1, strokeW = 15,classNa,idNa) {\r\n      const _this = this;\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", points)\r\n        .attr(\"fill\", color)\r\n        .attr(\"id\", idNa)\r\n        .attr(\"class\", classNa)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .on(\"mouseover\", function (d) {\r\n          // d3.select(this).attr(\"r\", r * 1.1)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          _this.overEntityId = idN\r\n          let showRel = _this.showEntityRelIdList\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel.push(parseInt(idN))\r\n            _this.showEntityRelIdOverState = 0;\r\n          }\r\n          else {\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 1).attr(\"r\", 5)\r\n          }\r\n          // else {\r\n          //   d3.selectAll(\".f\" + data['id'])\r\n          //     .attr(\"transform\", function (d) {\r\n          //       let transformd = d3.select(this).attr(\"transform\")\r\n          //       return transformd.split(\" \")[0] + \" scale(1.1)\"\r\n          //     })\r\n\r\n          //   d3.selectAll(\".basicRel\")\r\n          //     .attr(\"class\", function (d) {\r\n          //       let classN = d3.select(this).attr(\"class\");\r\n          //       let classNList = classN.split(\" \");\r\n          //       let jg = 0;\r\n          //       for (let i = 0; i < classNList.length - 1; i++) {\r\n          //         if ('source' + data['id'] == classNList[i]) { jg = 1; }\r\n          //         if ('target' + data['id'] == classNList[i]) { jg = 1; }\r\n          //       }\r\n          //       if (jg == 1) {\r\n          //         // classN += \" activeS\";\r\n          //       }\r\n          //       return classN;\r\n          //     })\r\n          // }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          // d3.select(this).attr(\"r\", r)\r\n\r\n          _this.overEntityId = \"\"//_this.curEntId;\r\n          let classN = d3.select(this).attr(\"class\");\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList\r\n          if (_this.showEntityRelIdOverState == 1) {\r\n            showRel.push(parseInt(idN))\r\n          }\r\n          else {\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 0).attr(\"r\", 5)\r\n          }\r\n          // else {\r\n          //   d3.selectAll(\".f\" + data['id'])\r\n          //     .attr(\"transform\", function (d) {\r\n          //       let transformd = d3.select(this).attr(\"transform\")\r\n          //       return transformd.split(\" \")[0] + \" scale(1)\"\r\n          //     })\r\n          //   d3.select(\"#graphPanel\").selectAll(\"path\")\r\n          //     .attr(\"class\", function (d) {\r\n          //       let thisSelect = d3.select(this)\r\n          //       let classN = thisSelect.attr(\"class\");\r\n          //       let classNList = classN.split(\" \")\r\n          //       if (classNList[classNList.length - 1] == \"activeS\") {\r\n          //         classN = \"\";\r\n          //         for (let i = 0; i < classNList.length - 1; i++) {\r\n          //           classN += \" \" + classNList[i];\r\n          //         }\r\n          //       }\r\n          //       return classN\r\n          //     })\r\n          // }\r\n        })\r\n        .on(\"click\", function (d) {\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList;\r\n          //  - _this.showEntityRelIdOverState;\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel = [(parseInt(idN))]\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          else if (showRel.includes(parseInt(idN))) {\r\n            // showRel.filter(item=>{return item==parseInt(idN)})\r\n            _this.showEntityRelIdOverState = 0;\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          // d3.select(this).attr(\"r\", r);\r\n          // d3.selectAll(\".f\" + data['id'])\r\n          //   .attr(\"transform\", function (d) {\r\n          //     let transformd = d3.select(this).attr(\"transform\")\r\n          //     return transformd.split(\" \")[0] + \" scale(1)\"\r\n          //   })\r\n          let thisId = this.id.split(\"_\")[1];\r\n          _this.curEntId = thisId;\r\n          let thisData = _this.drawEntityLocation.find(function (a) { return a['id'] == thisId })\r\n          let thisTime = thisData['time'];\r\n          _this.click_Ent(thisTime);\r\n          let psvg = d3.select(\"#entG\");\r\n          let dw = psvg.attr(\"width\");\r\n          let dh = psvg.attr(\"height\");\r\n          psvg.remove();\r\n          let svg = d3.select('#editEnt').append(\"g\").attr(\"id\", \"entG\").attr(\"width\", dw).attr(\"height\", dh);\r\n          _this.drawEntity(svg, dw/2, 100, 50, thisData,1)\r\n          // if (thisData['type'] == 0 ) {\r\n            // _this.drawEntityTimeAxis(svg,thisData,[dw/2,100,10]);\r\n        // }\r\n          // console.log(thisTime,thisId,thisData)\r\n        })\r\n        .attr(\"stroke-width\", strokeW);\r\n    },\r\n    drawpolygon(svg, color, areas, stroke, opacity = 1) {\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", areas)\r\n        .attr(\"fill\", color)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", \"1.5px\");\r\n    },\r\n    drawEntityTimeAxis(svg, entData,copy=0) {\r\n\r\n      const _this = this;\r\n      let x = entData['x'];\r\n      let r = entData['r'];\r\n      let y = entData['y'] + r / 2;\r\n      if(copy!=0){\r\n        x = copy[0];\r\n        r = copy[2];\r\n        y = copy[1]+r/2;\r\n      }\r\n      let path1 = d3.path();\r\n      let jg1 = 0;\r\n      let path2 = d3.path();\r\n      let jg2 = 0;\r\n      let daId = entData['id']\r\n      let entDataO = _this.drawEntityLocation;\r\n      let sumTotalDuration = _this.sumTotalDuration;\r\n      let widthScale = d3.scaleLinear([0, sumTotalDuration], [0, Math.PI]);\r\n      let timeStepR = 0;\r\n      let timeStartR = -Math.PI / 2;\r\n      let inter = 0;\r\n      let sons = tools.deepClone(entData['son']);\r\n      let relList = [];\r\n      let relRootList = [];\r\n      let psNum = 0.5;\r\n      if ((sons.length > 0)) {\r\n        inter = 14\r\n      }\r\n\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let basicRel = relData['basicRel'];\r\n      for (let re = 0; re < basicRel.length; re++) {\r\n\r\n        let sorceId = basicRel[re][0];\r\n        let targetId = basicRel[re][1];\r\n        let cNode = '';\r\n        if (sorceId == daId) {\r\n          cNode = oData.find(function (d) { return d['id'] == targetId });\r\n          relList.push(targetId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n\r\n        if (targetId == daId) {\r\n          cNode = oData.find(function (d) { return d['id'] == sorceId });\r\n          relList.push(sorceId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n      };\r\n      // if(entData[]) \r\n      let wline = 0;\r\n      let sumTotalDurationF = 0;\r\n      entDataO.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let layout = self['layout'];\r\n        let rootIndex = self['rootIndex'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        timeStepR = widthScale(duration);\r\n        if (!relRootList.includes(rootIndex)) {\r\n          wline += timeStepR * psNum;\r\n          sumTotalDurationF += duration;\r\n        }\r\n      })\r\n      let widthScaleA = d3.scaleLinear([0, sumTotalDuration - sumTotalDurationF], [0, Math.PI - wline]);\r\n      // if(rootEntityList.length==0){\r\n      //   widthScaleA = widthScale\r\n      // }\r\n      // let wline = 0;\r\n      entDataO.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let layout = self['layout'];\r\n        let rootIndex = self['rootIndex'];\r\n        let cId = self['id'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        timeStepR = widthScale(duration);\r\n        if (!relRootList.includes(rootIndex)) {\r\n          if (relRootList.length != 0) {\r\n            timeStepR = psNum * widthScale(duration);\r\n          }\r\n        }\r\n        else {\r\n          timeStepR = widthScaleA(duration)\r\n        }\r\n        let endAnglet = timeStartR + timeStepR;\r\n        var dataset = { startAngle: timeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n        timeStartR = endAnglet;\r\n        let color = 'blue';\r\n        let rh = 30;\r\n        let h = rh;\r\n        let nh = 0;\r\n        if (relRootList.length != 0) {\r\n          h = rh * 0.32 + rh * 0.6 - 3 * layout;\r\n          nh = rh * 0.3;\r\n        }\r\n        if (!relRootList.includes(self['rootIndex'])) {\r\n          h = rh * 0.7;\r\n          nh = h * 0 + h * 0.6;\r\n        }\r\n        else {\r\n          dataset.startAngle += 0.003;\r\n          dataset.endAngle -= 0.003;\r\n\r\n        }\r\n        var arcPath = d3.arc()\r\n          .innerRadius(r + inter + nh)\r\n          .outerRadius(r + inter + h);\r\n        var pathArc = arcPath(dataset);\r\n        let arc;\r\n        if (relRootList.length != 0) {\r\n          let jiantouPath = d3.path();\r\n          jiantouPath.arc(x, y - r / 2, r + h + inter, - Math.PI, 0);\r\n\r\n          // _this.drawTimeLine(_this.arcG, jiantouPath, \"rgb(200,200,200)\", 1, '9,5', 'timeLayout ', 'timeLayout ');\r\n\r\n          if (relRootList.includes(self['rootIndex'])) {\r\n            if (relList.includes(parseInt(self['id']))) {\r\n            if((copy!=0) &&(jg1==0)){\r\n              jg1=1\r\n              path1.moveTo(2, 25)\r\n              path1.lineTo(150,25)\r\n              let ang = dataset.startAngle+Math.PI/2\r\n              _this.drawTxt(svg, 70, 20, 100, [\"Associated Concept\"], \"grey\", 15, `texts_1`);\r\n              // path1.lineTo((x+10),(y-r/2+10))\r\n              path1.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n              arc = _this.drawArc(svg, x, y - r / 2, pathArc, self['color'], self['color'], `timeAxisForSe f${entData['id']} ${self['id']}`, '0', 0, 1);\r\n            }\r\n            else {\r\n              // path1.lineTo(0,0) \r\n              arc = _this.drawArc(svg, x, y - r / 2, pathArc, \"white\", self['color'], `timeAxisFor f${entData['id']} ${self['id']}`, '0', 0.0, 0.4);\r\n            }\r\n          }\r\n          else {\r\n            arc = _this.drawArc(svg, x, y - r / 2, pathArc, self['color'], self['color'], `timeAxisFor f${entData['id']} ${self['id']}`, '0', 0, 0.2);\r\n\r\n          }\r\n          if(daId == self['id']){\r\n            let color = d3.select(`#entCircle_${self['id']}`).attr(\"fill\")\r\n            let da = tools.deepClone(dataset);\r\n            da.startAngle = (dataset.endAngle+dataset.startAngle)/2-0.001;\r\n            da.endAngle = (dataset.endAngle+dataset.startAngle)/2+0.0001;\r\n            let arcPa = d3.arc()\r\n            .innerRadius(r + inter + (nh+h)/2)\r\n            .outerRadius(r + inter + (nh+h)/2);\r\n            let pathA = arcPa(da);\r\n            if((copy!=0) &&(jg2==0)){\r\n              jg2=1\r\n              path2.moveTo(400, 125)\r\n              path2.lineTo(290,125)\r\n              let ang = da.startAngle+0.001+Math.PI/2\r\n              _this.drawTxt(svg, 350, 120, 100, [\"Current Concept\"], \"grey\", 15, `texts_1`);\r\n              // path1.lineTo((x+10),(y-r/2+10))\r\n              path2.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path2, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n            _this.drawArc(svg, x, y - r / 2, pathA, color, self['color'], `timeAxisself f${self['id']}`, '0', 6, 1);\r\n          }\r\n            if(copy!=0){\r\n              // _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 3, '9,5', 'mm ', 'mm ');\r\n            }\r\n          arc.on(\"mouseover\", function (d) {\r\n            let classN = d3.select(this).attr(\"class\");\r\n            let sId = (classN.split(\" \")[1] + \"\").slice(1);\r\n            let tId = classN.split(\" \")[2];\r\n            let type = classN.split(\" \")[0];\r\n            _this.showEntityRelIdList = [sId]\r\n            _this.overEntityId = sId;\r\n            _this.overTargetEntityId = tId;\r\n            _this.showIMG = false;\r\n            if (type != 'timeAxisFor') {\r\n              let curEnt = entDataO.find(function (d) { return parseInt(d['id']) == tId });\r\n              _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r'])// + 240;\r\n              _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r'])// + 350;\r\n              _this.updataAssistGraphPanel();\r\n            }\r\n\r\n          })\r\n          \r\n          arc.on(\"mouseleave\", function (d) {\r\n            let classN = d3.select(this).attr(\"class\");\r\n            let sId = (classN.split(\" \")[1] + \"\").slice(1);\r\n            let showRel = _this.showEntityRelIdList;\r\n            _this.overTargetEntityId = '';\r\n            _this.overEntityId = \"\"//_this.curEntId;\r\n            \r\n            _this.showIMG = true;\r\n            if (_this.showEntityRelIdOverState == 1) {\r\n              showRel.push(parseInt(sId))\r\n            }\r\n            else {\r\n              showRel.splice(showRel.indexOf(parseInt(sId)), 1)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    drawEntity(svg, x, y, r, data,copy=0) {\r\n      const _this = this;\r\n      let color_linear = _this.importanceColor_linear;\r\n      let compute_color = _this.importanceCompute_color;\r\n      let rScale = _this.relevanceScale_linear;\r\n      let oData = _this.data;\r\n      let path1 = d3.path();\r\n      let path2 = d3.path();\r\n      let jg2=0;\r\n      let ang2=0;\r\n      let path3 = d3.path();\r\n      let jg3=0;\r\n      let ang3=0;\r\n      let importanceValue = data['attribute']['importance'];\r\n      // let relevanceValuale(relevanceValue)\r\n      // { 'id': dae = data['attribute']['relevance'];\r\n      // let r = rScta[i]['id'], \"x\": x, \"r\": r, \"layout\": lay, \"y\": y, \"sonFlag\": sonFlag }\r\n\r\n\r\n      if (data['type'] == '1') {\r\n        let area = tools.calcTriangle(x, y, r);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entT\",`entT_${data['id']}`);\r\n\r\n        _this.drawTxt(svg, x, y + 8, 20, [\"T\"], 'white', 28, \"T\")\r\n      }\r\n      else if (data['type'] == '2') {\r\n        let area = tools.calcTriangle(x, y, r);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n\r\n        _this.drawTxt(svg, x, y + 8, 20, [\"E\"], 'white', 28, \"E\")\r\n      }\r\n      else {\r\n\r\n        let cy = y;\r\n        let totalDuration = _this.totalDuration;\r\n        let timeLineScale_linear = d3.scaleLinear([0, totalDuration], [x - r * Math.sqrt(3) / 2, x + r * Math.sqrt(3) / 2])\r\n        let timeLineHighScale_linear = d3.scaleLinear([0, _this.maxTotalDuration - 50], [r / 2, r * (1 + Math.sqrt(3) / 3 * 2)])\r\n        let circleColor = compute_color(color_linear(importanceValue));\r\n        _this.drawCircle(svg, x, cy, r, circleColor, data, 1, \"entCircle\", \"entCircle_\" + data['id']);\r\n\r\n        r = r * Math.sqrt(3) / 2;\r\n        y += r / 2;\r\n        let path = d3.path();\r\n\r\n\r\n        path.moveTo(x - r, y);\r\n        let lineLi = [data];\r\n        let linePoint = [{ 'id': data['id'], 'time': data['time'], 'x': 0, 'y': 0 }];\r\n        let jgidL = [data['id']];\r\n        let similarityRelsli = [data[\"similarityRel\"]];\r\n        while (similarityRelsli.length > 0) {\r\n          let similarityRels = similarityRelsli[0];\r\n          similarityRelsli.splice(0, 1);\r\n          let jg = 0;\r\n          for (let srel in similarityRels) {\r\n            let cdata = oData.find(function (d) { return d['id'] == similarityRels[srel] });\r\n            if (jgidL.indexOf(cdata['id']) == -1) {\r\n              similarityRelsli.push(cdata[\"similarityRel\"])\r\n              jg = 1;\r\n              lineLi.push(cdata)\r\n              jgidL.push(cdata['id'])\r\n              linePoint.push({ 'id': cdata['id'], 'time': cdata['time'], 'x': 0, 'y': 0 })\r\n            }\r\n          }\r\n          // if(jg==0){\r\n          // break;\r\n          // }\r\n        }\r\n\r\n        const sortmt = (a, b) => {\r\n          return tools.time2seconds(a[0]) - tools.time2seconds(b[0]);\r\n        }\r\n        const sortlp = (a, b) => {\r\n          return tools.time2seconds(a['time'][0]) - tools.time2seconds(b['time'][0]);\r\n        }\r\n\r\n        lineLi = lineLi.sort(sortlp);\r\n        linePoint = linePoint.sort(sortlp);\r\n        let lineData = [[x - r * Math.sqrt(3) / 2 - 4, y]];\r\n        for (let t = 0; t < lineLi.length; t++) {\r\n          let startT = lineLi[t]['time'][0];\r\n          let duration = lineLi[t]['totalDuration']\r\n          // let endT = lineLi[t]['time'][1];\r\n          let startS = tools.time2seconds(startT);\r\n          let endS = startS + duration;\r\n          // let startx = timeLineScale_linear((startS - duration * 10));\r\n          // let endx = timeLineScale_linear((endS + duration * 10));\r\n          let limst = (x - r * Math.sqrt(3) / 2);\r\n          let limed = (x + r * Math.sqrt(3) / 2);\r\n          let startx = (limst < timeLineScale_linear((startS))) ? (timeLineScale_linear((startS))) : (limst);\r\n          let endx = (limed > timeLineScale_linear((endS))) ? (timeLineScale_linear((endS))) : (limed);\r\n          // let midx = timeLineScale_linear((endS + startS) / 2);\r\n          let midx = (startx + endx) / 2;\r\n          let ys = y;\r\n          let yz = y - timeLineHighScale_linear((duration));\r\n          linePoint[t]['x'] = midx;\r\n          linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n          // if (startx < (lineData[lineData.length - 1][0])) {\r\n          if (t > 0) {\r\n            lineData.splice(lineData.length - 1, 1);\r\n            midx += t * 5;\r\n            startx = midx - ((midx - (lineData[lineData.length - 1][0] + midx) / 2)) / 2;\r\n            endx += t * 5;\r\n            ys = y + (y - lineData[lineData.length - 1][1]) / 3\r\n          }\r\n          // }\r\n          lineData.push([startx, ys], [midx, yz], [endx, y])\r\n          // let startx = timeLineScale_linear((startS - duration * 10));\r\n          // let endx = timeLineScale_linear((endS + duration * 10));\r\n\r\n          // let startyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let startyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let endyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let endyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let yz = y - timeLineHighScale_linear((duration));\r\n          // let midx = timeLineScale_linear((endS + startS) / 2);\r\n          // linePoint[t]['x'] = midx;\r\n          // linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n          // let y1 = y;\r\n          // if (startx < (lineData[lineData.length - 1][0])) {\r\n          //   if (t > 0) {\r\n          //     lineData.splice(lineData.length - 3, 3);\r\n          //     startx = (lineData[lineData.length - 1][0] + midx) / 2;\r\n          //     y1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //     startyf = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //     startyf1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //   }\r\n          // }\r\n          // let startx1 = startx + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let endx1 = endx - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let startx2 = startx1 + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let endx2 = endx1 - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // if (endx > (r + x)) endx = r + x;\r\n          // if (startx1 < (lineData[lineData.length - 1][0])) startx1 = lineData[lineData.length - 1][0];\r\n          // if (endx1 > (r + x)) endx1 = r + x;\r\n          // if (startx2 < (lineData[lineData.length - 1][0])) startx2 = lineData[lineData.length - 1][0];\r\n          // if (endx2 > (r + x)) endx2 = r + x;\r\n          // lineData.push([startx, y1], [startx1, startyf1], [startx2, startyf], [midx, yz], [endx2, endyf], [endx1, endyf1], [endx, y])\r\n        }\r\n        lineData.push([x + r, y])\r\n        let curve_generator = d3.line()\r\n          .x((d) => d[0])\r\n          .y((d) => {\r\n            let h = Math.sqrt(Math.pow(r, 2) - Math.pow((d[0] - (x - r)), 2));\r\n            if ((y - d[1]) > (h + r * Math.sqrt(3) / 2))\r\n              return y - (h + r * Math.sqrt(3) / 2) + 2;\r\n            return d[1];\r\n          })\r\n          .curve(d3.curveBundle)\r\n        // .curve(d3.curveCatmullRom  )\r\n        // .curve(d3.curveBasis)\r\n        _this.drawTimeLine(svg, curve_generator(lineData), \"white\", 2, '0', 'sonLine ', 'sonLine ');\r\n\r\n        for (let p = 0; p < linePoint.length; p++) {\r\n          _this.drawCircle(svg, linePoint[p]['x'], linePoint[p]['y'], 5, \"red\", linePoint[p], 0, \"linePoint\", \"linePoint_\" + linePoint[p]['id']);\r\n        }\r\n\r\n        // \"1\": \"rgb(145, 204, 117)\",\r\n        //   \"2\": \"rgb(84, 112, 198)\",\r\n        //   \"3\": \"rgb(238, 102, 102)\",\r\n        let typeColor = {\r\n          \"1\": \"#ff9c9c\",\r\n          \"2\": \"#f4f4d0\",\r\n          \"3\": \"#6f8be0\",\r\n        };\r\n        let duration = tools.time2seconds(data['time'][0]) - tools.time2seconds(data['time'][1]);\r\n        let typeData = data['attribute']['expressions'];\r\n        let sonList = data['son'];\r\n        let sons = [sonList];\r\n        while (sons.length > 0) {\r\n          let curSonList = sons[0];\r\n          sons.splice(0, 1);\r\n          if (curSonList.length > 0) {\r\n            for (let s in curSonList) {\r\n              let sonData = oData.find(function (d) { return d['id'] == curSonList[s] });\r\n              let sonTypeData = sonData['attribute']['expressions'];\r\n\r\n              for (let t in sonTypeData) {\r\n                let typeDurition = sonTypeData[t];\r\n                for (let d in typeDurition) {\r\n                  typeData[t].push(typeDurition[d])\r\n                }\r\n              }\r\n              sons.push(sonData['son']);\r\n            }\r\n          }\r\n        }\r\n        var typeStartR = 0//Math.PI/4;\r\n\r\n        var typeStepR = Math.PI / 1;\r\n\r\n        if (sonList.length > 0) {\r\n          let typeTotalDur = 0;\r\n          for (let t in typeData) {\r\n            let typeDurition = typeData[t];\r\n            for (let d in typeDurition) {\r\n              typeTotalDur += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n            }\r\n          }\r\n          let typeArcScale_linear = d3.scaleLinear([0, typeTotalDur], [0, Math.PI * 2]);\r\n          for (let i in typeData) {\r\n            let color = typeColor[i];\r\n            let typeDurition = typeData[i];\r\n            let totalTypeSeconds = 0;\r\n            for (let d in typeDurition) {\r\n              totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n            }\r\n            if (totalTypeSeconds > 0) {\r\n              let typeStepR = typeArcScale_linear(totalTypeSeconds)//Math.PI/2;\r\n\r\n              let endAnglet = typeStartR + 1 * typeStepR\r\n              var dataset = { startAngle: typeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n              typeStartR = endAnglet;\r\n              var arcPath = d3.arc()\r\n                .innerRadius(r + 10)\r\n                .outerRadius(r + 25);\r\n              var pathArc = arcPath(dataset);\r\n              _this.drawArc(svg, x, y - r / 2, pathArc, color, color, 'type f' + data['id'] + \" t\" + i);\r\n            }\r\n          if((copy!=0)&&(jg2==0)){\r\n            jg2=1;\r\n              ang2 = dataset.startAngle+Math.PI/2\r\n            }\r\n          }\r\n          let sonTotal = 0;\r\n          let sonNum = 0\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n            sonTotal += sonDur;\r\n            sonNum += 1;\r\n          }\r\n          let skipArc = Math.PI / (sonNum + 2);\r\n          let timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI - skipArc * (sonNum - 1)]);\r\n          let timeSonHeighLinear = d3.scaleLinear([0, sonTotal], [40, 40]);\r\n\r\n          let timeSonColor_linear = d3.scaleLinear().domain([0, sonTotal]).range([0, 1]);\r\n          let timeSonCompute_color = d3.interpolate(\"white\", circleColor);\r\n          var sonStartR = Math.PI / 2;\r\n\r\n          let relList = [];\r\n          let relRootList = [];\r\n          let psNum = 0.1;\r\n          let daId = data['id']\r\n          let relData = _this.relData;\r\n          let odData = _this.data;\r\n          let basicRel = relData['basicRel'];\r\n          for (let re = 0; re < basicRel.length; re++) {\r\n\r\n            let sorceId = basicRel[re][0];\r\n            let targetId = basicRel[re][1];\r\n            let cNode = '';\r\n            if (sorceId == daId) {\r\n              cNode = odData.find(function (d) { return parseInt(d['id']) == parseInt(targetId) });\r\n              relList.push(targetId);\r\n            }\r\n\r\n            if (targetId == daId) {\r\n              cNode = odData.find(function (d) { return parseInt(d['id']) == parseInt(sorceId) });\r\n              relList.push(sorceId);\r\n            }\r\n          };\r\n          if (relList.length == 0) {\r\n            sonStartR = 0;\r\n            timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI * 2 - skipArc * (sonNum)]);\r\n          }\r\n\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n\r\n            let sonStepR = timeSonLinear(sonDur)//Math.PI/2;\r\n\r\n            let endAnglet = sonStartR + sonStepR;\r\n            var dataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n            sonStartR = endAnglet;\r\n            let color = 'blue';\r\n            var arcPath = d3.arc()\r\n              .innerRadius(r + 28)\r\n              .outerRadius(r + timeSonHeighLinear(sonDur));\r\n            var arcMidPath = d3.arc()\r\n              .innerRadius(0)\r\n              .outerRadius(r + 32);\r\n            var pathArc = arcPath(dataset);\r\n\r\n            endAnglet = sonStartR + skipArc;\r\n            var midDataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n\r\n            let jiantouPath = d3.path();\r\n            jiantouPath.arc(x, y - r / 2, r + 32, sonStartR - Math.PI / 2, endAnglet - Math.PI / 2);\r\n\r\n            sonStartR += skipArc;\r\n            var pathMidArc = arcMidPath(midDataset);\r\n            let timeSonColor = compute_color(color_linear(sonData['attribute']['importance']));\r\n            _this.drawArc(svg, x, y - r / 2, pathArc, timeSonColor, timeSonColor, 'son f' + data['id'] + \" s\" + sonList[s], '0');\r\n            if (s != sonList.length - 1) {\r\n\r\n              // console.log\r\n              _this.drawTimeLine(svg, jiantouPath, \"rgb(200,200,200)\", 3, '9,5', 'midArc ', 'midArc ');\r\n              // _this.drawTimeLine(_this.arcG, path, \"white\", 2,'0', 'sonLine ', 'sonLine ');\r\n              // _this.drawArc(_this.arcG, x, y - r / 2, pathMidArc, \"rgb(200,200,200)\", \"white\", 'son f' + data['id'], \"9,5\", 3);\r\n            }\r\n            \r\n          if((copy!=0)){\r\n            jg3=1;\r\n              ang3 = (dataset.endAngle+dataset.startAngle)/2+Math.PI/2\r\n            }\r\n          }\r\n        };\r\n        \r\n        if((copy!=0)){\r\n              // jg2=1\r\n              path1.moveTo(10, 155)\r\n              path1.lineTo(120,155)\r\n              // let ang = da.startAngle+0.001+Math.PI/2\r\n              _this.drawTxt(svg, 60, 120, 80, [\"Concept\",\"Time\",\"Distribution\"], \"grey\", 15, `texts_1`);\r\n              path1.lineTo(lineData[0][0],lineData[0][1])\r\n              // path2.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n              if(jg2==1){\r\n              path2.moveTo(550, 35)\r\n              path2.lineTo(320,35)\r\n              _this.drawTxt(svg, 360, 20, 80, [\"Course Style\"], \"grey\", 15, `texts_1`);\r\n              path2.lineTo((x-(r +25)*Math.cos(ang2)),(y-r/2-(r +25)*Math.sin(ang2)))\r\n              _this.drawTimeLine(svg, path2, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');}\r\n            }\r\n              if(jg3==1){\r\n              path3.moveTo(550, 235)\r\n              path3.lineTo(320,235)\r\n              let ang3 = Math.PI*(1/2+1-0.05)\r\n              _this.drawTxt(svg, 360, 200, 80, [\"Subconcept\",\"Distribution\"], \"grey\", 15, `texts_1`);\r\n              path3.lineTo((x-(r +32)*Math.cos(ang3)),(y-r/2-(r +32)*Math.sin(ang3)))\r\n              _this.drawTimeLine(svg, path3, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n      }\r\n      let txts = data['name'].split(\" \")\r\n      let tx = x - r - 30;\r\n      let ty = y + r + 60;\r\n      let tw = r * 2;\r\n      tx = x;\r\n      if (data['son'].length == 0) {\r\n        tx = x//-r-10;\r\n        ty = y + r * 2;\r\n      }\r\n      // if (data['id'] == \"3\") {\r\n      //   tx = x - 10;\r\n      //   ty = y + r * 2;\r\n      // }\r\n      // if (data['id'] == \"4\") {\r\n      //   tx = x + 10;\r\n      //   ty = y + r * 2;\r\n      // }\r\n      // if(data['type']=='1'){\r\n      //   tx = x-r/2;\r\n      //   ty = y+r*2;\r\n      // }\r\n\r\n      _this.drawTxt(svg, tx, ty, tw, txts, \"grey\", 16, `text_${data['id']}`);\r\n    },\r\n    drawArc(svg, x, y, arcPath, stroke, fill, className, stroke_dasharray = \"0\", width = 3, opacity = 1) {\r\n      let arc = svg.append(\"path\")\r\n        .attr(\"d\", arcPath)\r\n        .attr(\"class\", className)\r\n        .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\")\r\n        .attr(\"stroke\", stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"fill\", fill)\r\n        .attr(\"opacity\", opacity);\r\n      return arc;\r\n    },\r\n    drawCircle(svg, x, y, r, fill, data, opacity, className, idName) {\r\n      const _this = this;\r\n      const oData = _this.data\r\n      svg.append(\"circle\")\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"cx\", x)\r\n        .attr(\"cy\", y)\r\n        .attr(\"r\", r)\r\n        .attr(\"fill\", fill)\r\n        .on(\"mouseover\", function (d) {\r\n          d3.select(this).attr(\"r\", r * 1.1)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          _this.overEntityId = idN\r\n          let showRel = _this.showEntityRelIdList\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel.push(parseInt(idN))\r\n            _this.showEntityRelIdOverState = 0;\r\n          }\r\n          else {\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 1).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1.1)\"\r\n              })\r\n\r\n            d3.selectAll(\".basicRel\")\r\n              .attr(\"class\", function (d) {\r\n                let classN = d3.select(this).attr(\"class\");\r\n                let classNList = classN.split(\" \");\r\n                let jg = 0;\r\n                for (let i = 0; i < classNList.length - 1; i++) {\r\n                  if ('source' + data['id'] == classNList[i]) { jg = 1; }\r\n                  if ('target' + data['id'] == classNList[i]) { jg = 1; }\r\n                }\r\n                if (jg == 1) {\r\n                  // classN += \" activeS\";\r\n                }\r\n                return classN;\r\n              })\r\n          }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          d3.select(this).attr(\"r\", r)\r\n\r\n          _this.overEntityId = \"\"//_this.curEntId;\r\n          let classN = d3.select(this).attr(\"class\");\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList\r\n          if (_this.showEntityRelIdOverState == 1) {\r\n            showRel.push(parseInt(idN))\r\n          }\r\n          else {\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 0).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1)\"\r\n              })\r\n            d3.select(\"#graphPanel\").selectAll(\"path\")\r\n              .attr(\"class\", function (d) {\r\n                let thisSelect = d3.select(this)\r\n                let classN = thisSelect.attr(\"class\");\r\n                let classNList = classN.split(\" \")\r\n                if (classNList[classNList.length - 1] == \"activeS\") {\r\n                  classN = \"\";\r\n                  for (let i = 0; i < classNList.length - 1; i++) {\r\n                    classN += \" \" + classNList[i];\r\n                  }\r\n                }\r\n                return classN\r\n              })\r\n          }\r\n        })\r\n        .on(\"click\", function (d) {\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList;\r\n          //  - _this.showEntityRelIdOverState;\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel = [(parseInt(idN))]\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          else if (showRel.includes(parseInt(idN))) {\r\n            // showRel.filter(item=>{return item==parseInt(idN)})\r\n            _this.showEntityRelIdOverState = 0;\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1);\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          d3.select(this).attr(\"r\", r);\r\n          d3.selectAll(\".f\" + data['id'])\r\n            .attr(\"transform\", function (d) {\r\n              let transformd = d3.select(this).attr(\"transform\");\r\n              return transformd.split(\" \")[0] + \" scale(1)\";\r\n            });\r\n          let thisId = this.id.split(\"_\")[1];\r\n          _this.curEntId = thisId;\r\n          let thisData = _this.drawEntityLocation.find(function (a) { return a['id'] == thisId })\r\n          let thisTime = thisData['time'];\r\n          _this.click_Ent(thisTime);\r\n          let psvg = d3.select(\"#entG\");\r\n          let dw = psvg.attr(\"width\");\r\n          let dh = psvg.attr(\"height\");\r\n          psvg.remove();\r\n          let svg = d3.select('#editEnt').append(\"g\").attr(\"id\", \"entG\").attr(\"width\", dw).attr(\"height\", dh);\r\n          _this.drawEntity(svg, dw/2, 100, r, thisData,1);\r\n          // if (thisData['type'] == 0 ) {\r\n            _this.drawEntityTimeAxis(svg,thisData,[dw/2,100,r]);\r\n        // }\r\n          // console.log(thisTime,thisId,thisData)\r\n        })\r\n        .on(\"contextmenu\", function (d, i) {\r\n          d.preventDefault();\r\n\r\n          if (_this.btnEdi) {\r\n            _this.editDivShow = true;\r\n            _this.$refs.editDiv.style.top = `${d.clientY}px`;\r\n            _this.$refs.editDiv.style.left = `${d.clientX}px`;\r\n          }\r\n          else {\r\n            let thisId = this.id.split(\"_\")[1];\r\n            let thisShowEntityData = _this.showEntityList.find(function (d) { return d['id'] == thisId });\r\n            let thisSons = thisShowEntityData['son'];\r\n            if (thisSons.length != 0) {\r\n              let sons = tools.deepClone(thisSons);\r\n              let showJage = false;\r\n              let i = 0\r\n              while ((sons.length > 0)) {\r\n                let s = sons[0];\r\n                sons.splice(0, 1);\r\n                let curson = _this.showEntityList.find(function (d) { return d['id'] == s + '' })\r\n                if (i == 0) {\r\n                  i++;\r\n                  showJage = !curson['show']\r\n                }\r\n                // ['show'] = !_this.showEntityList.find(function (d) { return d['id'] == thisSons[s] })['show']\r\n                curson['show'] = showJage;\r\n                let curgson = curson['son'];\r\n                if (!showJage) {\r\n                  for (let gs = 0; gs < curgson.length; gs++) {\r\n                    sons.push(curgson[gs]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          _this.updataGraph()\r\n        });\r\n      // .on(\"\")\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, ry, fill, opacity, stroke, id = 'rect', strokeW = 1.5, classN = 'rect') {\r\n      d3.select(`#${id}`).remove()\r\n      let rect = svg.append(\"rect\")\r\n        .attr(\"id\", id)\r\n        .attr(\"class\", classN)\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"ry\", ry)\r\n        .attr(\"height\", h)\r\n        .attr(\"width\", w) //刚才设置的块的宽度\r\n        .attr(\"fill\", fill)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", `${strokeW}px`);\r\n      return rect;\r\n    },\r\n    drawTxt(svg, x, y, width, txts, fill, fontsize = 12, idN, classN = \"text\") {\r\n      let tx = x;\r\n      let ty = y;\r\n      let preWidth = 0;\r\n      let preIdN = 0;\r\n      let pretext = ''\r\n      for (let t = 0; t < txts.length; t++) {\r\n        pretext += \" \" + txts[t];\r\n        let txt = svg.append(\"text\")\r\n          .attr(\"y\", ty)\r\n          .attr(\"x\", tx)\r\n          .attr(\"id\", `${idN}_${t}`)\r\n          .attr(\"class\", `${classN}`)\r\n          .attr(\"fill\", fill)\r\n          .attr(\"font-size\", fontsize)\r\n          .style(\"text-anchor\", \"middle\")\r\n          .text(pretext)\r\n        let textWidth = document.getElementById(`${idN}_${t}`).getBBox().width;\r\n        if ((textWidth > width) || (t == txts.length - 1)) {\r\n          pretext = '';\r\n          tx = x;\r\n          ty += 25;\r\n        }\r\n        else {\r\n          txt.remove()\r\n        }\r\n        preWidth += textWidth;\r\n      }\r\n    },\r\n    drawTimeLine(svg, path, stroke, width, stroke_dasharray = \"0\", idName, className) {\r\n      svg.append('path')\r\n        .attr('d', path.toString())\r\n        .attr('stroke', stroke)\r\n        .attr('class', className)\r\n        .attr('id', idName)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr('stroke-width', width)\r\n        .attr('fill', 'none')\r\n        .on('mouseover', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let idN = thisSelect.attr(\"id\");\r\n          if (classN.split(\" \")[0] == \"basicRel\") {\r\n            // d3.select(this).attr(\"class\", classN + \" activeS\");\r\n          }\r\n        })\r\n        .on('mouseleave', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let classNList = classN.split(\" \")\r\n          if (classNList[classNList.length - 1] == \"activeS\") {\r\n            classN = \"\";\r\n            for (let i = 0; i < classNList.length - 1; i++) {\r\n              classN += classNList[i] + \" \";\r\n            }\r\n            d3.select(this).attr(\"class\", classN);\r\n          }\r\n        })\r\n    },\r\n    transformGraphSvg(flag) {\r\n      const _this = this;\r\n      let groups = _this.groupsSvg;\r\n\r\n      let scalePre = _this.graphSvgScale;\r\n\r\n      let margin = _this.margin;\r\n      if (flag == 'left') {\r\n        _this.graphGTransformX += 10;\r\n      }\r\n      if (flag == 'right') {\r\n        _this.graphGTransformX -= 10;\r\n      }\r\n      // groups.attr('transform', 'translate(' + (_this.graphGTransformX) + ',' + (margin.top) + ') scale(' + (scalePre) + ')')\r\n    },\r\n    updataAssistGraphPanel() {\r\n      const _this = this;\r\n      var content = this.groupsSvg.html();\r\n      let height = document.getElementById(\"assistGraphPanel\").clientHeight;\r\n      let width = document.getElementById(\"assistGraphPanel\").clientWidth;\r\n      d3.select('#assistGraphPanel').select('svg').remove();\r\n      let transX = _this.assistGTransformX;\r\n      let transY = _this.assistGTransformY;\r\n      var div = d3.select('#assistGraphPanel')\r\n        .append('svg')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${transX+width/2},${transY+height/2})`)\r\n        .html(content);\r\n    },\r\n    moveGraphLeft(e) {\r\n      const _this = this;\r\n      _this.moveFlag == true;\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      this.moveTimer = setInterval(() => { _this.transformGraphSvg(\"left\") }, 10)//_this.transformGraphSvg('left'), 100);\r\n    },\r\n    moveGraphRight(e) {\r\n      const _this = this;\r\n      // console.log(\"⚡🐲🫧❄️👁️\",e)\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      _this.moveFlag == true;\r\n      this.moveTimer = setInterval(() => { _this.transformGraphSvg(\"right\") }, 10)//_this.transformGraphSvg('left'), 100);\r\n    },\r\n    leaveGraphMove() {\r\n      // this.moveFlag == false;\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      // this.graphGTransformX = 0;\r\n    },\r\n    updataGraph() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.graphDiv.offsetWidth - margin.left - margin.right;\r\n      let height = document.getElementById(\"graphPanel\").clientHeight - margin.top - margin.bottom;\r\n      let heightTimeAxis = document.getElementById(\"graphTimeAxisPanel\").clientHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#graphPanel\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#graphPanel\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      d3.select(\"#graphTimeAxisPanel\").select(\"svg\").remove()\r\n      var TimeAxisSvg = d3.select(\"#graphTimeAxisPanel\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      _this.TimeAxisSvg = TimeAxisSvg;\r\n      let data = _this.data;\r\n\r\n      let maxDImportance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let minDImportance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let maxDRelevance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let minDRelevance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let maxDDuration = Math.max.apply(Math, data.map(function (d) { return tools.time2seconds(d['time'][1]) - tools.time2seconds(d['time'][0]); }))\r\n      let maxTotalDuration = Math.max.apply(Math, data.map(function (d) { return d['totalDuration']; }))\r\n      _this.drawEntityLocation = [];\r\n      _this.minDImportance = minDImportance;\r\n      _this.maxDImportance = maxDImportance;\r\n      _this.minDRelevance = minDRelevance;\r\n      _this.maxDRelevance = maxDRelevance;\r\n      _this.maxDDuration = maxDDuration;\r\n      _this.maxTotalDuration = maxTotalDuration;\r\n\r\n      let currentMaxColor = _this.importanceMaxColor;\r\n      let currentMinColor = _this.importanceMinColor;\r\n      _this.importanceColor_linear = d3.scaleLinear().domain([minDImportance, maxDImportance]).range([0, 1]);\r\n      _this.$bus.$emit(\"importanceLinear\", [minDImportance, maxDImportance]);\r\n      _this.importanceCompute_color = d3.interpolate(currentMinColor, currentMaxColor);\r\n      _this.relevanceScale_linear = d3.scaleLinear([minDRelevance, maxDRelevance], [20, 50])\r\n      _this.totalDurationScale_linear = d3.scaleLinear().domain([0, maxTotalDuration]).range([20, 60]);\r\n\r\n      _this.drawMain(svg);\r\n      // });\r\n    },\r\n    zoomInLayoutClk() {\r\n      const _this = this;\r\n      _this.layoutShow += 1;\r\n      if (_this.layoutShow > 3) {\r\n        _this.layoutShow = 3;\r\n      }\r\n      // _this.updataGraph();\r\n    },\r\n    zoomOutLayoutClk() {\r\n      const _this = this;\r\n      _this.layoutShow -= 1;\r\n      if (_this.layoutShow < 0) {\r\n        _this.layoutShow = 0;\r\n      }\r\n      // _this.updataGraph();\r\n\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n      _this.updataGraph();\r\n      _this.updataAssistGraphPanel();\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    let width = _this.$refs.graphDiv.offsetWidth;\r\n    let height = _this.height;\r\n    let showEntityList = tools.deepClone(_this.data);\r\n    for (let e in showEntityList) {\r\n      showEntityList[e]['show'] = true;\r\n    }\r\n    _this.showEntityList = showEntityList;\r\n    // let width = _this.width;\r\n    this.$bus.$on('graphData', (val) => {\r\n      _this.data = val;\r\n      let showEntityList = tools.deepClone(_this.data);\r\n      for (let e in showEntityList) {\r\n        showEntityList[e]['show'] = true;\r\n      }\r\n      _this.showEntityList = showEntityList;\r\n      _this.updataGraph();\r\n    });\r\n    this.$bus.$on('topicRectup', (val) => {\r\n      _this.editConfirm();\r\n    });\r\n    this.$bus.$on('switchL', (val) => {\r\n      _this.switchL = val;\r\n    });\r\n    // disabled in the online demo\r\n    // this.$bus.$on('entData', (val) => {\r\n    //   _this.data = val;\r\n    // });\r\n    // this.$bus.$on('relData', (val) => {\r\n    //   _this.relData = val;\r\n    // });\r\n    // this.$refs.moveGraphLeft.addEventListener(\"mouseover\", _this.moveGraphLeft); // 监听点击事件\r\n    // this.$refs.moveGraphRight.addEventListener(\"mousemove\", _this.moveGraphRight); // 监听点击事件\r\n    // this.$refs.moveGraphLeft.addEventListener(\"mouseleave\", _this.leaveGraphMove); // 监听点击事件\r\n    // this.$refs.moveGraphRight.addEventListener(\"mouseleave\", _this.leaveGraphMove); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>@import './index.css';</style>\r\n"],"sourceRoot":"src/components/Graph"}]}