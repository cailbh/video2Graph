{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js!D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Video\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Video\\index.vue","mtime":1690985998098},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\babel.config.js","mtime":1647570572000},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"video\" ref=\"videoDiv\">\r\n\r\n    <!-- <div class=\"panelHead\"></div> -->\r\n    <div class=\"perVideo\">\r\n      <VideoPlay v-show=\"true\" :timeDot=\"timeDot\" @videoTime=\"getVideoTime\" :videoUrl=\"videoUrl\" :videoCover=\"videoCover\"\r\n        :width=\"videoWidth\" :height=\"videoHeight\" :autoplay=\"true\" :controls=\"true\" :loop=\"false\" :muted=\"false\"\r\n        preload=\"auto\" :showPlay=\"true\" :playWidth=\"96\" zoom=\"cotain\" />\r\n      <!-- <video class=\"perVideo\" ref=\"video\"   :src=\"url\"></video> -->\r\n    </div>\r\n    <div id=\"rootTopicLine\" ref=\"rootTopicLine\">\r\n      <div id=\"progressBar\" ref=\"progressBar\" @click=\"processBarCli\"></div>\r\n    </div>\r\n    <div id=\"videoScriptUp\" ref=\"videoScriptUp\">\r\n\r\n      <div id=\"iconVideo1\" >\r\n        <img class=\"iconUpload\" :src=\"videoUrl1\">\r\n      </div>\r\n      <div id=\"iconVideo2\" >\r\n        <img class=\"iconUpload\" :src=\"videoUrl2\">\r\n      </div>\r\n\r\n      <div id=\"iconVideo3\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl3\">\r\n      </div>\r\n\r\n      <div id=\"iconVideo4\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl4\">\r\n      </div>     \r\n       \r\n      <div id=\"timeDurText\">\r\n        {{ timeNow }}/{{ overTime }}\r\n      </div>\r\n      <div id=\"iconVideo5\" ref=\"iconVideo5\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl5\">\r\n      </div>\r\n    </div>\r\n    <div id=\"videoScript\" ref=\"videoScript\">\r\n      <!-- <div id=\"progressBar\" ref=\"progressBar\" @click=\"processBarCli\"></div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\n\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\nimport VideoPlay from '@/components/VideoPlay';\r\nimport tools from \"@/utils/tools.js\";\r\nimport scriptsData from '@/assets/json/case1scriptsData.json'\r\n\r\n//场景元素div\r\nexport default {\r\n  props: [\"timeDur\"],\r\n  components: {\r\n    VideoPlay\r\n  },\r\n  data() {\r\n    return {\r\n      scriptsData: scriptsData,\r\n      scriptsText: [],\r\n      recognizeText:[],\r\n      ketText: [],\r\n      videoWidth: 100,\r\n      videoHeight: 100,\r\n      rootTopicLineWidth: 100,\r\n      rootTopicLineHeight: 100,\r\n      data: '',\r\n      relData: '',\r\n      timeDot: 0,\r\n      videoDuration: 672,\r\n      // videoDuration: 550,\r\n      // videoDuration: 668,\r\n      timeNow: '1',\r\n      overTime: '1',\r\n      publicPath: process.env.BASE_URL,\r\n      vertexShader: '',\r\n      // url:\"../videos/[2.1.1]--机器数及特点视频.mp4\",\r\n      // url: \"../videos/index.mp4\",\r\n      videoUrl1:require('@/assets/img/暂停.png'),\r\n      videoUrl2:require('@/assets/img/快进.png'),\r\n      videoUrl3:require('@/assets/img/音量.png'),\r\n      videoUrl4:require('@/assets/img/全屏.png'),\r\n      videoUrl5:require('@/assets/img/addTopic.png'),\r\n      // videoUrl: require('@/assets/videos/case3.mp4'),\r\n      videoUrl: require('@/assets/videos/case3.mp4'),\r\n      // 视频封面支持https或require本地地址\r\n      videoCover: require('@/assets/img/tt.jpg'),\r\n\r\n      windowWidth: document.documentElement.clientWidth, //实时屏幕宽度\r\n      windowHeight: document.documentElement.clientHeight, //实时屏幕高度\r\n      colorMap: {},\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n      // mcolor: [\r\n      //   \"rgb(255,60,60)\",\r\n      //   \"rgb(155,20,100)\",\r\n      //   \"rgb(255,83,255)\",\r\n      //   \"rgb(200,100,50)\",\r\n      //   \"rgb(235,135,162)\",\r\n      //   \"rgb(200,200,102)\",\r\n      //   \"rgb(255,178,101)\",\r\n      //   \"rgb(63,151,134)\",\r\n      //   \"rgb(83,155,255)\",\r\n      //   \"rgb(50,200,120)\",\r\n      //   \"rgb(2,50,200)\",\r\n      //   \"rgb(0,122,244)\",\r\n      //   \"rgb(150,122,244)\",\r\n      //   \"rgb(168,168,255)\",\r\n      //   \"rgb(200,200,200)\",\r\n      // ],\r\n      mcolor: [\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n      ],\r\n      // mcolor: [\r\n      //   \"rgb(91, 107, 255)\",\r\n      //   \"rgb(6, 214, 160)\",\r\n      //   \"rgb(255, 120, 90)\",\r\n      //   \"rgb(125, 98, 211)\",\r\n      //   \"rgb(255, 113, 212)\",\r\n      //   \"rgb(112, 214, 255)\",\r\n      //   \"rgb(255, 159, 28)\",\r\n      //   \"rgb(255, 77, 109)\",\r\n      // ],\r\n      mLightcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      DivisionDataList: [],\r\n      rootDivisionDataList: [],\r\n      entDivisionDataList: [],\r\n      switchL:[],\r\n      btnEdi:false,\r\n      timeDot:\"\"\r\n    };\r\n  },\r\n  watch: {\r\n    timeDur(val) {\r\n      this.timeDot = tools.time2seconds(val[0]);\r\n    },\r\n    scriptsText(val) {\r\n      this.drawScript();\r\n    },\r\n    recognizeText(val){\r\n      console.log(val)\r\n      if(val[0] == 1){\r\n        this.scriptsText = [val[1]]\r\n      }\r\n      else{\r\n        this.addScript(this.timeDot) \r\n      }\r\n    },\r\n    switchL: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.btnEdi = val[3];\r\n        this.drawrootTopicLine()\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getVideoTime(val) {\r\n      const _this = this;\r\n      _this.timeNow = tools.seconds2time(val.toFixed(0));\r\n      _this.overTime = tools.seconds2time(_this.videoDuration);\r\n      let margin = _this.margin;\r\n      let width = this.$refs.progressBar.offsetWidth;\r\n      let widths = 'calc(100% - 10px)'\r\n      if(_this.btnEdi){\r\n        width-=30\r\n        widths = 'calc(100% - 40px)'\r\n      }\r\n      let timeLinear = d3.scaleLinear([0, _this.videoDuration], [0, width]);\r\n      let mid = timeLinear(val) / width * 100;\r\n      // _this.timeDot = val;\r\n      _this.addScript(val);\r\n      d3.select(\"#progressBar\")\r\n        .attr(\"style\", `background: linear-gradient(90deg, rgb(200, 200, 200) ${mid}%,rgb(244, 244, 244) ${mid}%) !important;  width: ${widths}`)\r\n      this.$emit(\"videoTime\", val);\r\n    },\r\n    processBarCli(e) {\r\n      const _this = this;\r\n      let x = e.layerX;\r\n      let width = this.$refs.progressBar.offsetWidth;\r\n      if(_this.btnEdi){\r\n        width-=30\r\n      }\r\n      let timeLinear = d3.scaleLinear([0, width], [0, _this.videoDuration]);\r\n      this.timeDot = timeLinear(x);\r\n    },\r\n    addScript(timeDot) {\r\n      const _this = this;\r\n      let scriptsData = _this.scriptsData;\r\n      for (let t in scriptsData) {\r\n        let timeDur = scriptsData[t]['time'];\r\n        let sTime = tools.time2seconds(timeDur[0]);\r\n        let eTime = tools.time2seconds(timeDur[1]);\r\n        if ((timeDot > sTime) && (timeDot < eTime)) {\r\n          _this.scriptsText = scriptsData[t]['text']\r\n        }\r\n\r\n      }\r\n    },\r\n    drawScriptUp() {\r\n      let width = this.$refs.videoScriptUp.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.videoScriptUp.offsetHeight - margin.top - margin.bottom;\r\n      d3.select(\"#videoScriptUp\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#videoScriptUp\").append(\"svg\")\r\n        .attr(\"id\", \"videoScriptUpSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n    },\r\n    drawScript() {\r\n      const _this = this;\r\n      let txts = _this.scriptsText;\r\n      let margin = _this.margin;\r\n      let ketText = _this.ketText;\r\n      let width = this.$refs.videoScript.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.videoScript.offsetHeight - margin.top - margin.bottom;\r\n      d3.select(\"#videoScript\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#videoScript\").append(\"svg\")\r\n        .attr(\"id\", \"videoScriptSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let tx = 30;\r\n      let ty = 50;\r\n      let lay = 0;\r\n      for (let i = 0; i < txts.length; i++) {\r\n        let name = txts[i];\r\n        let w = name.length * 10;\r\n        let h = 20;\r\n        let rx = 5;\r\n        let ry = 5;\r\n        // let color = colorMap[ids[i]];\r\n        // _this.drawRect(g, tx, ty, w, h, rx, ry, color, 0.2, color)\r\n        let textColor = \"black\";\r\n        let stopList = [\"of\", \"the\", \"and\", \"be\", \"two\", \"x\", \"y\", \"z\"];\r\n        if ((ketText.indexOf(name) != -1) && (stopList.indexOf(name) == -1)) {\r\n          textColor = \"red\";\r\n        }\r\n        let svgArea = _this.drawTxt(svg, tx, ty, name, textColor, 24, `txts${i}`);\r\n        tx += svgArea.width + 5;\r\n        if (tx > (width - 30)) {\r\n          let tranx = (width - tx) / 2;\r\n          for (let j = i; j >= lay; j--) {\r\n            d3.select(`#txts${j}`).attr(\"transform\", `translate(${tranx},0)`)\r\n          }\r\n          lay = i;\r\n          tx = 30;\r\n          ty += 30;\r\n        }\r\n        if (i == txts.length - 1) {\r\n          let tranx = (width - tx) / 2;\r\n          for (let j = i; j >= lay; j--) {\r\n            d3.select(`#txts${j}`).attr(\"transform\", `translate(${tranx},0)`)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    drawrootTopicLine() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      const mcolor = _this.mcolor;\r\n\r\n      let width = this.$refs.rootTopicLine.offsetWidth //- margin.left - margin.right;\r\n      let height = this.$refs.rootTopicLine.offsetHeight - margin.top - margin.bottom;\r\n      _this.rootTopicLineWidth = width;\r\n      _this.rootTopicLineHeight = height;\r\n      if(_this.btnEdi){\r\n        width-=30\r\n        this.$refs.progressBar.style.width='calc(100% - 40px)'\r\n        this.$refs.iconVideo5.style.display = 'block'\r\n      }\r\n      else{\r\n      this.$refs.iconVideo5.style.display = 'none'\r\n        \r\n        this.$refs.progressBar.style.width='calc(100% - 10px)'\r\n      }\r\n      d3.select(\"#rootTopicLine\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#rootTopicLine\").append(\"svg\")\r\n        .attr(\"id\", \"rootTopicLineSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n      let groups = svg.append(\"g\").attr(\"id\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let tootTopicEntG = groups.append(\"g\").attr(\"id\", \"tootTopicEntG\").attr(\"width\", width).attr(\"height\", height);\r\n      let rootOriLineG = groups.append(\"g\").attr(\"id\", \"rootOriLineG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      rootOriLineG.append(\"line\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", height / 2)\r\n        .attr(\"x2\", width)\r\n        .attr(\"y2\", height / 2)\r\n        .attr(\"stroke\", \"rgb(200,200,200)\")\r\n        .attr(\"stroke-width\", \"5px\");\r\n\r\n      let cxLinear = d3.scaleLinear([0, _this.videoDuration], [0, width])\r\n\r\n      let data = tools.deepClone(_this.data);\r\n      let DivisionDataList = [];\r\n      let colorIndex = 0;\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i]['layout'] == '0') {\r\n          if (DivisionDataList.length != 0) {\r\n            DivisionDataList[DivisionDataList.length - 1]['nextId'] = data[i]['id'];\r\n            data[i]['preId'] = DivisionDataList[DivisionDataList.length - 1]['id'];\r\n          }\r\n          else { data[i]['preId'] = \"-1\"; }\r\n          DivisionDataList.push(data[i]);\r\n          let time = tools.time2seconds(data[i]['time'][0]);\r\n          let endTime = tools.time2seconds(data[i]['time'][0]) + data[i]['totalDuration'];\r\n          let cx = cxLinear(time);\r\n          let endx = cxLinear(endTime);\r\n          let color = mcolor[colorIndex];\r\n          // if (data[i]['name'] != 'Test') {\r\n          if (1) {\r\n            color = mcolor[colorIndex];\r\n            colorIndex++;\r\n          }\r\n          else {\r\n            color = \"rgb(250, 199, 88)\";\r\n          }\r\n          // _this.colorMap[data[i]['id']] = colorIndex % color.length;\r\n          _this.drawRect(rootOriLineG, cx - 1, height / 6, 4, height/3*2, 2, \"division_\" + data[i][\"id\"], \"rootdivisionLine\", \"rgb(250,250,250)\", 0, '', 1)\r\n          _this.drawRect(tootTopicEntG, cx, height/6, endx - cx, height/3*2, 1, \"rootEnt_\" + data[i]['id'], \"rootEnt\", color, 2, \"rgb(250,250,250)\", 0.8)\r\n        }\r\n      }\r\n      DivisionDataList[DivisionDataList.length - 1]['nextId'] = \"-1\";\r\n      _this.rootDivisionDataList = DivisionDataList;\r\n\r\n      // rootOriLineG.append(\"ellipse\")\r\n      // .attr(\"cx\",50)\r\n      // .attr(\"cy\",height/2)\r\n      // .attr(\"rx\",50)\r\n      // .attr(\"ry\",height/2)\r\n      // .attr(\"fill\",color[3])\r\n      // .attr(\"stroke\", color[3])\r\n\r\n      // .attr(\"stroke-width\", \"5px\");\r\n      // console.log(data)\r\n      // this.$bus.$emit(\"getData\",data)\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, idName, className, fill, strokeWidth, stroke, opacity) {\r\n      const _this = this;\r\n      svg.append(\"rect\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"stroke\", stroke)//\"rgb(150,150,150)\")\r\n        .attr(\"stroke-width\", strokeWidth)\r\n        .on(\"mousedown\", function (d) {\r\n          _this.selectRectId = idName.split(\"_\")[1] //d3.select(this).attr(\"id\");\r\n          if (d3.select(this).attr(\"class\") == \"rootdivisionLine\") {\r\n            _this.selectRectClass = \"rootEnt\";\r\n            _this.moveLineWidth = _this.rootTopicLineWidth;\r\n            _this.DivisionDataList = _this.rootDivisionDataList;\r\n            document.getElementById('rootTopicLineSvg').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n          else if (d3.select(this).attr(\"class\") == \"entdivisionLine\") {\r\n            _this.selectRectClass = \"editEnt\";\r\n            _this.moveLineWidth = _this.entLineWidth;\r\n            _this.DivisionDataList = _this.entDivisionDataList;\r\n            document.getElementById('editEnt').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          document.getElementById('rootTopicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          document.getElementById('editEnt').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          _this.$bus.$emit(\"topicRectup\", 1);\r\n\r\n          // _this.$bus.$emit(\"treeData\", _this.treeData);\r\n        })\r\n    },\r\n    moveRect(e) {\r\n      const _this = this;\r\n      let selectRect = _this.DivisionDataList.find(function (d) { return d['id'] == _this.selectRectId; })//右边的rect\r\n      let preId = selectRect['preId'];//左边的rect\r\n      let nextId = selectRect['nextId'];//右边的右边rect\r\n      let rectClass = _this.selectRectClass;\r\n      let prex = 0;\r\n      if (preId != '-1') {\r\n        prex = d3.select(\"#\" + rectClass + \"_\" + preId).attr(\"x\")\r\n        d3.select(\"#\" + rectClass + \"_\" + preId)\r\n          .attr(\"width\", function (d) {\r\n            return e.offsetX - prex;\r\n          })\r\n      }\r\n      let nextX = 100;\r\n      if (nextId == '-1') {\r\n        nextX = _this.moveLineWidth;\r\n      }\r\n      else {\r\n        nextX = d3.select(\"#\" + rectClass + \"_\" + nextId).attr(\"x\");\r\n      }\r\n      d3.select(\"#\" + rectClass + \"_\" + _this.selectRectId)\r\n        .attr(\"width\", function (d) {\r\n          return nextX - e.offsetX;\r\n        })\r\n        .attr(\"x\", e.offsetX)\r\n      d3.select(\"#division_\" + _this.selectRectId)\r\n        .attr(\"x\", e.offsetX - 5)\r\n\r\n      if ((e.offsetX > (_this.rootTopicLineWidth)) || (e.offsetX < (0)) || (e.offsetY > (_this.rootTopicLineHeight)) || (e.offsetY < (0))) {\r\n        document.getElementById('rootTopicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n      }\r\n    },\r\n    drawTxt(svg, tx, ty, txts, fill, size, idName) {\r\n      svg.append(\"text\")\r\n        .attr(\"y\", ty)\r\n        .attr(\"x\", tx)\r\n        .attr(\"id\", idName)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"font-size\", size)\r\n        .text(txts)\r\n\r\n      let textArea = document.getElementById(idName).getBBox();\r\n      return textArea;\r\n      // .style(\"text-anchor\", anchor)//\"middle\")\r\n      // .attr(\"transform\", `rotate(${roat} ${tx} ${ty})`);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    this.$bus.$on('graphData', (val) => {\r\n      _this.data = val;\r\n      let ketText = [];\r\n      for (let i = 0; i < _this.data.length; i++) {\r\n        let names = _this.data[i]['name'].split(\" \");\r\n        for (let n in names) {\r\n          ketText.push(names[n]);\r\n        }\r\n      }\r\n      _this.ketText = ketText;\r\n      _this.drawrootTopicLine();\r\n    });\r\n    this.$bus.$on('recognizeText', (val) => {\r\n      _this.recognizeText = val;\r\n    });\r\n    this.$bus.$on('relData', (val) => {\r\n      _this.relData = val;\r\n    });\r\n    this.$nextTick(() => {\r\n      _this.videoWidth = this.$refs.videoDiv.offsetWidth\r\n      _this.videoHeight = this.$refs.videoDiv.offsetHeight\r\n    })\r\n    // let sceneLiving = create.Scene();\r\n    // let sceneTeaching = create.Scene();\r\n\r\n  },\r\n  mounted() {\r\n    var _this = this;\r\n    \r\n    this.$bus.$on('switchL', (val) => {\r\n      _this.switchL = val;\r\n    });\r\n  }\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"],"sourceRoot":"src/components/Video"}]}