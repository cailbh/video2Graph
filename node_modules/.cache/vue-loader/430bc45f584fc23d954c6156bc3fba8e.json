{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Video\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Video\\index.vue","mtime":1705377404892},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/components/Video","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"video\" ref=\"videoDiv\">\r\n\r\n    <!-- <div class=\"panelHead\"></div> -->\r\n    <div class=\"perVideo\">\r\n      <VideoPlay v-show=\"true\" :timeDot=\"timeDot\" @videoTime=\"getVideoTime\" :videoUrl=\"videoUrl\" :videoCover=\"videoCover\"\r\n        :width=\"videoWidth\" :height=\"videoHeight\" :autoplay=\"true\" :controls=\"true\" :loop=\"false\" :muted=\"false\"\r\n        preload=\"auto\" :showPlay=\"true\" :playWidth=\"96\" zoom=\"cotain\" />\r\n      <!-- <video class=\"perVideo\" ref=\"video\"   :src=\"url\"></video> -->\r\n    </div>\r\n    <div id=\"rootTopicLine\" ref=\"rootTopicLine\">\r\n      <div id=\"progressBar\" ref=\"progressBar\" @click=\"processBarCli\"></div>\r\n    </div>\r\n    <div id=\"videoScriptUp\" ref=\"videoScriptUp\">\r\n\r\n      <div id=\"iconVideo1\" >\r\n        <img class=\"iconUpload\" :src=\"videoUrl1\">\r\n      </div>\r\n      <div id=\"iconVideo2\" >\r\n        <img class=\"iconUpload\" :src=\"videoUrl2\">\r\n      </div>\r\n\r\n      <div id=\"iconVideo3\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl3\">\r\n      </div>\r\n\r\n      <div id=\"iconVideo4\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl4\">\r\n      </div>     \r\n       \r\n      <div id=\"timeDurText\">\r\n        {{ timeNow }}/{{ overTime }}\r\n      </div>\r\n      <div id=\"iconVideo5\" ref=\"iconVideo5\">\r\n        <img class=\"iconUpload\" :src=\"videoUrl5\">\r\n      </div>\r\n    </div>\r\n    <div id=\"videoScript\" ref=\"videoScript\">\r\n      <!-- <div id=\"progressBar\" ref=\"progressBar\" @click=\"processBarCli\"></div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\n\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport domtoimage from 'dom-to-image';\r\nimport VideoPlay from '@/components/VideoPlay';\r\nimport tools from \"@/utils/tools.js\";\r\n// import scriptsData from '@/assets/json/case1scriptsData.json'\r\nimport scriptsData from '@/assets/json/c5.json'\r\n\r\n//场景元素div\r\nexport default {\r\n  props: [\"timeDur\"],\r\n  components: {\r\n    VideoPlay\r\n  },\r\n  data() {\r\n    return {\r\n      scriptsData: scriptsData,\r\n      scriptsText: [],\r\n      recognizeText:[],\r\n      ketText: [],\r\n      videoWidth: 100,\r\n      videoHeight: 100,\r\n      rootTopicLineWidth: 100,\r\n      rootTopicLineHeight: 100,\r\n      data: '',\r\n      relData: '',\r\n      timeDot: 0,\r\n      // videoDuration: 378,//c6\r\n      // videoDuration: 438,//c5\r\n      videoDuration: 672,\r\n      // videoDuration: 550,\r\n      // videoDuration: 668,\r\n      timeNow: '1',\r\n      overTime: '1',\r\n      publicPath: process.env.BASE_URL,\r\n      vertexShader: '',\r\n      // url:\"../videos/[2.1.1]--机器数及特点视频.mp4\",\r\n      // url: \"../videos/index.mp4\",\r\n      videoUrl1:require('@/assets/img/暂停.png'),\r\n      videoUrl2:require('@/assets/img/快进.png'),\r\n      videoUrl3:require('@/assets/img/音量.png'),\r\n      videoUrl4:require('@/assets/img/全屏.png'),\r\n      videoUrl5:require('@/assets/img/addTopic.png'),\r\n      videoUrl: require('@/assets/videos/case3.mp4'),\r\n      // videoUrl: require('@/assets/videos/case2.mp4'),\r\n      // 视频封面支持https或require本地地址\r\n      videoCover: require('@/assets/img/tt.jpg'),\r\n\r\n      windowWidth: document.documentElement.clientWidth, //实时屏幕宽度\r\n      windowHeight: document.documentElement.clientHeight, //实时屏幕高度\r\n      colorMap: {},\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n      // mcolor: [\r\n      //   \"rgb(255,60,60)\",\r\n      //   \"rgb(155,20,100)\",\r\n      //   \"rgb(255,83,255)\",\r\n      //   \"rgb(200,100,50)\",\r\n      //   \"rgb(235,135,162)\",\r\n      //   \"rgb(200,200,102)\",\r\n      //   \"rgb(255,178,101)\",\r\n      //   \"rgb(63,151,134)\",\r\n      //   \"rgb(83,155,255)\",\r\n      //   \"rgb(50,200,120)\",\r\n      //   \"rgb(2,50,200)\",\r\n      //   \"rgb(0,122,244)\",\r\n      //   \"rgb(150,122,244)\",\r\n      //   \"rgb(168,168,255)\",\r\n      //   \"rgb(200,200,200)\",\r\n      // ],\r\n      mcolor: [\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n      ],\r\n      // mcolor: [\r\n      //   \"rgb(91, 107, 255)\",\r\n      //   \"rgb(6, 214, 160)\",\r\n      //   \"rgb(255, 120, 90)\",\r\n      //   \"rgb(125, 98, 211)\",\r\n      //   \"rgb(255, 113, 212)\",\r\n      //   \"rgb(112, 214, 255)\",\r\n      //   \"rgb(255, 159, 28)\",\r\n      //   \"rgb(255, 77, 109)\",\r\n      // ],\r\n      mLightcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      DivisionDataList: [],\r\n      rootDivisionDataList: [],\r\n      entDivisionDataList: [],\r\n      switchL:[],\r\n      btnEdi:false,\r\n      timeDot:\"\"\r\n    };\r\n  },\r\n  watch: {\r\n    timeDur(val) {\r\n      this.timeDot = tools.time2seconds(val[0]);\r\n    },\r\n    scriptsText(val) {\r\n      this.drawScript();\r\n    },\r\n    recognizeText(val){\r\n      console.log(val)\r\n      if(val[0] == 1){\r\n        this.scriptsText = [val[1]]\r\n      }\r\n      else{\r\n        this.addScript(this.timeDot) \r\n      }\r\n    },\r\n    switchL: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.btnEdi = val[3];\r\n        this.drawrootTopicLine()\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getVideoTime(val) {\r\n      const _this = this;\r\n      _this.timeNow = tools.seconds2time(val.toFixed(0));\r\n      _this.overTime = tools.seconds2time(_this.videoDuration);\r\n      let margin = _this.margin;\r\n      let width = this.$refs.progressBar.offsetWidth;\r\n      let widths = 'calc(100% - 10px)'\r\n      if(_this.btnEdi){\r\n        width-=30\r\n        widths = 'calc(100% - 40px)'\r\n      }\r\n      let timeLinear = d3.scaleLinear([0, _this.videoDuration], [0, width]);\r\n      let mid = timeLinear(val) / width * 100;\r\n      // _this.timeDot = val;\r\n      _this.addScript(val);\r\n      d3.select(\"#progressBar\")\r\n        .attr(\"style\", `background: linear-gradient(90deg, rgb(200, 200, 200) ${mid}%,rgb(244, 244, 244) ${mid}%) !important;  width: ${widths}`)\r\n      this.$emit(\"videoTime\", val);\r\n    },\r\n    processBarCli(e) {\r\n      const _this = this;\r\n      let x = e.layerX;\r\n      let width = this.$refs.progressBar.offsetWidth;\r\n      if(_this.btnEdi){\r\n        width-=30\r\n      }\r\n      let timeLinear = d3.scaleLinear([0, width], [0, _this.videoDuration]);\r\n      this.timeDot = timeLinear(x);\r\n    },\r\n    addScript(timeDot) {\r\n      const _this = this;\r\n      let scriptsData = _this.scriptsData;\r\n      for (let t in scriptsData) {\r\n        let timeDur = scriptsData[t]['time'];\r\n        let sTime = tools.time2seconds(timeDur[0]);\r\n        let eTime = tools.time2seconds(timeDur[1]);\r\n        if ((timeDot > sTime) && (timeDot < eTime)) {\r\n          _this.scriptsText = scriptsData[t]['text']\r\n        }\r\n\r\n      }\r\n    },\r\n    drawScriptUp() {\r\n      let width = this.$refs.videoScriptUp.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.videoScriptUp.offsetHeight - margin.top - margin.bottom;\r\n      d3.select(\"#videoScriptUp\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#videoScriptUp\").append(\"svg\")\r\n        .attr(\"id\", \"videoScriptUpSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n    },\r\n    drawScript() {\r\n      const _this = this;\r\n      let txts = _this.scriptsText;\r\n      let margin = _this.margin;\r\n      let ketText = _this.ketText;\r\n      let width = this.$refs.videoScript.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.videoScript.offsetHeight - margin.top - margin.bottom+10;\r\n      d3.select(\"#videoScript\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#videoScript\").append(\"svg\")\r\n        .attr(\"id\", \"videoScriptSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let tx = 30;\r\n      let ty = 50;\r\n      let lay = 0;\r\n      for (let i = 0; i < txts.length; i++) {\r\n        let name = txts[i];\r\n        let w = name.length * 10;\r\n        let h = 20;\r\n        let rx = 5;\r\n        let ry = 5;\r\n        // let color = colorMap[ids[i]];\r\n        // _this.drawRect(g, tx, ty, w, h, rx, ry, color, 0.2, color)\r\n        let textColor = \"black\";\r\n        let stopList = [\"of\", \"the\", \"and\", \"be\", \"two\", \"x\", \"y\", \"z\", \"a\", \"to\"];\r\n        if ((ketText.indexOf(name) != -1) && (stopList.indexOf(name) == -1)) {\r\n          textColor = \"red\";\r\n        }\r\n        let svgArea = _this.drawTxt(svg, tx, ty, name, textColor, 24, `txts${i}`);\r\n        tx += svgArea.width + 5;\r\n        if (tx > (width - 30)) {\r\n          let tranx = (width - tx) / 2;\r\n          for (let j = i; j >= lay; j--) {\r\n            d3.select(`#txts${j}`).attr(\"transform\", `translate(${tranx},0)`)\r\n          }\r\n          lay = i;\r\n          tx = 30;\r\n          ty += 30;\r\n        }\r\n        if (i == txts.length - 1) {\r\n          let tranx = (width - tx) / 2;\r\n          for (let j = i; j >= lay; j--) {\r\n            d3.select(`#txts${j}`).attr(\"transform\", `translate(${tranx},0)`)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    drawrootTopicLine() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      const mcolor = _this.mcolor;\r\n\r\n      let width = this.$refs.rootTopicLine.offsetWidth //- margin.left - margin.right;\r\n      let height = this.$refs.rootTopicLine.offsetHeight - margin.top - margin.bottom;\r\n      _this.rootTopicLineWidth = width;\r\n      _this.rootTopicLineHeight = height;\r\n      if(_this.btnEdi){\r\n        width-=30\r\n        this.$refs.progressBar.style.width='calc(100% - 40px)'\r\n        this.$refs.iconVideo5.style.display = 'block'\r\n      }\r\n      else{\r\n      this.$refs.iconVideo5.style.display = 'none'\r\n        \r\n        this.$refs.progressBar.style.width='calc(100% - 10px)'\r\n      }\r\n      d3.select(\"#rootTopicLine\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#rootTopicLine\").append(\"svg\")\r\n        .attr(\"id\", \"rootTopicLineSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n      let groups = svg.append(\"g\").attr(\"id\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let tootTopicEntG = groups.append(\"g\").attr(\"id\", \"tootTopicEntG\").attr(\"width\", width).attr(\"height\", height);\r\n      let rootOriLineG = groups.append(\"g\").attr(\"id\", \"rootOriLineG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      rootOriLineG.append(\"line\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", height / 2)\r\n        .attr(\"x2\", width)\r\n        .attr(\"y2\", height / 2)\r\n        .attr(\"stroke\", \"rgb(200,200,200)\")\r\n        .attr(\"stroke-width\", \"5px\");\r\n\r\n      let cxLinear = d3.scaleLinear([0, _this.videoDuration], [0, width])\r\n\r\n      let data = tools.deepClone(_this.data);\r\n      let DivisionDataList = [];\r\n      let colorIndex = 0;\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i]['layout'] == '0') {\r\n          if (DivisionDataList.length != 0) {\r\n            DivisionDataList[DivisionDataList.length - 1]['nextId'] = data[i]['id'];\r\n            data[i]['preId'] = DivisionDataList[DivisionDataList.length - 1]['id'];\r\n          }\r\n          else { data[i]['preId'] = \"-1\"; }\r\n          DivisionDataList.push(data[i]);\r\n          let time = tools.time2seconds(data[i]['time'][0]);\r\n          let endTime = tools.time2seconds(data[i]['time'][0]) + data[i]['totalDuration'];\r\n          let cx = cxLinear(time);\r\n          let endx = cxLinear(endTime);\r\n          let color = mcolor[colorIndex];\r\n          // if (data[i]['name'] != 'Test') {\r\n          if (1) {\r\n            color = mcolor[colorIndex];\r\n            colorIndex++;\r\n          }\r\n          else {\r\n            color = \"rgb(250, 199, 88)\";\r\n          }\r\n          // _this.colorMap[data[i]['id']] = colorIndex % color.length;\r\n          _this.drawRect(rootOriLineG, cx - 1, height / 6, 4, height/3*2, 2, \"division_\" + data[i][\"id\"], \"rootdivisionLine\", \"rgb(250,250,250)\", 0, '', 1)\r\n          _this.drawRect(tootTopicEntG, cx, height/6, endx - cx, height/3*2, 1, \"rootEnt_\" + data[i]['id'], \"rootEnt\", color, 2, \"rgb(250,250,250)\", 0.8)\r\n        }\r\n      }\r\n      DivisionDataList[DivisionDataList.length - 1]['nextId'] = \"-1\";\r\n      _this.rootDivisionDataList = DivisionDataList;\r\n\r\n      // rootOriLineG.append(\"ellipse\")\r\n      // .attr(\"cx\",50)\r\n      // .attr(\"cy\",height/2)\r\n      // .attr(\"rx\",50)\r\n      // .attr(\"ry\",height/2)\r\n      // .attr(\"fill\",color[3])\r\n      // .attr(\"stroke\", color[3])\r\n\r\n      // .attr(\"stroke-width\", \"5px\");\r\n      // console.log(data)\r\n      // this.$bus.$emit(\"getData\",data)\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, idName, className, fill, strokeWidth, stroke, opacity) {\r\n      const _this = this;\r\n      svg.append(\"rect\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"stroke\", stroke)//\"rgb(150,150,150)\")\r\n        .attr(\"stroke-width\", strokeWidth)\r\n        .on(\"mousedown\", function (d) {\r\n          _this.selectRectId = idName.split(\"_\")[1] //d3.select(this).attr(\"id\");\r\n          if (d3.select(this).attr(\"class\") == \"rootdivisionLine\") {\r\n            _this.selectRectClass = \"rootEnt\";\r\n            _this.moveLineWidth = _this.rootTopicLineWidth;\r\n            _this.DivisionDataList = _this.rootDivisionDataList;\r\n            document.getElementById('rootTopicLineSvg').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n          else if (d3.select(this).attr(\"class\") == \"entdivisionLine\") {\r\n            _this.selectRectClass = \"editEnt\";\r\n            _this.moveLineWidth = _this.entLineWidth;\r\n            _this.DivisionDataList = _this.entDivisionDataList;\r\n            document.getElementById('editEnt').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          document.getElementById('rootTopicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          document.getElementById('editEnt').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          _this.$bus.$emit(\"topicRectup\", 1);\r\n\r\n          // _this.$bus.$emit(\"treeData\", _this.treeData);\r\n        })\r\n    },\r\n    moveRect(e) {\r\n      const _this = this;\r\n      let selectRect = _this.DivisionDataList.find(function (d) { return d['id'] == _this.selectRectId; })//右边的rect\r\n      let preId = selectRect['preId'];//左边的rect\r\n      let nextId = selectRect['nextId'];//右边的右边rect\r\n      let rectClass = _this.selectRectClass;\r\n      let prex = 0;\r\n      if (preId != '-1') {\r\n        prex = d3.select(\"#\" + rectClass + \"_\" + preId).attr(\"x\")\r\n        d3.select(\"#\" + rectClass + \"_\" + preId)\r\n          .attr(\"width\", function (d) {\r\n            return e.offsetX - prex;\r\n          })\r\n      }\r\n      let nextX = 100;\r\n      if (nextId == '-1') {\r\n        nextX = _this.moveLineWidth;\r\n      }\r\n      else {\r\n        nextX = d3.select(\"#\" + rectClass + \"_\" + nextId).attr(\"x\");\r\n      }\r\n      d3.select(\"#\" + rectClass + \"_\" + _this.selectRectId)\r\n        .attr(\"width\", function (d) {\r\n          return nextX - e.offsetX;\r\n        })\r\n        .attr(\"x\", e.offsetX)\r\n      d3.select(\"#division_\" + _this.selectRectId)\r\n        .attr(\"x\", e.offsetX - 5)\r\n\r\n      if ((e.offsetX > (_this.rootTopicLineWidth)) || (e.offsetX < (0)) || (e.offsetY > (_this.rootTopicLineHeight)) || (e.offsetY < (0))) {\r\n        document.getElementById('rootTopicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n      }\r\n    },\r\n    drawTxt(svg, tx, ty, txts, fill, size, idName) {\r\n      svg.append(\"text\")\r\n        .attr(\"y\", ty)\r\n        .attr(\"x\", tx)\r\n        .attr(\"id\", idName)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"font-size\", size)\r\n        .text(txts)\r\n\r\n      let textArea = document.getElementById(idName).getBBox();\r\n      return textArea;\r\n      // .style(\"text-anchor\", anchor)//\"middle\")\r\n      // .attr(\"transform\", `rotate(${roat} ${tx} ${ty})`);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    this.$bus.$on('graphData', (val) => {\r\n      _this.data = val;\r\n      let ketText = [];\r\n      for (let i = 0; i < _this.data.length; i++) {\r\n        let names = _this.data[i]['name'].split(\" \");\r\n        for (let n in names) {\r\n          ketText.push(names[n]);\r\n        }\r\n      }\r\n      _this.ketText = ketText;\r\n      _this.drawrootTopicLine();\r\n    });\r\n    this.$bus.$on('recognizeText', (val) => {\r\n      _this.recognizeText = val;\r\n    });\r\n    this.$bus.$on('relData', (val) => {\r\n      _this.relData = val;\r\n    });\r\n    this.$nextTick(() => {\r\n      _this.videoWidth = this.$refs.videoDiv.offsetWidth\r\n      _this.videoHeight = this.$refs.videoDiv.offsetHeight\r\n    })\r\n    // let sceneLiving = create.Scene();\r\n    // let sceneTeaching = create.Scene();\r\n\r\n  },\r\n  mounted() {\r\n    var _this = this;\r\n    \r\n    this.$bus.$on('switchL', (val) => {\r\n      _this.switchL = val;\r\n    });\r\n    \r\n    // disabled in the online demo\r\n    // this.$bus.$on('entData', (val) => {\r\n    //   _this.data = val;\r\n    // });\r\n    // this.$bus.$on('relData', (val) => {\r\n    //   _this.relData = val;\r\n    // });\r\n  }\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}