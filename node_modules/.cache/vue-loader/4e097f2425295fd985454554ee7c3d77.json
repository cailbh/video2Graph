{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\EditPanel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\EditPanel\\index.vue","mtime":1705377392669},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/EditPanel","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"editPanel\">\r\n    <div class=\"panelHead\">SupportPanel</div>\r\n    <div id=\"editPanelDiv\" class=\"panelBody\" ref=\"editPanelDiv\">\r\n      <div id=\"topicLine\" ref=\"topicLine\"></div>\r\n      <!-- <div id=\"rootTree\" ref=\"rootTree\">\r\n        <div id=\"toolsButs\">\r\n          <el-collapse accordion>\r\n            <el-collapse-item>\r\n              <template slot=\"title\">\r\n                <img class=\"iconUpload\" :src=\"toolsButsUrl\">\r\n              </template>\r\n              <div id=\"addNodeSonDiv\" class=\"toolsBut\" @click=\"addNodeSonClk\">\r\n                <img class=\"iconUpload\" :src=\"addNodeSonUrl\">\r\n              </div>\r\n              <div id=\"addNodePerDiv\" class=\"toolsBut\" @click=\"addNodePerClk\">\r\n                <img class=\"iconUpload\" :src=\"addNodePerUrl\">\r\n              </div>\r\n              <div id=\"addLinkBasicDiv\" class=\"toolsBut\" @click=\"addLinkBasicClk\">\r\n                <img class=\"iconUpload\" :src=\"addLinkBasicUrl\">\r\n              </div>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </div>\r\n      </div> -->\r\n      <div id=\"editData\" ref=\"editData\">\r\n        <el-table class=\"editTable\" :data=\"tableData\" style=\"width: 100%\">\r\n          <el-table-column prop=\"key\" label=\"\" width=\"260\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"value\" label=\"\" width=\"260\">\r\n            <template slot-scope=\"scope\">\r\n              <div v-if=\"scope.row.key == 'Type'\">\r\n                <el-radio-group v-model=\"typeRadio\" size=\"small\" @change=\"selectType\">\r\n                  <el-radio-button label=\"concept\"></el-radio-button>\r\n                  <el-radio-button label=\"test\"></el-radio-button>\r\n                  <el-radio-button label=\"example\"></el-radio-button>\r\n                </el-radio-group>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Course style'\">\r\n                <div class=\"block\">\r\n                  <el-slider v-model=\"lectureStyleValue\" range>\r\n                  </el-slider>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Importance score'\">\r\n                <div class=\"block\">\r\n                  <el-slider id=\"importanceScoreValue\" v-model=\"importanceScoreValue\">\r\n                  </el-slider>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"scope.row.key == 'Name'\">\r\n                <!-- <el-input size=\"small\" :placeholder=\"scope.row.value\" v-model=\"nameinput\" clearable>\r\n                </el-input> -->\r\n                <div id=\"editName\">{{nameinput}}</div>\r\n              </div>\r\n              <div :class=\"scope.row.key + ' tableCell'\" :height=\"scope.row.value === '' ? '10' : '0'\"\r\n                disable-transitions>\r\n                <!-- {{ scope.row.value }} -->\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- <div id=\"cancelDiv\" @click=\"cancelClk\">\r\n          <img class=\"iconUpload\" :src=\"cancelUrl\">\r\n        </div> -->\r\n        <div id=\"confirmDiv\" @click=\"confirmClk\">\r\n          <img class=\"iconUpload\" :src=\"confirmUrl\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport domtoimage from 'dom-to-image';\r\nimport TestJson from \"@/assets/json/case1_fin.json\";\r\nimport TestRelJson from \"@/assets/json/case1_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\n\r\nexport default {\r\n  props: [],\r\n  data() {\r\n    return {\r\n      typeRadio: \"concept\",\r\n      data: TestJson,  //test in the online demo\r\n      relData: TestRelJson,  //test in the online demo\r\n      treeData: null,\r\n      toolsState: '',\r\n      confirmUrl: require(\"@/assets/img/confirm.svg\"),\r\n      cancelUrl: require(\"@/assets/img/cancel.svg\"),\r\n      toolsButsUrl: require(\"@/assets/img/toolsButs.png\"),\r\n      addNodeSonUrl: require(\"@/assets/img/addNode1.png\"),\r\n      addNodePerUrl: require(\"@/assets/img/addNode2.png\"),\r\n      addLinkBasicUrl: require(\"@/assets/img/addLink.png\"),\r\n      // nameinput: \"Random Variables\",\r\n      nameinput: \"Fundamental Graphs\",\r\n      // nameinput: \"Trees\",\r\n      lectureStyleValue: [0, 80],\r\n      importanceScoreValue: 80,\r\n      tableData: [{\r\n        key: 'Name',\r\n        value: '',\r\n      },{\r\n        key: 'Type',\r\n        value: '',\r\n      }, {\r\n        key: 'Course style',\r\n        value: '',\r\n      }, {\r\n        key: 'Importance score',\r\n        value: '',\r\n      }],\r\n      curEntId: \"\",\r\n      insertEntId: \"\",\r\n      insertSourceEntId: \"-1\",\r\n      insertTargetEntId: \"-1\",\r\n      sonList: [],\r\n      minDImportance: 0,\r\n      maxDImportance: 0,\r\n      minDRelevance: 0,\r\n      maxDRelevance: 0,\r\n      maxDDuration: 0,\r\n      importanceLinear:'',\r\n      maxTotalDuration: 0,\r\n      importanceMinColor: \"rgb(203, 230, 209)\",\r\n      importanceMaxColor: \"rgb(22, 144, 207)\",\r\n      totalDuration: 1000,\r\n      importanceColor_linear: null,\r\n      importanceCompute_color: null,\r\n      relevanceScale_linear: null,\r\n      totalDurationScale_linear: null,\r\n      DivisionDataList: [],\r\n      rootDivisionDataList: [],\r\n      entDivisionDataList: [],\r\n      colorMap: {},\r\n      rootColorMap:{},\r\n      videoDuration: 668,\r\n      selectRectId: \"\",\r\n      selectRectClass: \"\",\r\n      topicLineWidth: 1000,\r\n      topicLineHeight: 1000,\r\n      moveLineWidth: 1000,\r\n      entLineWidth: 1000,\r\n      totalSonDuration: 0,\r\n      treeGTransformK:1,\r\n      treeGTransformX:10,\r\n      treeGTransformY:100,\r\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\r\n      // mcolor: [\r\n      //   \"rgb(255,60,60)\",\r\n      //   \"rgb(155,20,100)\",\r\n      //   \"rgb(255,83,255)\",\r\n      //   \"rgb(200,100,50)\",\r\n      //   \"rgb(235,135,162)\",\r\n      //   \"rgb(200,200,102)\",\r\n      //   \"rgb(255,178,101)\",\r\n      //   \"rgb(63,151,134)\",\r\n      //   \"rgb(83,155,255)\",\r\n      //   \"rgb(50,200,120)\",\r\n      //   \"rgb(2,50,200)\",\r\n      //   \"rgb(0,122,244)\",\r\n      //   \"rgb(150,122,244)\",\r\n      //   \"rgb(168,168,255)\",\r\n      //   \"rgb(200,200,200)\",\r\n      // ],\r\n      mcolor: [\r\n        \"rgb(91, 107, 255)\",\r\n        \"rgb(6, 214, 160)\",\r\n        \"rgb(255, 120, 90)\",\r\n        \"rgb(125, 98, 211)\",\r\n        \"rgb(255, 113, 212)\",\r\n        \"rgb(112, 214, 255)\",\r\n        \"rgb(255, 159, 28)\",\r\n        \"rgb(255, 77, 109)\",\r\n      ],\r\n      mLightcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n    };\r\n  },\r\n  watch: {\r\n    typeRadio(val) {\r\n    },\r\n    lectureStyleValue(val){\r\n      let mid = (val[0]+val[1])/2;\r\n      d3.select(\"#editData .el-slider__runway\")\r\n      .attr(\"style\",\"background: linear-gradient(90deg, #ff9c9c \"+mid+\"%,#6f8be0 \"+mid+\"%) !important\")\r\n    },\r\n    type(val) {\r\n    },\r\n    // selectEnt(val){\r\n    //   console.log(val);\r\n    // },\r\n    curEntId(curEntId) {\r\n      const _this = this;\r\n      let data = _this.data;\r\n      \r\n      let curEnt = data.find(function (d) { return d['id'] == curEntId; });\r\n      if (curEnt['type'] == '1') {\r\n        _this.typeRadio = \"test\";\r\n      }\r\n      else if(curEnt['type'] == '0') {\r\n        _this.typeRadio = \"concept\";\r\n      }\r\n      else {\r\n        _this.typeRadio = \"example\";\r\n      }\r\n      _this.nameinput = curEnt['name'];\r\n      let duration = 0//tools.time2seconds(curEnt['time'][1]) - tools.time2seconds(curEnt['time'][0]);\r\n      \r\n      let typeData = curEnt[\"attribute\"][\"expressions\"];\r\n      let typeDur = 0;\r\n      let styleValue = [];\r\n      for (let i in typeData) {\r\n        let typeDurition = typeData[i];\r\n        let totalTypeSeconds = 0;\r\n        for (let d in typeDurition) {\r\n          totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n        }\r\n        duration+=totalTypeSeconds\r\n      }\r\n      let typeDurScale_linear = d3.scaleLinear([0, duration], [0, 100]);\r\n      for (let i in typeData) {\r\n        // let color = typeColor[i];\r\n        let typeDurition = typeData[i];\r\n        let totalTypeSeconds = 0;\r\n        for (let d in typeDurition) {\r\n          totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n        }\r\n        typeDur += totalTypeSeconds;\r\n        styleValue.push(typeDurScale_linear(typeDur))\r\n      }\r\n      // console.log\r\n      let importanceColor_linear = d3.scaleLinear().domain([ _this.minDImportance, _this.maxDImportance]).range([0, 1]);\r\n      _this.importanceScoreValue = importanceColor_linear(curEnt['attribute']['importance'])*100\r\n      _this.lectureStyleValue = styleValue;\r\n      // _this.importanceScoreValue = 0;\r\n      _this.drawEntity(curEnt);\r\n      _this.drawSonLine(curEnt);\r\n    }\r\n  },\r\n  methods: {\r\n    selectType(v) {\r\n      // console.log(v)\r\n    },\r\n    cancelClk() {\r\n      const _this = this;\r\n      let data = _this.data;\r\n      let curEntId = _this.curEntId;\r\n      let curEnt = data.find(function (d) { return d['id'] == curEntId; });\r\n      _this.drawEntity(curEnt);\r\n      _this.drawSonLine(curEnt);\r\n      _this.drawrootTree();\r\n\r\n    },\r\n    confirmClk() {\r\n      const _this = this;\r\n      let data = _this.data;\r\n      let curEntId = _this.curEntId;\r\n      let curEnt = data.find(function (d) { return d['id'] == curEntId; });\r\n      if (_this.typeRadio == \"hidden State\") {\r\n        curEnt['type'] = '1'\r\n      }\r\n      else {\r\n        curEnt['type'] = '0';\r\n      }\r\n      curEnt['name'] = _this.nameinput;\r\n\r\n      let styleValue = _this.lectureStyleValue;\r\n      let startSeconds = tools.time2seconds(curEnt['time'][0]);\r\n      let endSeconds = tools.time2seconds(curEnt['time'][1]);\r\n      let totalSeconds = endSeconds - startSeconds;\r\n      let typeDurReScale_linear = d3.scaleLinear([0, 100], [startSeconds, endSeconds]);\r\n      let typeData = { \"1\": [], \"2\": [], \"3\": [] };//;\r\n      let t1 = tools.seconds2time(typeDurReScale_linear(styleValue[0]));\r\n      let t2 = tools.seconds2time(typeDurReScale_linear(styleValue[1]));\r\n      typeData['1'].push([curEnt['time'][0], t1]);\r\n      typeData['2'].push([t1, t2]);\r\n      typeData['3'].push([t2, curEnt['time'][1]]);\r\n      curEnt[\"attribute\"][\"expressions\"] = typeData;\r\n\r\n      let entRects = d3.selectAll(\".editEnt\").nodes();\r\n      console.log(entRects)\r\n      let totalSonDuration = _this.totalSonDuration;\r\n      let wid = _this.entLineWidth;\r\n      let cxReLinear = d3.scaleLinear([0, wid], [0, totalSonDuration]);\r\n      let preTime = '';\r\n      let typeTotalData = { \"1\": [], \"2\": [], \"3\": [] };//;\r\n      for (let n = 0; n < entRects.length; n++) {\r\n        let curRect = entRects[n];\r\n        let rectId = curRect.id.split(\"_\")[1];\r\n        let rectData = data.find(function (d) { return d['id'] == rectId; });\r\n        let perDur = tools.time2seconds(rectData['time'][1]) - tools.time2seconds(rectData['time'][0]);\r\n        if (n == 0) {\r\n          preTime = rectData['time'][0];\r\n        }\r\n        let preSecond = tools.time2seconds(preTime);\r\n        let x = curRect.x.baseVal.value;\r\n        let w = curRect.width.baseVal.value;\r\n        let durSecond = cxReLinear(w);\r\n        let endTime = tools.seconds2time(preSecond + durSecond);\r\n        rectData['time'] = [preTime, endTime];\r\n        rectData['totalDuration'] += durSecond - perDur;\r\n        preTime = endTime;\r\n        for (let t in typeTotalData) {\r\n          typeTotalData[t] = [...typeTotalData[t], ...rectData['attribute']['expressions'][t]]\r\n        }\r\n      }\r\n      console.log(typeTotalData)\r\n      _this.data = data;\r\n      // console.log(entRects,entRects[0])\r\n\r\n      _this.drawEntity(curEnt);\r\n      _this.drawSonLine(curEnt);\r\n      _this.drawrootTree();\r\n      _this.$bus.$emit(\"graphData\", data);\r\n    },\r\n    click_node() {\r\n      const _this = this;\r\n      let nodeId = _this.curEntId;\r\n      let addDataId = _this.insertEntId;//parseInt(nodeId)+1+'';\r\n      let oriData = _this.data;\r\n      let state = _this.toolsState;\r\n      let returnData = [];\r\n      let returnRelData = {};\r\n      let relData = _this.relData;\r\n\r\n      if (state == 'addNodeSon') {\r\n        for (let i = 0; i < oriData.length; i++) {\r\n          let cData = oriData[i];\r\n          let cDataId = cData['id']\r\n          \r\n          let sons = cData['son'];\r\n          let sonsNew = [];\r\n          for(let s=0;s<sons.length;s++){\r\n            let ss = sons[s]\r\n              if(parseInt(ss)>=parseInt(addDataId)) ss = parseInt(ss)+1\r\n              sonsNew.push(ss+'')\r\n          }\r\n          cData['son'] = sonsNew;\r\n\r\n          if (parseInt(cDataId) == parseInt(addDataId)) {\r\n            let perData = tools.deepClone(cData);\r\n            let addData = tools.deepClone(perData);\r\n            addData['id'] = addDataId;\r\n            perData['id'] = (parseInt(addDataId) + 1)+'';\r\n            console.log(addData,perData)\r\n            let startT = cData['time'][0];\r\n            let endT = cData['time'][1];\r\n            let midT = tools.seconds2time((tools.time2seconds(endT) + tools.time2seconds(startT)) / 2);\r\n            addData['time'] = [startT, midT];\r\n            perData['time'] = [midT, endT];\r\n            addData['son'] = [];\r\n            addData['totalDuration'] = (tools.time2seconds(midT) - tools.time2seconds(startT));\r\n            perData['totalDuration'] -= addData['totalDuration'];\r\n            let typeTimes = perData['attribute']['expressions'];\r\n            let typePreData = { \"1\": [], \"2\": [], \"3\": [] };\r\n            let typeAddData = { \"1\": [], \"2\": [], \"3\": [] };\r\n            for (let t in typeTimes) {\r\n              for (let a = 0; a < typeTimes[t].length; a++) {\r\n                let st = typeTimes[t][a][0];\r\n                let et = typeTimes[t][a][1];\r\n                if (tools.time2seconds(et) <= tools.time2seconds(midT)) { typeAddData[t].push([st, et]) }\r\n                else if (tools.time2seconds(st) >= tools.time2seconds(midT)) { typePreData[t].push([st, et]) }\r\n                else if ((tools.time2seconds(st) < tools.time2seconds(midT)) && (tools.time2seconds(et) > tools.time2seconds(midT))) {\r\n                  typeAddData[t].push([st, midT]);\r\n                  typePreData[t].push([midT, et]);\r\n                }\r\n              }\r\n            }\r\n            perData['attribute']['expressions'] = typePreData;\r\n            addData['attribute']['expressions'] = typeAddData;\r\n            returnData.push(addData);\r\n            returnData.push(perData);\r\n          }\r\n          else if (parseInt(cData['id']) < parseInt(addDataId)) {\r\n            returnData.push(tools.deepClone(cData));\r\n          }\r\n          else if (parseInt(cData['id']) > parseInt(addDataId)){\r\n            let perData = tools.deepClone(cData);\r\n            perData['id'] = (parseInt(cDataId) + 1) + '';\r\n            returnData.push(perData);\r\n          }\r\n\r\n        }\r\n      \r\n      let bsNew = [];\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n        let sourceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        if(parseInt(sourceId)>=parseInt(addDataId)) sourceId = parseInt(sourceId)+1;\r\n        if(parseInt(targetId)>=parseInt(addDataId)) targetId = parseInt(targetId)+1;\r\n        bsNew.push([sourceId+'',targetId+''])\r\n      }\r\n      let ssNew = []\r\n      let similarityRel = relData['similarityRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n        let sourceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n        if(parseInt(sourceId)>=parseInt(addDataId)) sourceId = parseInt(sourceId)+1;\r\n        if(parseInt(targetId)>=parseInt(addDataId)) targetId = parseInt(targetId)+1;\r\n        ssNew.push([sourceId+'',targetId+''])\r\n      }\r\n      returnRelData = {'basicRel':bsNew,'similarityRel':ssNew};\r\n      let nData = returnData.find(function(d){return d['id'] == nodeId});\r\n      let aData = returnData.find(function(d){return d['id'] == addDataId});\r\n      if(nodeId!='-1'){\r\n        nData['son'].push(addDataId);\r\n        aData['layout'] = parseInt(nData['layout']+1);\r\n        aData['father'] = [nodeId];\r\n      }\r\n      else{\r\n        aData['layout'] = '0';\r\n      }\r\n      _this.data = (returnData);\r\n      _this.relData = returnRelData;\r\n      _this.getTreeData();\r\n      _this.updata();\r\n      }\r\n      if (state == 'addLinkBasic') {\r\n        let addSourceDataId = _this.insertSourceEntId;\r\n        let addTargetDataId = _this.insertTargetEntId;\r\n        if((addSourceDataId != '-1')&&(addTargetDataId != '-1')){\r\n          returnRelData =  tools.deepClone(relData);\r\n          returnRelData['basicRel'].push([addSourceDataId,addTargetDataId]);\r\n          _this.insertSourceEntId = '-1';\r\n          _this.insertTargetEntId = '-1';\r\n          _this.relData = returnRelData;\r\n          _this.getTreeData();\r\n          _this.updata();\r\n        }\r\n      }\r\n    },\r\n    addNodeSonClk() {\r\n      this.toolsState = 'addNodeSon';\r\n    },\r\n    addNodePerClk() {\r\n      this.toolsState = 'addNodePer';\r\n    },\r\n    addLinkBasicClk() {\r\n      this.toolsState = 'addLinkBasic';\r\n    },\r\n    drawtopicLine() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      const color = _this.mcolor;\r\n\r\n      let width = this.$refs.topicLine.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.topicLine.offsetHeight - margin.top - margin.bottom;\r\n      _this.topicLineWidth = width;\r\n      _this.topicLineHeight = height;\r\n      d3.select(\"#topicLine\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#topicLine\").append(\"svg\")\r\n        .attr(\"id\", \"topicLineSvg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n      let groups = svg.append(\"g\").attr(\"id\", \"groups\").attr(\"width\", width).attr(\"height\", height);\r\n      let rootEntG = groups.append(\"g\").attr(\"id\", \"rootEntG\").attr(\"width\", width).attr(\"height\", height);\r\n      let oriLineG = groups.append(\"g\").attr(\"id\", \"oriLineG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      oriLineG.append(\"line\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", height / 2)\r\n        .attr(\"x2\", width)\r\n        .attr(\"y2\", height / 2)\r\n        .attr(\"stroke\", \"rgb(200,200,200)\")\r\n        .attr(\"stroke-width\", \"5px\");\r\n\r\n      let cxLinear = d3.scaleLinear([0, _this.videoDuration], [margin.left, width])\r\n\r\n      let data = tools.deepClone(_this.data);\r\n      let DivisionDataList = [];\r\n      let colorIndex = 0;\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i]['layout'] == '0') {\r\n          if (DivisionDataList.length != 0) {\r\n            DivisionDataList[DivisionDataList.length - 1]['nextId'] = data[i]['id'];\r\n            data[i]['preId'] = DivisionDataList[DivisionDataList.length - 1]['id'];\r\n          }\r\n          else { data[i]['preId'] = \"-1\"; }\r\n          DivisionDataList.push(data[i]);\r\n          let time = tools.time2seconds(data[i]['time'][0]);\r\n          let endTime = tools.time2seconds(data[i]['time'][0]) + data[i]['totalDuration'];\r\n          let cx = cxLinear(time);\r\n          let endx = cxLinear(endTime);\r\n          _this.colorMap[data[i]['id']] = colorIndex % color.length;\r\n          _this.drawRect(oriLineG, cx - 5, height / 2 - 5, 10, 10, height / 2, \"division_\" + data[i][\"id\"], \"rootdivisionLine\", \"rgb(250,250,250)\", 0, '', 1)\r\n          _this.drawRect(rootEntG, cx, margin.top, endx - cx, height - margin.top - margin.bottom, height / 2, \"rootEnt_\" + data[i]['id'], \"rootEnt\", color[_this.colorMap[data[i]['id']]], 5, \"rgb(150,150,150)\", 0.1)\r\n          colorIndex++;\r\n        }\r\n      }\r\n      DivisionDataList[DivisionDataList.length - 1]['nextId'] = \"-1\";\r\n      _this.rootDivisionDataList = DivisionDataList;\r\n\r\n      // oriLineG.append(\"ellipse\")\r\n      // .attr(\"cx\",50)\r\n      // .attr(\"cy\",height/2)\r\n      // .attr(\"rx\",50)\r\n      // .attr(\"ry\",height/2)\r\n      // .attr(\"fill\",color[3])\r\n      // .attr(\"stroke\", color[3])\r\n\r\n      // .attr(\"stroke-width\", \"5px\");\r\n      // console.log(data)\r\n      // this.$bus.$emit(\"getData\",data)\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, idName, className, fill, strokeWidth, stroke, opacity) {\r\n      const _this = this;\r\n      svg.append(\"rect\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"stroke\", stroke)//\"rgb(150,150,150)\")\r\n        .attr(\"stroke-width\", strokeWidth)\r\n        .on(\"mousedown\", function (d) {\r\n          _this.selectRectId = idName.split(\"_\")[1] //d3.select(this).attr(\"id\");\r\n          if (d3.select(this).attr(\"class\") == \"rootdivisionLine\") {\r\n            _this.selectRectClass = \"rootEnt\";\r\n            _this.moveLineWidth = _this.topicLineWidth;\r\n            _this.DivisionDataList = _this.rootDivisionDataList;\r\n            // document.getElementById('topicLineSvg').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n          else if (d3.select(this).attr(\"class\") == \"entdivisionLine\") {\r\n            _this.selectRectClass = \"editEnt\";\r\n            _this.moveLineWidth = _this.entLineWidth;\r\n            _this.DivisionDataList = _this.entDivisionDataList;\r\n            document.getElementById('editEnt').addEventListener(\"mousemove\", _this.moveRect); // 监听点击事件\r\n          }\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          // document.getElementById('topicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          document.getElementById('editEnt').removeEventListener(\"mousemove\", _this.moveRect); // \r\n          // _this.$bus.$emit(\"graphData\", _this.data);\r\n\r\n          _this.$bus.$emit(\"treeData\", _this.treeData);\r\n        })\r\n    },\r\n    moveRect(e) {\r\n      const _this = this;\r\n      let selectRect = _this.DivisionDataList.find(function (d) { return d['id'] == _this.selectRectId; })//右边的rect\r\n      let preId = selectRect['preId'];//左边的rect\r\n      let nextId = selectRect['nextId'];//右边的右边rect\r\n      let rectClass = _this.selectRectClass;\r\n      let prex = 0;\r\n      if (preId != '-1') {\r\n        prex = d3.select(\"#\" + rectClass + \"_\" + preId).attr(\"x\")\r\n        d3.select(\"#\" + rectClass + \"_\" + preId)\r\n          .attr(\"width\", function (d) {\r\n            return e.offsetX - prex;\r\n          })\r\n      }\r\n      let nextX = 100;\r\n      if (nextId == '-1') {\r\n        nextX = _this.moveLineWidth;\r\n      }\r\n      else {\r\n        nextX = d3.select(\"#\" + rectClass + \"_\" + nextId).attr(\"x\");\r\n      }\r\n      d3.select(\"#\" + rectClass + \"_\" + _this.selectRectId)\r\n        .attr(\"width\", function (d) {\r\n          return nextX - e.offsetX;\r\n        })\r\n        .attr(\"x\", e.offsetX)\r\n      d3.select(\"#division_\" + _this.selectRectId)\r\n        .attr(\"x\", e.offsetX - 5)\r\n\r\n      if ((e.offsetX > (_this.topicLineWidth)) || (e.offsetX < (0)) || (e.offsetY > (_this.topicLineHeight)) || (e.offsetY < (0))) {\r\n        // document.getElementById('topicLineSvg').removeEventListener(\"mousemove\", _this.moveRect); // \r\n      }\r\n    },\r\n    getTreeData(){\r\n      const _this = this;\r\n      let oriData = tools.deepClone(this.data);\r\n      var data = {\r\n        \"name\": \"root\",\r\n        \"children\": []\r\n      };\r\n\r\n      for (let i = oriData.length - 1; i >= 0; i--) {\r\n        let sons = oriData[i]['son'];\r\n        oriData[i]['children'] = [];\r\n        if (sons.length > 0) {\r\n          for (let s = 0; s < sons.length; s++) {\r\n            oriData[i]['children'].push(oriData.find(function (d) { return d['id'] == sons[s] }))\r\n          }\r\n        }\r\n      }\r\n      let c = 0 ;\r\n      for (let i = 0; i < oriData.length; i++) {\r\n\r\n        let layout = oriData[i]['layout'];\r\n        if (layout == '0') {\r\n          data['children'].push(oriData[i]);\r\n          if(oriData[i]['name']!=\"Test\"){\r\n            _this.rootColorMap[oriData[i]['id']] = _this.mcolor[c];\r\n            c++;\r\n          }\r\n          else{\r\n            _this.rootColorMap[oriData[i]['id']] =\"rgb(250, 199, 88)\";\r\n          }\r\n        }\r\n      }\r\n\r\n      this.treeData = data;\r\n      console.log(_this.rootColorMap)\r\n      this.$bus.$emit(\"treeData\", [data,_this.rootColorMap]);\r\n    },\r\n    drawrootTree() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let width = this.$refs.rootTree.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.rootTree.offsetHeight - margin.top - margin.bottom;\r\n\r\n      let color = _this.mcolor;\r\n      let colorMap = _this.colorMap;\r\n      // var tree = d3.tree()\r\n      //   .size([width, height - 200]);\r\n      d3.select(\"#rootTree\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#rootTree\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n\r\n      let transY = height;\r\n      let treeGTransformX = _this.treeGTransformX;\r\n      let treeGTransformY = _this.treeGTransformY;\r\n      let treeGTransformK = _this.treeGTransformK;\r\n      let groups = svg.append(\"g\")\r\n        .attr(\"id\", \"editrootTreeg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"transform\",  \"translate(\"+treeGTransformX+',' +treeGTransformY + \") scale(\"+treeGTransformK+\")\");\r\n\r\n        let stx = 0;\r\n        let sty = 0;\r\n        let stk =1;\r\n      var graphZoom = d3.zoom()\r\n        .scaleExtent([0, 10])\r\n        .on(\"start\", (e) => {\r\n          sty = e.transform.y;\r\n          stx = e.transform.x;\r\n          stk = e.transform.k;\r\n        })\r\n        .on('zoom', (e) => {\r\n          treeGTransformX = _this.treeGTransformX + e.transform.x - stx;\r\n          treeGTransformY = _this.treeGTransformY + e.transform.y - sty;\r\n          treeGTransformK = _this.treeGTransformK + e.transform.k - stk;\r\n          groups.attr('transform', 'translate(' + (treeGTransformX) + ',' + (treeGTransformY) + ') scale(' + (treeGTransformK) + ')')\r\n        })\r\n        .on('end', (e) => {\r\n          _this.treeGTransformX = treeGTransformX;\r\n          _this.treeGTransformY = treeGTransformY;\r\n          _this.treeGTransformK = treeGTransformK;\r\n          groups.attr('transform', 'translate(' + (treeGTransformX) + ',' + (treeGTransformY) + ') scale(' + (treeGTransformK) + ')')\r\n        });\r\n      svg.call(graphZoom)\r\n\r\n      const gLink = groups.append(\"g\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", \"#555\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        .attr(\"stroke-opacity\", 0.4)\r\n        .attr(\"stroke-width\", 1.5);\r\n\r\n      const gNode = groups.append(\"g\")\r\n        .attr(\"cursor\", \"pointer\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        .attr(\"pointer-events\", \"all\")\r\n\r\n      let data = _this.treeData;\r\n      let diagonal = d3.linkHorizontal().x(d => d.y).y(d => d.x);\r\n      let tree = d3.tree().nodeSize([50, 150]);//.size([(height - margin.left - margin.right) * 2, (width - margin.left - margin.right)-10])\r\n      const root = d3.hierarchy(data);\r\n      const nodes = root.descendants().reverse();\r\n      const links = root.links();\r\n      tree(root);\r\n      console.log(nodes)\r\n      const node = gNode.selectAll(\"g\")\r\n        .data(nodes, d => d.id);\r\n\r\n      const nodeEnter = node.data(nodes).enter().append(\"g\")\r\n        .attr(\"transform\", (d) => {\r\n          return `translate(${d.y},${d.x})`\r\n        })\r\n        .on(\"click\", (event, d) => {\r\n          d.children = d.children ? null : d._children;\r\n          // update(d);\r\n        })\r\n\r\n      nodeEnter.append(\"circle\")\r\n        .attr(\"r\", 10)\r\n        .attr(\"id\", function (d) {\r\n          console.log(d)\r\n          if(d.data.name == 'root')\r\n            return \"treeNode_-1\";\r\n          return \"treeNode_\" + d.data.id;\r\n        })\r\n        .attr(\"fill\", function (d) {\r\n          if (d.data.name == 'root') {\r\n            return 'grey'\r\n          }\r\n          else {\r\n            let parent = d.parent;\r\n            let rootd = null;\r\n            while (parent.data.name != 'root') {\r\n              rootd = parent;\r\n              if (parent.parent.data.name == 'root') {\r\n                return color[colorMap[parent.data.id]]\r\n              }\r\n              parent = parent.parent;\r\n            }\r\n            return color[colorMap[d.data.id]]\r\n          }\r\n\r\n        })\r\n        .attr(\"stroke\", \"rgb(100,100,100)\")\r\n        // .attr(\"fill\", d => d._children ? \"#555\" : \"#999\")\r\n        .attr(\"stroke-width\", 1)\r\n        .on(\"mouseover\", function () {\r\n          d3.select(this).attr(\"r\", 15);\r\n\r\n        })\r\n        .on(\"mouseleave\", function () {\r\n          d3.select(this).attr(\"r\", 10)\r\n        })\r\n        .on(\"mousedown\", function () {\r\n          let nodeIdN = d3.select(this).attr(\"id\");\r\n          let nodeId = nodeIdN.split(\"_\")[1];\r\n          _this.curEntId = nodeId;\r\n          if(nodeId == '-1'){\r\n            _this.insertEntId = parseInt(nodeId) + 1 + '';\r\n          _this.click_node();\r\n            return\r\n          }\r\n          let curData = _this.data.find(function (d) { return d['id'] == nodeId; });\r\n          if (_this.toolsState == 'addNodeSon') {\r\n            _this.insertEntId = parseInt(nodeId) + 1 + '';\r\n          }\r\n          else if (_this.toolsState == 'addLinkBasic') {\r\n            if(_this.insertSourceEntId ==\"-1\")\r\n              _this.insertSourceEntId = parseInt(nodeId) + '';\r\n            else{\r\n              _this.insertTargetEntId = parseInt(nodeId) + '';\r\n            }\r\n          }\r\n          if ( (curData['son'].length > 0)) {\r\n            _this.insertEntId = parseInt(curData['son'][0]) + 1 +'';\r\n          };\r\n          _this.click_node();\r\n        })\r\n\r\n      // nodeEnter.append(\"text\")\r\n      //   .attr(\"dy\", \"0.31em\")\r\n      //   .attr(\"x\", d => d._children ? -6 : 6)\r\n      //   .attr(\"text-anchor\", d => d._children ? \"end\" : \"start\")\r\n      //   .text(d => d.data.name)\r\n      //   .clone(true).lower()\r\n      //   .attr(\"stroke-linejoin\", \"round\")\r\n      //   .attr(\"stroke-width\", 3)\r\n      //   .attr(\"stroke\", \"white\");\r\n\r\n      const link = gLink.selectAll(\"path\")\r\n        .data(links, d => d.target.id);\r\n\r\n      const linkEnter = link.enter().append(\"path\")\r\n        .attr(\"d\", d => {\r\n          const o = { x: d.source.x, y: d.source.y };\r\n          const p = { x: d.target.x, y: d.target.y }\r\n          return diagonal({ source: o, target: p });\r\n        })\r\n        .attr(\"stroke\", \"rgb(100,100,100)\")\r\n        .attr(\"stroke-width\", 5)\r\n      _this.drawRootTreeRel(gLink, nodes);\r\n    },\r\n    drawRootTreeRel(svg, nodeData) {\r\n\r\n      const _this = this;\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      console.log(nodeData)\r\n      let margin = _this.margin;\r\n      let height = svg.attr('height');\r\n      // let basicRel = relData['similarityRel'];\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n\r\n        let sourceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        let idN = \"basicRel\" + sourceId + \"_\" + targetId;\r\n        let classN = \"basicRel source\" + sourceId + \" target\" + targetId;\r\n        let sourceNode = nodeData.find(function (d) { return d['data']['id'] == sourceId });\r\n        let targetNode = nodeData.find(function (d) { return d['data']['id'] == targetId });\r\n        if (sourceNode['x'] > targetNode['x']) {\r\n          let tp = sourceNode;\r\n          sourceNode = targetNode;\r\n          targetNode = tp;\r\n        }\r\n        const path = d3.path();\r\n\r\n        let startX = sourceNode['y'];\r\n        let endX = targetNode['y'];\r\n        let startY = sourceNode['x'];\r\n        let endY = targetNode['x'];\r\n        let midX = (startX + endX) / 2;\r\n        let midY = (startY + endY) / 2;\r\n        let cnx = (startX > endX) ? (startX + 10 + 0.25 * (endY - startY)) : (endX + 10 + 0.25 * (endY - startY));\r\n        path.moveTo(startX, startY);\r\n        path.bezierCurveTo(cnx, midY, cnx, midY, endX, endY);\r\n        _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"9,9\", idN, classN);\r\n\r\n\r\n      };\r\n      let similarityRel = relData['similarityRel'];\r\n      // let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n\r\n        let sourceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n\r\n        let idN = \"similarityRel\" + sourceId + \"_\" + targetId;\r\n\r\n        let classN = \"similarityRel source\" + sourceId + \" target\" + targetId;\r\n        let sourceNode = nodeData.find(function (d) { return d['data']['id'] == sourceId });\r\n        let targetNode = nodeData.find(function (d) { return d['data']['id'] == targetId });\r\n        if (sourceNode['x'] > targetNode['x']) {\r\n          let tp = sourceNode;\r\n          sourceNode = targetNode;\r\n          targetNode = tp;\r\n        }\r\n        const path = d3.path();\r\n\r\n        let startX = sourceNode['y'];\r\n        let endX = targetNode['y'];\r\n        let startY = sourceNode['x'];\r\n        let endY = targetNode['x'];\r\n        let midX = (startX + endX) / 2;\r\n        let midY = (startY + endY) / 2;\r\n        let cnx = (startX > endX) ? (startX + 100 + 0.5 * (endY - startY)) : (endX + 100 + 0.5 * (endY - startY));\r\n\r\n        path.moveTo(startX, startY);\r\n        path.lineTo(cnx, startY);\r\n        path.lineTo(cnx, endY);\r\n        path.lineTo(endX, endY);\r\n        _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"0\", idN, classN);\r\n\r\n\r\n      };\r\n    },\r\n    draweditData() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let width = this.$refs.editData.offsetWidth - margin.left - margin.right - 60;\r\n      let height = this.$refs.editData.offsetHeight - margin.top - margin.bottom;\r\n      d3.select(\"#editData\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#editData\").append(\"svg\")\r\n        .attr(\"id\", \"editEnt\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n      let entG = svg.append(\"g\").attr(\"id\", \"entG\").attr(\"width\", width).attr(\"height\", height);\r\n      let sonG = svg.append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", width).attr(\"height\", height).attr(\"transform\", \"translate(1,320)\");\r\n      // _this.entG = entG;\r\n      // _this.sonG = sonG;\r\n      _this.drawEntity(_this.data[0]);\r\n      _this.drawSonLine(_this.data[1]);\r\n    },\r\n    drawSonLine(data) {\r\n      const _this = this;\r\n      let psvg = d3.select(\"#sonG\");\r\n      let w = psvg.attr(\"width\") - 1;\r\n      let h = 35;\r\n      psvg.remove();\r\n      let svg = d3.select(\"#editEnt\").append(\"g\").attr(\"id\", \"sonG\").attr(\"width\", w + 1).attr(\"height\", h + 2).attr(\"transform\", \"translate(1,280)\");\r\n      let color_linear = _this.importanceColor_linear;\r\n      let compute_color = _this.importanceCompute_color;\r\n      let oData = _this.data;\r\n      _this.entLineWidth = w;\r\n      // if (sonList.length > 0) {\r\n      svg.selectAll().remove();\r\n      svg.append(\"line\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", h / 2)\r\n        .attr(\"x2\", w)\r\n        .attr(\"y2\", h / 2)\r\n        .attr(\"stroke\", \"rgb(200,200,200)\")\r\n        .attr(\"stroke-width\", \"5px\");\r\n\r\n      let totalSonDuration = 0;\r\n      let dataIndex = oData.map(item => item.id).indexOf(data['id']);\r\n      let startIndex = ((dataIndex - 2) > 0) ? (dataIndex - 2) : (0);\r\n      let endIndex = ((dataIndex + 1) < oData.length) ? (dataIndex + 2) : (oData.length - 1);\r\n\r\n      let dataLi = tools.deepClone(oData).splice(startIndex, endIndex - startIndex + 1);\r\n      // let data = sonList;\r\n      for (let i = 0; i < dataLi.length; i++) {\r\n        let curEnt = oData.find(function (d) { return d['id'] == dataLi[i]['id'] });\r\n        let time = tools.time2seconds(curEnt['time'][0]);\r\n        let endTime = tools.time2seconds(curEnt['time'][1]);\r\n        totalSonDuration += endTime - time;\r\n      }\r\n      _this.totalSonDuration = totalSonDuration;\r\n      let cxLinear = d3.scaleLinear([0, totalSonDuration], [0, w]);\r\n      let DivisionDataList = [];\r\n      // let colorIndex = 0;\r\n      let prex = 0;\r\n      for (let i = 0; i < dataLi.length; i++) {\r\n        let curEnt = oData.find(function (d) { return d['id'] == dataLi[i]['id'] });\r\n        let temp = tools.deepClone(curEnt);\r\n        if (DivisionDataList.length != 0) {\r\n          DivisionDataList[DivisionDataList.length - 1]['nextId'] = temp['id'];\r\n          temp['preId'] = DivisionDataList[DivisionDataList.length - 1]['id'];\r\n        }\r\n        else { temp['preId'] = \"-1\"; }\r\n        DivisionDataList.push(temp);\r\n        let time = tools.time2seconds(curEnt['time'][0]);\r\n        let endTime = tools.time2seconds(curEnt['time'][1]);\r\n        let curEntDur = endTime - time;\r\n        let cx = prex;\r\n        let endx = prex + cxLinear(curEntDur);\r\n        let importanceValue = curEnt['attribute']['importance'];\r\n        let entColor = compute_color(color_linear(importanceValue));\r\n        if (i != 0) {\r\n          _this.drawRect(svg, cx - 2, 0, 5, h, h / 2, \"division_\" + curEnt['id'], \"entdivisionLine\", \"rgb(0,250,250)\", 50, '', 0);\r\n        }\r\n        if (dataLi[i]['id'] == data['id']) _this.drawRect(svg, cx, 0, endx - cx-2, h, 1, \"editEnt_\" + curEnt['id'], \"editEnt\", entColor, 1, \"rgba(255,255,255,1)\", 1)//color[_this.colorMap[son['id']]], 5, 0.1)\r\n        else _this.drawRect(svg, cx, 0, endx - cx-2, h, 1, \"editEnt_\" + curEnt['id'], \"editEnt\", entColor, 1, \"rgba(255,255,255,1)\", 3)//color[_this.colorMap[son['id']]], 5, 0.1)\r\n        prex = endx;\r\n      }\r\n      DivisionDataList[DivisionDataList.length - 1]['nextId'] = \"-1\";\r\n      _this.entDivisionDataList = DivisionDataList;\r\n    },\r\n    drawEntityOri(data) {\r\n      const _this = this;\r\n      let psvg = d3.select(\"#entG\");\r\n      let w = psvg.attr(\"width\");\r\n      let h = psvg.attr(\"height\");\r\n      psvg.remove();\r\n      let svg = d3.select(\"#editEnt\").append(\"g\").attr(\"id\", \"entG\").attr(\"width\", w).attr(\"height\", h);\r\n      let color_linear = _this.importanceColor_linear;\r\n      let compute_color = _this.importanceCompute_color;\r\n      let totalDurationValue = data['totalDuration'];\r\n      let rScale = _this.totalDurationScale_linear;\r\n      let r = rScale(totalDurationValue);\r\n      let oData = _this.data;\r\n      let x = svg.attr(\"width\") / 2;\r\n      let y = 120;\r\n      let importanceValue = data['attribute']['importance'];\r\n      let relevanceValue = data['attribute']['relevance'];\r\n      svg.selectAll().remove();\r\n\r\n      if (data['type'] == '1') {\r\n        let area = tools.calcTriangle(x, y, r);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\");\r\n      }\r\n      else {\r\n\r\n        let cy = y;\r\n        let totalDuration = _this.totalDuration;\r\n        let timeLineScale_linear = d3.scaleLinear([0, totalDuration], [x - r * Math.sqrt(3) / 2, x + r * Math.sqrt(3) / 2])\r\n        let timeLineHighScale_linear = d3.scaleLinear([0, _this.maxDDuration], [0, r * (1 + Math.sqrt(3) / 2)])\r\n        let circleColor = compute_color(color_linear(importanceValue));\r\n        _this.drawCircle(svg, x, cy, r, circleColor, data, 1, \"entCircle\", \"entCircle_\" + data['id']);\r\n\r\n        r = r * Math.sqrt(3) / 2;\r\n        y += r / 2;\r\n        let path = d3.path();\r\n\r\n\r\n        path.moveTo(x - r, y);\r\n        let lineLi = [data['time']];\r\n        let linePoint = [{ 'id': data['id'], 'time': data['time'], 'x': 0, 'y': 0 }];\r\n        for (let srel in data[\"similarityRel\"]) {\r\n          let cdata = oData.find(function (d) { return d['id'] == data[\"similarityRel\"][srel] })\r\n          lineLi.push(cdata['time'])\r\n          linePoint.push({ 'id': cdata['id'], 'time': cdata['time'], 'x': 0, 'y': 0 })\r\n        }\r\n        const sortmt = (a, b) => {\r\n          return tools.time2seconds(a[0]) - tools.time2seconds(b[0]);\r\n        }\r\n        const sortlp = (a, b) => {\r\n          return tools.time2seconds(a['time'][0]) - tools.time2seconds(b['time'][0]);\r\n        }\r\n        lineLi = lineLi.sort(sortmt);\r\n        linePoint = linePoint.sort(sortlp);\r\n        let lineData = [[x - r, y]];\r\n        for (let t = 0; t < lineLi.length; t++) {\r\n          let startT = lineLi[t][0];\r\n          let endT = lineLi[t][1];\r\n          let startS = tools.time2seconds(startT);\r\n          let endS = tools.time2seconds(endT);\r\n          let duration = endS - startS;\r\n\r\n          let startx = timeLineScale_linear((startS - duration * 10));\r\n          let endx = timeLineScale_linear((endS + duration * 10));\r\n\r\n          let startyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          let startyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          let endyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          let endyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          let yz = y - timeLineHighScale_linear((duration));\r\n          let midx = timeLineScale_linear((endS + startS) / 2);\r\n          linePoint[t]['x'] = midx;\r\n          linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n          let y1 = y;\r\n          if (startx < (lineData[lineData.length - 1][0])) {\r\n            if (t > 0) {\r\n              lineData.splice(lineData.length - 3, 3);\r\n              startx = (lineData[lineData.length - 1][0] + midx) / 2;\r\n              y1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n              startyf = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n              startyf1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n            }\r\n          }\r\n          let startx1 = startx + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          let endx1 = endx - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          let startx2 = startx1 + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          let endx2 = endx1 - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          if (endx > (r + x)) endx = r + x;\r\n          if (startx1 < (lineData[lineData.length - 1][0])) startx1 = lineData[lineData.length - 1][0];\r\n          if (endx1 > (r + x)) endx1 = r + x;\r\n          if (startx2 < (lineData[lineData.length - 1][0])) startx2 = lineData[lineData.length - 1][0];\r\n          if (endx2 > (r + x)) endx2 = r + x;\r\n          lineData.push([startx, y1], [startx1, startyf1], [startx2, startyf], [midx, yz], [endx2, endyf], [endx1, endyf1], [endx, y])\r\n        }\r\n        lineData.push([x + r, y])\r\n        let curve_generator = d3.line()\r\n          .x((d) => d[0])\r\n          .y((d) => {\r\n            let h = Math.sqrt(Math.pow(r, 2) - Math.pow((d[0] - (x - r)), 2));\r\n            if ((y - d[1]) > (h + r * Math.sqrt(3) / 2))\r\n              return y - (h + r * Math.sqrt(3) / 2) + 2;\r\n            return d[1];\r\n          })\r\n          .curve(d3.curveBasis)\r\n        _this.drawTimeLine(svg, curve_generator(lineData), \"white\", 2, '0', 'sonLine ', 'sonLine ');\r\n\r\n\r\n        for (let p = 0; p < linePoint.length; p++) {\r\n          _this.drawCircle(svg, linePoint[p]['x'], linePoint[p]['y'], 5, \"red\", linePoint[p], 0, \"linePoint\", \"linePoint_\" + linePoint[p]['id']);\r\n        }\r\n\r\n        // \"1\": \"rgb(145, 204, 117)\",\r\n        //   \"2\": \"rgb(84, 112, 198)\",\r\n        //   \"3\": \"rgb(238, 102, 102)\",\r\n        let typeColor = {\r\n          \"1\": \"#ff9c9c\",\r\n          \"2\": \"#f4f4d0\",\r\n          \"3\": \"#6f8be0\",\r\n        };\r\n        let duration = tools.time2seconds(data['time'][0]) - tools.time2seconds(data['time'][1]);\r\n        let typeData = data['attribute']['expressions'];\r\n        let sonList = data['son'];\r\n        let typeArcScale_linear = d3.scaleLinear([0, duration], [0, Math.PI * 2]);\r\n\r\n        var typeStartR = 0//Math.PI/4;\r\n\r\n        var typeStepR = Math.PI / 1;\r\n\r\n        if (sonList.length > 0) {\r\n          for (let i in typeData) {\r\n            let color = typeColor[i];\r\n            let typeDurition = typeData[i];\r\n            let totalTypeSeconds = 0;\r\n            for (let d in typeDurition) {\r\n              totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n            }\r\n            let typeStepR = typeArcScale_linear(totalTypeSeconds)//Math.PI/2;\r\n\r\n            let endAnglet = typeStartR + 1 * typeStepR\r\n            var dataset = { startAngle: typeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n            typeStartR = endAnglet;\r\n            var arcPath = d3.arc()\r\n              .innerRadius(r + 10)\r\n              .outerRadius(r + 25);\r\n            var pathArc = arcPath(dataset);\r\n            _this.drawArc(svg, x, y - r / 2, pathArc, color, color, 'type f' + data['id'] + \" t\" + i);\r\n          }\r\n          let sonTotal = 0;\r\n          let sonNum = 0\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n            sonTotal += sonDur;\r\n            sonNum += 1;\r\n          }\r\n          let skipArc = Math.PI / (sonNum + 2);\r\n          let timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI * 2 - skipArc * sonNum]);\r\n          let timeSonHeighLinear = d3.scaleLinear([0, sonTotal], [40, 40]);\r\n\r\n          let timeSonColor_linear = d3.scaleLinear().domain([0, sonTotal]).range([0, 1]);\r\n          let timeSonCompute_color = d3.interpolate(\"white\", circleColor);\r\n          var sonStartR = 0;//-Math.PI/2;\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n\r\n            let sonStepR = timeSonLinear(sonDur)//Math.PI/2;\r\n\r\n            let endAnglet = sonStartR + sonStepR;\r\n            var dataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n            sonStartR = endAnglet;\r\n            let color = 'blue';\r\n            var arcPath = d3.arc()\r\n              .innerRadius(r + 28)\r\n              .outerRadius(r + timeSonHeighLinear(sonDur));\r\n            var arcMidPath = d3.arc()\r\n              .innerRadius(0)\r\n              .outerRadius(r + 32);\r\n            var pathArc = arcPath(dataset);\r\n\r\n            endAnglet = sonStartR + skipArc;\r\n            var midDataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n\r\n            let jiantouPath = d3.path();\r\n            jiantouPath.arc(x, y - r / 2, r + 32, sonStartR - Math.PI / 2, endAnglet - Math.PI / 2);\r\n\r\n            sonStartR += skipArc;\r\n            var pathMidArc = arcMidPath(midDataset);\r\n            let timeSonColor = compute_color(color_linear(sonData['attribute']['importance']));\r\n            _this.drawArc(svg, x, y - r / 2, pathArc, timeSonColor, timeSonColor, 'son f' + data['id'] + \" s\" + sonList[s], '0');\r\n            if (s != sonList.length - 1) {\r\n              _this.drawTimeLine(svg, jiantouPath, \"rgb(200,200,200)\", 3, '9,5', 'midArc ', 'midArc ');\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n\r\n      }\r\n      let txts = _this.nameinput.split(\" \")\r\n      _this.drawTxt(svg, x - r - 32, y + r + 50, r * 2 + 64, txts, \"grey\");\r\n    },\r\n    drawEntity(data) {\r\n      // d3.select(\"#editEnt\").remove()\r\n    },\r\n    // drawEntity(data) {\r\n    //   const _this = this;\r\n    //   let psvg = d3.select(\"#entG\");\r\n    //   let w = psvg.attr(\"width\");\r\n    //   let h = psvg.attr(\"height\");\r\n    //   psvg.remove();\r\n    //   let svg = d3.select(\"#editEnt\").append(\"g\").attr(\"id\", \"entG\").attr(\"width\", w).attr(\"height\", h);\r\n    //   let color_linear = _this.importanceColor_linear;\r\n    //   let compute_color = _this.importanceCompute_color;\r\n    //   let totalDurationValue = data['totalDuration'];\r\n    //   let rScale = _this.totalDurationScale_linear;\r\n    //   let r = rScale(totalDurationValue);\r\n    //   let oData = _this.data;\r\n    //   let x = svg.attr(\"width\") / 2;\r\n    //   let y = 120;\r\n    //   let importanceValue = data['attribute']['importance'];\r\n    //   let relevanceValue = data['attribute']['relevance'];\r\n    //   svg.selectAll().remove();\r\n\r\n    //   if (data['type'] == '1') {\r\n    //     let area = tools.calcTriangle(x, y, r);\r\n    //     _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\");\r\n    //   }\r\n    //   else {\r\n\r\n    //     let cy = y;\r\n    //     let totalDuration = _this.totalDuration;\r\n    //     let timeLineScale_linear = d3.scaleLinear([0, totalDuration], [x - r * Math.sqrt(3) / 2, x + r * Math.sqrt(3) / 2])\r\n    //     let timeLineHighScale_linear = d3.scaleLinear([0, _this.maxDDuration], [0, r * (1 + Math.sqrt(3) / 2)])\r\n    //     let circleColor = compute_color(color_linear(importanceValue));\r\n    //     _this.drawCircle(svg, x, cy, r, circleColor, data, 1, \"entCircle\", \"entCircle_\" + data['id']);\r\n\r\n    //     r = r * Math.sqrt(3) / 2;\r\n    //     y += r / 2;\r\n    //     let path = d3.path();\r\n\r\n\r\n    //     path.moveTo(x - r, y);\r\n    //     let lineLi = [data];\r\n    //     let linePoint = [{ 'id': data['id'], 'time': data['time'], 'x': 0, 'y': 0 }];\r\n    //     let jgidL = [data['id']];\r\n    //     let similarityRelsli = [data[\"similarityRel\"]];\r\n    //     while(similarityRelsli.length>0){\r\n    //       let similarityRels = similarityRelsli[0];\r\n    //       similarityRelsli.splice(0,1);\r\n    //       let jg = 0;\r\n    //       for (let srel in similarityRels) {\r\n    //         let cdata = oData.find(function (d) { return d['id'] == similarityRels[srel] });\r\n    //         if(jgidL.indexOf(cdata['id'])==-1){\r\n    //           similarityRelsli.push(cdata[\"similarityRel\"])\r\n    //           jg=1;\r\n    //           lineLi.push(cdata)\r\n    //           jgidL.push(cdata['id'])\r\n    //           linePoint.push({ 'id': cdata['id'], 'time': cdata['time'], 'x': 0, 'y': 0 })\r\n    //         }\r\n    //       }\r\n    //       // if(jg==0){\r\n    //         // break;\r\n    //       // }\r\n    //     }\r\n        \r\n    //     const sortmt = (a, b) => {\r\n    //       return tools.time2seconds(a[0]) - tools.time2seconds(b[0]);\r\n    //     }\r\n    //     const sortlp = (a, b) => {\r\n    //       return tools.time2seconds(a['time'][0]) - tools.time2seconds(b['time'][0]);\r\n    //     }\r\n    //     console.log(lineLi);\r\n    //     lineLi = lineLi.sort(sortlp);\r\n    //     linePoint = linePoint.sort(sortlp);\r\n    //     let lineData = [[x - r * Math.sqrt(3)/2-4 , y]];\r\n    //     for (let t = 0; t < lineLi.length; t++) {\r\n    //       let startT = lineLi[t]['time'][0];\r\n    //       let duration =lineLi[t]['totalDuration']\r\n    //       // let endT = lineLi[t]['time'][1];\r\n    //       let startS = tools.time2seconds(startT);\r\n    //       let endS = startS +duration;\r\n    //       // let startx = timeLineScale_linear((startS - duration * 10));\r\n    //       // let endx = timeLineScale_linear((endS + duration * 10));\r\n    //       let limst = (x - r * Math.sqrt(3) / 2);\r\n    //       let limed = (x + r * Math.sqrt(3) / 2);\r\n    //       let startx = (limst<timeLineScale_linear((startS)))?(timeLineScale_linear((startS))):(limst);\r\n    //       let endx = (limed>timeLineScale_linear((endS)))?(timeLineScale_linear((endS))):(limed);\r\n    //       // let midx = timeLineScale_linear((endS + startS) / 2);\r\n    //       let midx = (startx+endx) / 2;\r\n    //       let ys = y;\r\n    //       let yz = y - timeLineHighScale_linear((duration));\r\n    //       linePoint[t]['x'] = midx;\r\n    //       linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n    //       // if (startx < (lineData[lineData.length - 1][0])) {\r\n    //         if (t > 0) {\r\n    //           lineData.splice(lineData.length - 1, 1);\r\n    //           midx+=t*5;\r\n    //           startx = midx-((midx-(lineData[lineData.length - 1][0] + midx) / 2))/2;\r\n    //           endx+=t*5;\r\n    //           ys = y+(y-lineData[lineData.length - 1][1])/3\r\n    //         }\r\n    //         console.log(ys)\r\n    //       // }\r\n    //       lineData.push([startx, ys],[midx, yz],[endx, y])}\r\n    //     lineData.push([x + r, y])\r\n    //     let curve_generator = d3.line()\r\n    //       .x((d) => d[0])\r\n    //       .y((d) => {\r\n    //         let h = Math.sqrt(Math.pow(r, 2) - Math.pow((d[0] - (x - r)), 2));\r\n    //         if ((y - d[1]) > (h + r * Math.sqrt(3) / 2))\r\n    //           return y - (h + r * Math.sqrt(3) / 2) + 2;\r\n    //         return d[1];\r\n    //       })\r\n    //       .curve(d3.curveBundle )\r\n    //       // .curve(d3.curveCatmullRom  )\r\n    //       // .curve(d3.curveBasis)\r\n    //     _this.drawTimeLine(svg, curve_generator(lineData), \"white\", 2, '0', 'sonLine ', 'sonLine ');\r\n\r\n\r\n    //     for (let p = 0; p < linePoint.length; p++) {\r\n    //       _this.drawCircle(svg, linePoint[p]['x'], linePoint[p]['y'], 5, \"red\", linePoint[p], 0, \"linePoint\", \"linePoint_\" + linePoint[p]['id']);\r\n    //     }\r\n\r\n    //     // \"1\": \"rgb(145, 204, 117)\",\r\n    //     //   \"2\": \"rgb(84, 112, 198)\",\r\n    //     //   \"3\": \"rgb(238, 102, 102)\",\r\n    //     let typeColor = {\r\n    //       \"1\": \"#ff9c9c\",\r\n    //       \"2\": \"#f4f4d0\",\r\n    //       \"3\": \"#6f8be0\",\r\n    //     };\r\n    //     let duration = tools.time2seconds(data['time'][0]) - tools.time2seconds(data['time'][1]);\r\n    //     let typeData = data['attribute']['expressions'];\r\n    //     let sonList = data['son'];\r\n    //     let sons = [sonList];\r\n    //     while (sons.length > 0) {\r\n    //       let curSonList = sons[0];\r\n    //       sons.splice(0, 1);\r\n    //       if (curSonList.length > 0) {\r\n    //         for (let s in curSonList) {\r\n    //           let sonData = oData.find(function (d) { return d['id'] == curSonList[s] });\r\n    //           let sonTypeData = sonData['attribute']['expressions'];\r\n\r\n    //           for (let t in sonTypeData) {\r\n    //             let typeDurition = sonTypeData[t];\r\n    //             for (let d in typeDurition) {\r\n    //                typeData[t].push(typeDurition[d])\r\n    //             }\r\n    //           }\r\n    //           sons.push(sonData['son']);\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //     var typeStartR = 0//Math.PI/4;\r\n\r\n    //     var typeStepR = Math.PI / 1;\r\n\r\n    //     if (sonList.length > 0) {\r\n    //       let typeTotalDur = 0;\r\n    //       for (let t in typeData) {\r\n    //         let typeDurition = typeData[t];\r\n    //         for (let d in typeDurition) {\r\n    //           typeTotalDur += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n    //         }\r\n    //       }\r\n    //       let typeArcScale_linear = d3.scaleLinear([0, typeTotalDur], [0, Math.PI * 2]);\r\n    //       for (let i in typeData) {\r\n    //         let color = typeColor[i];\r\n    //         let typeDurition = typeData[i];\r\n    //         let totalTypeSeconds = 0;\r\n    //         for (let d in typeDurition) {\r\n    //           totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n    //         }\r\n    //         if(totalTypeSeconds>0)\r\n    //         {let typeStepR = typeArcScale_linear(totalTypeSeconds)//Math.PI/2;\r\n\r\n    //         let endAnglet = typeStartR + 1 * typeStepR\r\n    //         var dataset = { startAngle: typeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n    //         typeStartR = endAnglet;\r\n    //         var arcPath = d3.arc()\r\n    //           .innerRadius(r + 10)\r\n    //           .outerRadius(r + 25);\r\n    //         var pathArc = arcPath(dataset);\r\n    //         _this.drawArc(svg, x, y - r / 2, pathArc, color, color, 'type f' + data['id'] + \" t\" + i);}\r\n    //       }\r\n\r\n    //       let sonTotal = 0;\r\n    //       let sonNum = 0\r\n    //       for (let s in sonList) {\r\n    //         let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n    //         let sonDur = sonData['totalDuration'];\r\n    //         sonTotal += sonDur;\r\n    //         sonNum += 1;\r\n    //       }\r\n    //       let skipArc = Math.PI / (sonNum + 2);\r\n    //       let timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI * 2 - skipArc * sonNum]);\r\n    //       let timeSonHeighLinear = d3.scaleLinear([0, sonTotal], [40, 40]);\r\n\r\n    //       let timeSonColor_linear = d3.scaleLinear().domain([0, sonTotal]).range([0, 1]);\r\n    //       let timeSonCompute_color = d3.interpolate(\"white\", circleColor);\r\n    //       var sonStartR = 0;//-Math.PI/2;\r\n    //       for (let s in sonList) {\r\n    //         let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n    //         let sonDur = sonData['totalDuration'];\r\n\r\n    //         let sonStepR = timeSonLinear(sonDur)//Math.PI/2;\r\n\r\n    //         let endAnglet = sonStartR + sonStepR;\r\n    //         var dataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n    //         sonStartR = endAnglet;\r\n    //         let color = 'blue';\r\n    //         var arcPath = d3.arc()\r\n    //           .innerRadius(r + 28)\r\n    //           .outerRadius(r + timeSonHeighLinear(sonDur));\r\n    //         var arcMidPath = d3.arc()\r\n    //           .innerRadius(0)\r\n    //           .outerRadius(r + 32);\r\n    //         var pathArc = arcPath(dataset);\r\n\r\n    //         endAnglet = sonStartR + skipArc;\r\n    //         var midDataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n\r\n    //         let jiantouPath = d3.path();\r\n    //         jiantouPath.arc(x, y - r / 2, r + 32, sonStartR - Math.PI / 2, endAnglet - Math.PI / 2);\r\n\r\n    //         sonStartR += skipArc;\r\n    //         var pathMidArc = arcMidPath(midDataset);\r\n    //         let timeSonColor = compute_color(color_linear(sonData['attribute']['importance']));\r\n    //         _this.drawArc(svg, x, y - r / 2, pathArc, timeSonColor, timeSonColor, 'son f' + data['id'] + \" s\" + sonList[s], '0');\r\n    //         if (s != sonList.length - 1) {\r\n    //           _this.drawTimeLine(svg, jiantouPath, \"rgb(200,200,200)\", 3, '9,5', 'midArc ', 'midArc ');\r\n    //         }\r\n    //       }\r\n\r\n    //     }\r\n\r\n\r\n    //   }\r\n    //   let txts = data['name'].split(\" \")\r\n    //   let tx = x - r - 30;\r\n    //   let ty = y + r +60;\r\n    //   let tw = r*2;\r\n    //   tx = x;\r\n    //   if(data['son'].length==0){\r\n    //     tx = x//-r-10;\r\n    //     ty = y+r*2;\r\n    //   }\r\n    //   if(data['id']==\"3\"){\r\n    //     tx = x-10;\r\n    //     ty = y+r*2;\r\n    //   }\r\n    //   if(data['id']==\"4\"){\r\n    //     tx = x+10;\r\n    //     ty = y+r*2;\r\n    //   }\r\n    //   // if(data['type']=='1'){\r\n    //   //   tx = x-r/2;\r\n    //   //   ty = y+r*2;\r\n    //   // }\r\n\r\n    //   _this.drawTxt(svg, tx, ty,tw , txts, \"grey\",22, `text_${data['id']}`);\r\n    //   // let txts = _this.nameinput.split(\" \")\r\n    //   // _this.drawTxt(svg, x - r - 32, y + r + 50, r * 2 + 64, txts, \"grey\");\r\n    // },\r\n    drawTxt(svg, x, y, width, txts, fill, fontsize = 12, idN) {\r\n      let tx = x;\r\n      let ty = y;\r\n      let preWidth = 0;\r\n      let preIdN = 0;\r\n      let pretext = ''\r\n      for (let t = 0; t < txts.length; t++) {\r\n        pretext +=\" \"+ txts[t];\r\n        let txt = svg.append(\"text\")\r\n          .attr(\"y\", ty)\r\n          .attr(\"x\", tx)\r\n          .attr(\"id\", `${idN}_${t}`)\r\n          .attr(\"fill\", fill)\r\n          .attr(\"font-size\", fontsize)\r\n          .style(\"text-anchor\", \"middle\")\r\n          .text(pretext)\r\n        let textWidth = document.getElementById(`${idN}_${t}`).getBBox().width;\r\n        if((textWidth>width)||(t==txts.length -1)){\r\n          pretext = '';\r\n          tx = x;\r\n          ty += 25;\r\n        }\r\n        else{\r\n          txt.remove()\r\n        }\r\n        preWidth += textWidth;\r\n      }\r\n    },\r\n    drawTxtOri1(svg, x, y, width, txts, fill,fontsize=12) {\r\n      let tx = x;\r\n      let ty = y;\r\n      for (let t = 0; t < txts.length; t++) {\r\n\r\n      let txt =   svg.append(\"text\")\r\n          .attr(\"y\", ty)\r\n          .attr(\"x\", tx)\r\n          .attr(\"fill\", fill)\r\n          .attr(\"font-size\",fontsize)\r\n          .style(\"text-anchor\", \"middle\")\r\n          .text(txts[t])\r\n        tx += txts[t].length * 14;\r\n        if (tx - x > width) {\r\n          tx = x;\r\n          ty += 25;\r\n        }\r\n      }\r\n    },\r\n    drawTxtOri(svg, x, y, width, txts, fill) {\r\n      let tx = x;\r\n      let ty = y;\r\n      for (let t = 0; t < txts.length; t++) {\r\n\r\n        svg.append(\"text\")\r\n          .attr(\"y\", ty)\r\n          .attr(\"x\", tx)\r\n          .attr(\"fill\", fill)\r\n          .text(txts[t])\r\n        tx += txts[t].length * 10;\r\n        if (tx - x > width) {\r\n          tx = x;\r\n          ty += 25;\r\n        }\r\n      }\r\n    },\r\n    drawTriangle(svg, color, points, stroke, opacity = 1) {\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", points)\r\n        .attr(\"fill\", color)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", \"15px\");\r\n    },\r\n    drawCircle(svg, x, y, r, fill, data, opacity, className = 'entCircle', idName) {\r\n      const _this = this;\r\n      const oData = _this.data\r\n      svg.append(\"circle\")\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"cx\", x)\r\n        .attr(\"cy\", y)\r\n        .attr(\"r\", r)\r\n        .attr(\"fill\", fill)\r\n        .on(\"mouseover\", function (d) {\r\n          d3.select(this).attr(\"r\", r * 1.1)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 1).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1.1)\"\r\n              })\r\n\r\n            d3.selectAll(\".basicRel\")\r\n              .attr(\"class\", function (d) {\r\n                let classN = d3.select(this).attr(\"class\");\r\n                let classNList = classN.split(\" \");\r\n                let jg = 0;\r\n                for (let i = 0; i < classNList.length - 1; i++) {\r\n                  console.log('source' + data['id'], classNList[i])\r\n                  if ('source' + data['id'] == classNList[i]) { jg = 1; }\r\n                  if ('target' + data['id'] == classNList[i]) { jg = 1; }\r\n                }\r\n                if (jg == 1) {\r\n                  classN += \" activeS\";\r\n                }\r\n                return classN;\r\n              })\r\n          }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          d3.select(this).attr(\"r\", r)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 0).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1)\"\r\n              })\r\n            d3.selectAll(\"path\")\r\n              .attr(\"class\", function (d) {\r\n                let thisSelect = d3.select(this)\r\n                let classN = thisSelect.attr(\"class\");\r\n                let classNList = classN.split(\" \")\r\n                if (classNList[classNList.length - 1] == \"activeS\") {\r\n                  classN = \"\";\r\n                  for (let i = 0; i < classNList.length - 1; i++) {\r\n                    classN += classNList[i] + \" \";\r\n                  }\r\n                }\r\n                return classN\r\n              })\r\n          }\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          d3.select(this).attr(\"r\", r);\r\n          d3.selectAll(\".f\" + data['id'])\r\n            .attr(\"transform\", function (d) {\r\n              let transformd = d3.select(this).attr(\"transform\")\r\n              return transformd.split(\" \")[0] + \" scale(1)\"\r\n            })\r\n          let thisId = this.id.split(\"_\")[1];\r\n          let thisData = oData.find(function (a) { return a['id'] == thisId })\r\n          let thisTime = thisData['time'];\r\n          _this.click_Ent(thisTime);\r\n          // console.log(thisTime,thisId,thisData)\r\n        })\r\n      // .on(\"\")\r\n    },\r\n    drawTimeLine(svg, path, stroke, width, stroke_dasharray = \"0\", idName, className) {\r\n      svg.append('path')\r\n        .attr('d', path.toString())\r\n        .attr('stroke', stroke)\r\n        .attr('class', className)\r\n        .attr('id', idName)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr('stroke-width', width)\r\n        .attr('fill', 'none')\r\n        .on('mouseover', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let idN = thisSelect.attr(\"id\");\r\n          if (classN.split(\" \")[0] == \"basicRel\") {\r\n            d3.select(this).attr(\"class\", classN + \" activeS\");\r\n          }\r\n        })\r\n        .on('mouseleave', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let classNList = classN.split(\" \")\r\n          if (classNList[classNList.length - 1] == \"activeS\") {\r\n            classN = \"\";\r\n            for (let i = 0; i < classNList.length - 1; i++) {\r\n              classN += classNList[i] + \" \";\r\n            }\r\n            d3.select(this).attr(\"class\", classN);\r\n          }\r\n        })\r\n    },\r\n    drawArc(svg, x, y, arcPath, stroke, fill, className, stroke_dasharray = \"0\", width = 3) {\r\n      svg.append(\"path\")\r\n        .attr(\"d\", arcPath)\r\n        .attr(\"class\", className)\r\n        .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\")\r\n        .attr(\"stroke\", stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"fill\", fill)\r\n    },\r\n    updata() {\r\n      \r\n    const _this = this;\r\n      let data = _this.data;\r\n      let maxDImportance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let minDImportance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let maxDRelevance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let minDRelevance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let maxDDuration = Math.max.apply(Math, data.map(function (d) { return tools.time2seconds(d['time'][1]) - tools.time2seconds(d['time'][0]); }))\r\n      let maxTotalDuration = Math.max.apply(Math, data.map(function (d) { return d['totalDuration']; }))\r\n\r\n      _this.minDImportance = minDImportance;\r\n      _this.maxDImportance = maxDImportance;\r\n      _this.minDRelevance = minDRelevance;\r\n      _this.maxDRelevance = maxDRelevance;\r\n      _this.maxDDuration = maxDDuration;\r\n      _this.maxTotalDuration = maxTotalDuration;\r\n\r\n      let currentMaxColor = _this.importanceMaxColor;\r\n      let currentMinColor = _this.importanceMinColor;\r\n      _this.importanceColor_linear = d3.scaleLinear().domain([minDImportance, maxDImportance]).range([0, 1]);\r\n      _this.importanceCompute_color = d3.interpolate(currentMinColor, currentMaxColor);\r\n      _this.relevanceScale_linear = d3.scaleLinear([minDRelevance, maxDRelevance], [20, 50])\r\n      _this.totalDurationScale_linear = d3.scaleLinear().domain([0, maxTotalDuration]).range([20, 60]);\r\n\r\n\r\n\r\n\r\n      _this.$bus.$emit(\"graphData\", _this.data);\r\n      _this.$bus.$emit(\"relData\", _this.relData);\r\n      // _this.drawtopicLine();\r\n      // _this.drawrootTree();\r\n      _this.draweditData();\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    const _this = this;\r\n    this.$nextTick(() => {\r\n      _this.getTreeData();\r\n      _this.updata();\r\n\r\n    this.$bus.$on('selectE', (val) => {\r\n     console.log(111,val);\r\n     _this.curEntId = val;\r\n    });\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this\r\n    _this.tableData.find(function (d) { return d['key'] == 'name' })['value'] = 'Computer Network';\r\n    console.log(23213)\r\n    \r\n    this.$bus.$on('importanceLinear', (val) => {\r\n      console.log(val)\r\n      _this.importanceLinear = val;\r\n    });\r\n\r\n    \r\n    // disabled in the online demo\r\n    // this.$bus.$on('entData', (val) => {\r\n    //   _this.data = val;\r\n    // });\r\n    // this.$bus.$on('relData', (val) => {\r\n    //   _this.relData = val;\r\n    // });\r\n  },\r\n  // beforeDestroy() {\r\n  //   clearInterval(this.moveTimer);\r\n  // },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}