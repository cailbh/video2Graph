{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\VideoPlay\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\VideoPlay\\index.vue","mtime":1689583867191},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\css-loader\\dist\\cjs.js","mtime":1688115046373},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1688115047093},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\postcss-loader\\src\\index.js","mtime":1688115046643},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm0tdmlkZW8gew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgYmFja2dyb3VuZDogIzAwMDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICB9DQogIC51LXBsYXkgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IDA7DQogICAgcmlnaHQ6IDA7DQogICAgYm90dG9tOiAwOw0KICAgIGxlZnQ6IDA7DQogICAgbWFyZ2luOiBhdXRvOw0KICAgIGZpbGw6IG5vbmU7DQogICAgY29sb3I6ICNGRkY7DQogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQogICAgb3BhY2l0eTogMC43Ow0KICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzOw0KICB9DQogIC51LXBsYXkgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IDA7DQogICAgcmlnaHQ6IDA7DQogICAgYm90dG9tOiAwOw0KICAgIGxlZnQ6IDA7DQogICAgbWFyZ2luOiBhdXRvOw0KICAgIGZpbGw6IG5vbmU7DQogICAgY29sb3I6ICNGRkY7DQogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQogICAgb3BhY2l0eTogMC43Ow0KICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzOw0KICB9DQogIC5oaWRkZW4gew0KICAgIGRpc3BsYXk6IG5vbmU7DQogIH0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/VideoPlay","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"m-video\" :style=\"`width: ${width}px; height: ${height}px;`\">\r\n    <video\r\n      id=\"playVideo\"\r\n      ref=\"veo\"\r\n      :style=\"`object-fit: ${zoom};`\"\r\n      :src=\"videoUrl\"\r\n      :poster=\"videoCover\"\r\n      :width=\"width\"\r\n      :height=\"height\"\r\n      :autoplay=\"autoplay\"\r\n      :controls=\"!originPlay&&controls\"\r\n      :loop=\"loop\"\r\n      :muted=\"autoplay || muted\"\r\n      :preload=\"preload\"\r\n      @click.prevent.once=\"onPlay\">\r\n      您的浏览器不支持video标签。\r\n    </video>\r\n    <!-- <svg v-show=\"originPlay || showPlay\" :class=\"[vplay ? 'hidden' : 'u-play']\" :style=\"`width: ${playWidth}px; height: ${playWidth}px;`\" viewBox=\"0 0 24 24\">\r\n      <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M4.75 6.75C4.75 5.64543 5.64543 4.75 6.75 4.75H17.25C18.3546 4.75 19.25 5.64543 19.25 6.75V17.25C19.25 18.3546 18.3546 19.25 17.25 19.25H6.75C5.64543 19.25 4.75 18.3546 4.75 17.25V6.75Z\"></path>\r\n      <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M15.25 12L9.75 8.75V15.25L15.25 12Z\"></path>\r\n    </svg> -->\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Video',\r\n  props: {\r\n    timeDot:{\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    videoUrl: { // 视频文件url，必传，支持网络地址 https 和相对地址 require('@/assets/files/Bao.mp4')\r\n      type: String,\r\n      required: true,\r\n      default: null\r\n    },\r\n    videoCover: { // 视频封面url，支持网络地址 https 和相对地址 require('@/assets/images/Bao.jpg')\r\n      type: String,\r\n      default: null\r\n    },\r\n    width: { // 视频播放器宽度\r\n      type: Number,\r\n      default: 800\r\n    },\r\n    height: { // 视频播放器高度\r\n      type: Number,\r\n      default: 650\r\n    },\r\n    /*\r\n      由于目前在最新版的Chrome浏览器（以及所有以Chromium为内核的浏览器）中，\r\n      已不再允许自动播放音频和视频。就算你为video或audio标签设置了autoplay\r\n      属性也一样不能自动播放！\r\n      本组件解决方法：设置视频 autoplay 时，自动将视频设置为静音 muted: true 即可实现自\r\n      动播放，然后用户可以使用控制栏开启声音，类似某宝商品自动播放的宣传视频逻辑\r\n    */\r\n    autoplay: { // 视频就绪后是否马上播放\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    controls: { // 是否向用户显示控件，比如进度条，全屏\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    loop: { // 视频播放完成后，是否循环播放\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    muted: { // 是否静音\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    preload: { // 是否在页面加载后载入视频，如果设置了autoplay属性，则preload将被忽略；\r\n      type: String,\r\n      default: 'auto' // auto:一旦页面加载，则开始加载视频; metadata:当页面加载后仅加载视频的元数据 none:页面加载后不应加载视频\r\n    },\r\n    showPlay: { // 播放暂停时是否显示播放器中间的暂停图标\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    playWidth: { // 中间播放暂停按钮的边长\r\n      type: Number,\r\n      default: 96\r\n    },\r\n    zoom: { // video的poster默认图片和视频内容缩放规则\r\n      type: String,\r\n      default: 'none' // none:(默认)保存原有内容，不进行缩放; fill:不保持原有比例，内容拉伸填充整个内容容器; contain:保存原有比例，内容以包含方式缩放; cover:保存原有比例，内容以覆盖方式缩放\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      originPlay: true,\r\n      vplay: false\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.showPlay) {\r\n      this.$refs.veo.addEventListener('pause', this.onPause)\r\n      this.$refs.veo.addEventListener('playing', this.onPlaying);\r\n      this.$refs.veo.addEventListener('timeupdate', this.timeupdate)\r\n    }\r\n    if (this.autoplay) {\r\n      this.vplay = true\r\n      this.originPlay = false\r\n    }\r\n    // console.log(this.$refs.veo.currentTime)\r\n    // this.$refs.veo.currentTime = 100;\r\n    // 自定义设置播放速度\r\n    // this.$refs.veo.playbackRate = 2\r\n  },\r\n  watch:{\r\n    timeDot(val) {\r\n      this.$refs.veo.currentTime = val;\r\n    }\r\n  },\r\n  methods: {\r\n    onPlay () {\r\n      if (!this.autoplay) {\r\n        this.vplay = true\r\n        this.originPlay = false\r\n        this.$refs.veo.play()\r\n      } else {\r\n        this.$refs.veo.pause()\r\n      }\r\n    },\r\n    onPause () {\r\n      this.vplay = false\r\n      this.$once('hook:beforeDestroy', function () {\r\n        removeEventListener('pause', this.onPause)\r\n      })\r\n    },\r\n    onPlaying () {\r\n      this.vplay = true\r\n      // 自动清理自己，避免内存泄漏\r\n      this.$once('hook:beforeDestroy', function () {\r\n        removeEventListener('playing', this.onPlaying)\r\n      })\r\n    },\r\n    timeupdate(){\r\n      let time = this.$refs.veo.currentTime\r\n      this.$emit(\"videoTime\", time);\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.m-video {\r\n  display: inline-block;\r\n  position: relative;\r\n  background: #000;\r\n  cursor: pointer;\r\n  }\r\n  .u-play {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    fill: none;\r\n    color: #FFF;\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n    transition: opacity .3s;\r\n  }\r\n  .u-play {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    fill: none;\r\n    color: #FFF;\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n    transition: opacity .3s;\r\n  }\r\n  .hidden {\r\n    display: none;\r\n  }\r\n</style>\r\n\r\n"]}]}