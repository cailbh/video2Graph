{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Graph\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\Graph\\index.vue","mtime":1705379304967},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"index.vue","sourceRoot":"src/components/Graph","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"graph\" ref=\"graphDiv\" >\r\n    <!-- <div class=\"panelHead\">ConceptMap</div> -->\r\n    <div id=\"loadLoadingPanel\" class=\"\" v-loading=\"loadLoading\" v-show=\"loadLoading\">\r\n    </div>    \r\n    <div id=\"graphTimeAxisPanel\" class=\"\">\r\n    </div>\r\n    <div id=\"editConfirm\" v-show=\"editConfirmShow\" @click=\"editConfirm\">\r\n      <img class=\"editConfirm\" :src=\"editConfirmUrl\" @click=\"editConfirm\">\r\n    </div>\r\n    <div id=\"graphPanel\" class=\"panelBody\">\r\n    </div>\r\n    <!-- <div id=\"moveLeft\" ref=\"moveGraphLeft\"></div>\r\n                    <div id=\"moveRight\" ref=\"moveGraphRight\"></div> -->\r\n    <div id=\"assistGraphPanel\" class=\"panel\">\r\n      <div class=\"panelHead\">SupportPanel</div>\r\n      <div id=\"slidesBack\" :src=\"slidesUpUrl\"  v-show=\"showIMG\"></div>\r\n      <img id=\"slidesUp\" :src=\"slidesUpUrl\"  v-show=\"showIMG\">\r\n      <img id=\"slidesDown\" :src=\"slidesDownUrl\" v-show=\"showIMG\">\r\n    </div>\r\n\r\n    <div v-show=\"editDivShow\" ref=\"editDiv\" id=\"editDiv\" class=\"panel\">\r\n      <div id=\"editAdd\" @click=\"addNode\">\r\n        <img class=\"editIcons1\" :src=\"editAddUrl\" @click=\"addNode\">\r\n        Add sibling\r\n      </div>\r\n      <div id=\"editAddN\" @click=\"addNodeN\">\r\n        <img class=\"editIcons2\" :src=\"editAddNUrl\" @click=\"addNodeN\">\r\n        Add in next level\r\n      </div>\r\n      <div id=\"editDel\" @click=\"delNode\">\r\n        <img class=\"editIcons editDelIcons\" :src=\"editDelUrl\" @click=\"delNode\">\r\n        Delete\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"tipDiv\">\r\n      <img class=\"tip\" :src=\"tipUrl\">\r\n    </div>\r\n    <div id=\"zoomInDiv\" @click=\"zoomInLayoutClk\">\r\n    </div>\r\n    <div id=\"zoomOutDiv\" @click=\"zoomOutLayoutClk\">\r\n      <img class=\"icons\" :src=\"zoomOutUrl\">\r\n    </div>\r\n    <div id=\"editToolDiv\" @click=\"editToolClk\">\r\n      <img class=\"icons\" :src=\"editToolUrl\">\r\n    </div>\r\n    <div id=\"VideoEditPanel\" ref=\"VideoEditPanel\" class=\"\" v-show=\"VideoEditPanelShow\">\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { Loading } from 'element-ui'\r\nimport { onMounted, ref } from 'vue';\r\nimport domtoimage from 'dom-to-image';\r\nimport TestJson from \"@/assets/json/case1_1_fin.json\";\r\nimport ImgMapJson from \"@/assets/Case1-Slides/imgMap.json\";\r\nimport TestRelJson from \"@/assets/json/case1_1_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nimport ocrad from \"@/utils/ocrad.js\";\r\nimport {createWorker} from \"@/utils/tesseract.min.js\";\r\nimport Tesseract from '@/utils/tesseract.min.js';\r\n// let worker= createWorker({\r\n//     // langPath:\"@/assets/data\"\r\n//     workerPath: '/uti/worker.min.js',\r\n//     // corePath: './tesseract-core.wasm.js',\r\n//     // langPath: 'D:/Cailibuhong/video2Graph/video2Graph/src/utils/tesseract'\r\n//   });;\r\n// console.log(worker)\r\n// worker.load()\r\n// worker.loadLanguage('eng')\r\n// worker.initialize('eng')\r\nexport default {\r\n  props: [\"videoTime\"],\r\n  data() {\r\n    return {\r\n      data: TestJson,  //test in the online demo\r\n      editConfirmShow:false,\r\n      showIMG:true,\r\n      gData: \"TestJson\",\r\n      imgMap:ImgMapJson,\r\n      relData: TestRelJson, //test in the online demo\r\n      slidesUpUrl:require(\"@/assets/Case1-Slides/0.00.png\"),\r\n      slidesDownUrl:require(\"@/assets/Case1-Slides/0.08.png\"),\r\n      assistGTransformX: -200,\r\n      assistGTransformY: -200,\r\n      recognizeText:\"\",\r\n      loadLoading: false,\r\n      drawEntityLocation: [],\r\n      VideoEditPanelShow:false,\r\n      showEntityList: [],\r\n      switchL: [],\r\n      overEntityId: '',\r\n      overTargetEntityId: '',\r\n      showEntityRelIdList: [],\r\n      showEntityRelIdOverState: '',\r\n      rootEntityList: [],\r\n      rootSvg: null,\r\n      TimeAxisSvg: null,\r\n      groupsSvg: null,\r\n      arcG: null,\r\n      curEntId: '',\r\n      insertEntId: '',\r\n      editDivShow: false,\r\n      minDImportance: 0,\r\n      maxDImportance: 0,\r\n      minDRelevance: 0,\r\n      maxDRelevance: 0,\r\n      maxDDuration: 0,\r\n      timeAxisX: 0,\r\n      timeAxisW: 200,\r\n      timeAxisDropFlag: 0,\r\n      timeAxisDownX: 0,\r\n      timeAxisDownW: 60,\r\n      maxTotalDuration: 0,\r\n      videoDuration: 668,\r\n      totalDuration: 1000,\r\n      importanceColor_linear: null,\r\n      importanceCompute_color: null,\r\n      relevanceScale_linear: null,\r\n      totalDurationScale_linear: null,\r\n      sumTotalDuration: 0,\r\n      // importanceMinColor: \"rgb(1, 164, 183)\",\r\n      // importanceMaxColor: \"rgb(106, 52, 127)\",\r\n      zoomInUrl: require(\"@/assets/img/zoomIn.png\"),\r\n      zoomOutUrl: require(\"@/assets/img/zoomOut.png\"),\r\n      editToolUrl: require(\"@/assets/img/edit.png\"),\r\n      tipUrl: require(\"@/assets/img/tip.png\"),\r\n      editAddUrl: require(\"@/assets/img/edit_Add.png\"),\r\n      editAddNUrl: require(\"@/assets/img/edit_AddN.png\"),\r\n      editDelUrl: require(\"@/assets/img/edit_Delete.png\"),\r\n      editConfirmUrl: require(\"@/assets/img/已看.png\"),\r\n      layoutShow: 2,\r\n      graphGTransformK: 1,\r\n      graphGTransformX: 10,\r\n      graphGTransformY: 100,\r\n      graphGMoveX: 10,\r\n      graphSvgScale: 1,\r\n      moveTimer: null,\r\n      moveFlag: false,\r\n      importanceMinColor: \"rgb(203, 230, 209)\",\r\n      importanceMaxColor: \"rgb(22, 144, 207)\",\r\n      stepX: 150,\r\n      stepY: 100,\r\n      btnRel: false,\r\n      btnSim: false,\r\n      btnAso: false,\r\n      btnEdi: false,\r\n      circleInterval: 55,\r\n      width: 0,\r\n      height: 0,\r\n      curToolState: 'unEdit',\r\n      margin: { top: 80, right: 20, bottom: 0, left: 20 },\r\n      color: [\r\n        \"rgb(255,60,60)\",\r\n        \"rgb(0, 178, 171)\",\r\n        // \"rgb(255,83,255)\",\r\n        \"rgb(235,135,162)\",\r\n        \"rgb(255,178,101)\",\r\n        \"rgb(63,151,134)\",\r\n        \"rgb(83,255,255)\",\r\n        \"rgb(0,122,244)\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      mcolor: [\r\n        \"rgb(125, 66, 206)\",\r\n        \"rgb(248, 134, 124)\",\r\n        \"rgb(50, 198, 191)\",\r\n        \"rgb(135, 126, 253)\",\r\n        \"rgb(198, 121, 123)\",\r\n        \"rgb(252, 177, 49)\",\r\n        \"rgb(112, 202, 229)\",\r\n      ],\r\n      // mcolor: [\r\n      //   \"rgb(91, 107, 255)\",\r\n      //   \"rgb(0, 178, 171)\",\r\n      //   // \"rgb(6, 214, 160)\",\r\n      //   \"rgb(255, 120, 90)\",\r\n      //   \"rgb(125, 98, 211)\",\r\n      //   \"rgb(255, 113, 212)\",\r\n      //   \"rgb(112, 214, 255)\",\r\n      //   \"rgb(255, 159, 28)\",\r\n      //   \"rgb(255, 77, 109)\",\r\n      // ],\r\n      mDarkcolor: [\r\n        \"rgb(95, 39, 179)\",\r\n        \"rgb(221, 83, 72)\",\r\n        \"rgb(0, 158, 148)\",\r\n        \"rgb(93, 88, 202)\",\r\n        \"rgb(180, 72, 79)\",\r\n        \"rgb(202, 134, 32)\",\r\n        \"rgb(46, 174, 202)\",\r\n      ],\r\n      mLigntcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n      editVideoJage:false,\r\n      editVideoSP:[],\r\n      editVideoEP:[],\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    switchL: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.btnRel = val[0];\r\n        this.btnSim = val[1];\r\n        this.btnAso = val[2];\r\n        this.btnEdi = val[3];\r\n        this.updataRel()\r\n      }\r\n    },\r\n    recognizeText(val){\r\n      const _this =this;\r\n      _this.$bus.$emit(\"recognizeText\", [1,val]);\r\n    },\r\n    timeAxisX(val) {\r\n      const _this = this;\r\n      _this.updataTimeAxisDur(_this.TimeAxisSvg, _this.timeAxisX, _this.timeAxisW);\r\n    },\r\n    curEntId(val) {\r\n      const _this = this;\r\n      _this.overEntityId = val;\r\n      console.log(val)\r\n      _this.$bus.$emit(\"selectE\", val);\r\n      let entityLocationData = _this.drawEntityLocation;\r\n\r\n      let relData = _this.relData;\r\n      let showJageData = _this.showEntityList;\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n        let sorceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          let trnId = '-1';\r\n          if (sorceId == parseInt(val)) {\r\n            trnId = targetId;\r\n          }\r\n          else if (targetId == parseInt(val)) {\r\n            trnId = sorceId;\r\n          }\r\n\r\n          // if (trnId != '-1') {\r\n          //   let curEnt = entityLocationData.find(function (d) { return parseInt(d['id']) == trnId });\r\n          //   _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r']) + 150;\r\n          //   _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r']) + 300;\r\n          //   _this.updataAssistGraphPanel();\r\n          // }\r\n        }\r\n\r\n      };\r\n      let similarityRel = relData['similarityRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n        let sorceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          let trnId = '-1';\r\n          if (sorceId == parseInt(val)) {\r\n            trnId = targetId;\r\n          }\r\n          else if (targetId == parseInt(val)) {\r\n            trnId = sorceId;\r\n          }\r\n          // if (trnId != '-1') {\r\n          //   let curEnt = entityLocationData.find(function (d) { return parseInt(d['id']) == trnId });\r\n          //   _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r']) + 150;\r\n          //   _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r']) + 300;\r\n          //   _this.updataAssistGraphPanel();\r\n          // }\r\n        }\r\n\r\n      };\r\n\r\n\r\n    },\r\n    overEntityId(val) {\r\n      const _this = this;\r\n\r\n      _this.$bus.$emit(\"overEntityId\", val);\r\n      let relList = [];\r\n      let relRootList = [];\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let basicRel = relData['basicRel'];\r\n      d3.selectAll('.timeText').attr(\"opacity\", 0)\r\n      d3.selectAll('.timeAxisEnt').attr(\"stroke-width\", 0).attr(\"opacity\", 0.4).attr(\"stroke\", function () {\r\n        let cid = d3.select(this).attr(\"id\").split(\"_\")[1];\r\n        let nd = oData.find(function (d) { return d['id'] == cid });\r\n        return nd['colorD']\r\n      });\r\n      for (let re = 0; re < basicRel.length; re++) {\r\n\r\n        let sorceId = basicRel[re][0];\r\n        let targetId = basicRel[re][1];\r\n        let cNode = '';\r\n        if (sorceId == val) {\r\n          cNode = oData.find(function (d) { return d['id'] == targetId });\r\n          relList.push(targetId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n\r\n        if (targetId == val) {\r\n          cNode = oData.find(function (d) { return d['id'] == sorceId });\r\n          relList.push(sorceId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n      };\r\n      relList.forEach((self, indx, arr) => {\r\n\r\n        d3.select(`#timeAxisEnt_${self}`).attr(\"stroke\", 'white').attr(\"stroke-width\", 2).attr(\"opacity\", 1);\r\n        d3.select(`#timeText_${self}_0`).attr(\"opacity\", 1);\r\n      })\r\n      d3.select(`#timeAxisEnt_${val}`).attr(\"stroke-width\", 2).attr(\"opacity\", 1);\r\n      d3.select(`#timeText_${val}_0`).attr(\"opacity\", 1);\r\n    },\r\n    showEntityRelIdList(val) {\r\n      this.updataRel();\r\n    },\r\n    groupsSvg: {\r\n      deep: true,\r\n      handler() {\r\n        this.updataAssistGraphPanel();\r\n      }\r\n    },\r\n    gData(val) {\r\n    },\r\n    layoutShow(val) {\r\n      const _this = this;\r\n      let showEntityList = tools.deepClone(_this.data);\r\n      for (let e in showEntityList) {\r\n        if (parseInt(showEntityList[e]['layout']) < parseInt(val))\r\n          showEntityList[e]['show'] = true;\r\n        else {\r\n          showEntityList[e]['show'] = false;\r\n        }\r\n      }\r\n      _this.showEntityList = showEntityList;\r\n      _this.updataGraph();\r\n    },\r\n    data(val) {\r\n    },\r\n    videoTime(val) {\r\n      const _this = this;\r\n      let imgMap  =_this.imgMap;\r\n      for(let i=0;i<imgMap.length-1;i++){\r\n        console.log(i,imgMap[i+1]);\r\n        let timeStart = tools.time2seconds2(imgMap[i]);\r\n        let timeEnd = tools.time2seconds2(imgMap[i+1]);\r\n        if ((val > timeStart) && (val < timeEnd)) {\r\n          let u = i-1;\r\n          let d = i+1;\r\n          if(u<0){u=0}\r\n          if(d>imgMap.length-1){d = imgMap.length-1}\r\n          _this.slidesUpUrl = require(`@/assets/Case1-Slides/${imgMap[u]}.png`);\r\n        \r\n          _this.slidesDownUrl = require(`@/assets/Case1-Slides/${imgMap[d]}.png`)\r\n        }\r\n      }\r\n      let entityLocationData = _this.drawEntityLocation;\r\n      for (let e = 0; e < entityLocationData.length; e++) {\r\n        let curD = entityLocationData[e];\r\n        let timeStart = tools.time2seconds(entityLocationData[e]['time'][0]);\r\n        let timeEnd = tools.time2seconds(entityLocationData[e]['time'][1]);\r\n        if ((val > timeStart) && (val < timeEnd)) {\r\n          let entX = entityLocationData[e]['x'];\r\n          let entY = entityLocationData[e]['y'];\r\n          let entR = entityLocationData[e]['r'];\r\n          let moveLinear = d3.scaleLinear([timeStart, timeEnd], [entX - entR, entX + entR])\r\n          _this.graphGTransformX = -moveLinear((val));\r\n        }\r\n      }\r\n    },\r\n    graphGMoveX(val) {\r\n      const _this = this;\r\n      let data = _this.drawEntityLocation;\r\n      let stjg = 0;\r\n      let enjg = 0;\r\n      let snode = '';\r\n      let enode = '';\r\n      let width = 1590\r\n      data.forEach((self, indx, arr) => {\r\n        let entx = self['x'] * _this.graphGTransformK;\r\n        let transformX = entx + val;\r\n        if ((transformX > 0) && (transformX < width)) {\r\n          stjg++;\r\n        }\r\n        else {\r\n          if ((stjg > 0) && enjg == 0) {\r\n            enode = self;\r\n            enjg = 1\r\n          }\r\n        }\r\n        if (stjg == 1) {\r\n          snode = self\r\n        }\r\n      })\r\n      let ew = enode['timeW'];\r\n      if (snode == '') {\r\n        _this.timeAxisX = 0\r\n      }\r\n      else\r\n        _this.timeAxisX = snode['timeX'];\r\n      _this.timeAxisW = enode['timeX'] - snode['timeX'] + enode['timeW']\r\n      if (ew == undefined) {\r\n        _this.timeAxisW = width - snode['timeX']\r\n      }\r\n    },\r\n    graphGTransformX(val) {\r\n      const _this = this;\r\n      let groups = _this.groupsSvg;\r\n      _this.graphGMoveX = _this.graphGTransformX;\r\n      let graphGTransformX = _this.graphGTransformX;\r\n      let graphGTransformY = _this.graphGTransformY;\r\n      let graphGTransformK = _this.graphGTransformK;\r\n      groups.attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n    }\r\n  },\r\n  methods: {\r\n    addNode() {\r\n      const _this = this;\r\n      _this.editConfirmShow = true,\r\n      _this.VideoEditPanelShow = true,\r\n      _this.editDivShow = false;\r\n      _this.$bus.$emit(\"recognizeText\", [1,\"Please select on the video\"]);\r\n      d3.select(\"#VideoEditPanel\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#VideoEditPanel\").append(\"svg\")\r\n        .attr(\"width\", \"946\")\r\n        .attr(\"height\", \"553\");\r\n      svg.on(\"mousedown\",function(d){\r\n        _this.editVideoSP = [d.layerX,d.layerY];\r\n        _this.editVideoJage = true;\r\n      }).on(\"mousemove\",function(d){\r\n        if(_this.editVideoJage){\r\n        let sP = _this.editVideoSP;\r\n        _this.editVideoEP = [d.layerX,d.layerY];\r\n        let eP =  [d.layerX,d.layerY];\r\n        let eX  = sP[0]>eP[0]?sP[0]:eP[0];\r\n        let eY  = sP[1]>eP[1]?sP[1]:eP[1];\r\n        let sX  = sP[0]<eP[0]?sP[0]:eP[0];\r\n        let sY  = sP[1]<eP[1]?sP[1]:eP[1];\r\n        _this.drawRect(svg,sX , sY, Math.abs(eX-sX), Math.abs(eY - sY), 0,0,\"rgba(0,0,0,0)\",1, \"red\", `videoRect`)}\r\n      }).on(\"mouseup\",function(d){\r\n        _this.editVideoJage = false;\r\n        \r\n        let sP = _this.editVideoSP;\r\n        let eP = [d.layerX,d.layerY];;\r\n\r\n        let eX  = sP[0]>eP[0]?sP[0]:eP[0];\r\n        let eY  = sP[1]>eP[1]?sP[1]:eP[1];\r\n        let sX  = sP[0]<eP[0]?sP[0]:eP[0];\r\n        let sY  = sP[1]<eP[1]?sP[1]:eP[1];\r\n        \r\n        var player = document.getElementById(\"playVideo\");   //获取video的Dom节点\r\n        player.setAttribute(\"crossOrigin\", \"anonymous\");  //添加srossOrigin属性，解决跨域问题\r\n        var canvas = document.createElement(\"canvas\");\r\n        \r\n        canvas.width = player.clientWidth;\r\n        canvas.height = player.clientHeight;\r\n        // canvas = canvas.getContext(\"2d\")\r\n        canvas.getContext(\"2d\").drawImage(player , 0, 0, canvas.width, canvas.height);//截\r\n        const data = canvas.getContext(\"2d\").getImageData(sX , sY,eX-sX, eY-sY);\r\n        // const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\r\n        var canvass = document.createElement(\"canvas\");\r\n        canvass.width =eX-sX;\r\n        canvass.height = eY-sY;\r\n        canvass.getContext(\"2d\").putImageData(data, 0,0)\r\n        var dataURL = canvass.toDataURL(\"image/png\");  //将图片转成base64格式\r\n        var img = document.createElement('img');\r\n        img.src = dataURL\r\n        Tesseract.recognize(\r\n          canvass,\r\n          'eng',\r\n          { logger: m => console.log(m) }\r\n        ).then((d) => {\r\n          console.log(d.data.text);\r\n          _this.$bus.$emit(\"recognizeText\", [1,d.data.text]);\r\n        })\r\n        \r\n        // document.getElementById(\"VideoEditPanel\").appendChild(img);   //显示在页面中\r\n        // var string = ocrad(canvass);\r\n        // console.log(string)\r\n        // alert(string);\r\n      })\r\n    },\r\n    // VideoEditPanelShow(val) {\r\n    //   const _this = this;\r\n    //   if (val) {\r\n    //     let width = _this.$refs.VideoEditPanel.offsetWidth;\r\n    //     let height = document.getElementById(\"VideoEditPanel\").clientHeight;\r\n    //     d3.select(\"#VideoEditPanel\").select(\"svg\").remove()\r\n    //     var svg = d3.select(\"#VideoEditPanel\").append(\"svg\")\r\n    //       .attr(\"width\", width)\r\n    //       .attr(\"height\", height);\r\n    //   }\r\n    // },\r\n    addNodeN() {\r\n      const _this = this;\r\n      _this.editDivShow = false;\r\n\r\n    },\r\n    delNode() {\r\n      const _this = this;\r\n      _this.editDivShow = false;\r\n    },\r\n    editToolClk() {\r\n      // const _this = this;\r\n      // if (_this.curToolState == 'edit') _this.curToolState = 'unEdit';\r\n      // else if (_this.curToolState != 'edit') _this.curToolState = 'edit';\r\n      // this.$emit(\"toolState\", this.curToolState);\r\n    },\r\n    editConfirm(){\r\n      console.log(\"confirm\")\r\n      const _this = this;\r\n      _this.loadLoading = true;\r\n      setTimeout(() => {\r\n        _this.loadLoading = false;\r\n        }, 2000);\r\n      _this.editDivShow = false;\r\n      _this.editConfirmShow = false;\r\n      _this.VideoEditPanelShow = false;\r\n      _this.$bus.$emit(\"recognizeText\", [0,\"\"]);\r\n    },\r\n    updataRel() {\r\n      const _this = this;\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let showJageData = _this.showEntityList;\r\n      let showRel = _this.showEntityRelIdList;\r\n      let basicRel = relData['basicRel'];\r\n\r\n      if (_this.btnRel) {\r\n        if (_this.btnSim) {\r\n          d3.selectAll('.similarityRel').attr('opacity', 1);\r\n        }\r\n        else if (!_this.btnSim) {\r\n          d3.selectAll('.similarityRel').attr('opacity', 0);\r\n        }\r\n        if (_this.btnAso) {\r\n          d3.selectAll('.basicRel').attr('opacity', 1);\r\n        }\r\n        else if (!_this.btnAso) {\r\n          d3.selectAll('.basicRel').attr('opacity', 0);\r\n        }\r\n        // d3.selectAll('.similarityRel').attr('opacity', 1);\r\n        // d3.selectAll('.basicRel').attr('opacity', 1);\r\n      }\r\n      else if (!_this.btnRel) {\r\n        d3.selectAll('.similarityRel').attr('opacity', 0);\r\n        d3.selectAll('.basicRel').attr('opacity', 0);\r\n      }\r\n      if (!_this.btnRel || !_this.btnAso) {\r\n        for (let r = 0; r < basicRel.length; r++) {\r\n          let sorceId = basicRel[r][0];\r\n          let targetId = basicRel[r][1];\r\n          let idN = \"basicRel\" + sorceId + \"_\" + targetId;\r\n          if (_this.overTargetEntityId == '') {\r\n            if ((showRel.includes(sorceId)) || (showRel.includes(targetId))) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'grey')\r\n            }\r\n            else {\r\n              d3.select(`#${idN}`).attr('opacity', 0)\r\n            }\r\n          }\r\n          else {\r\n\r\n            if ((showRel.includes(sorceId + '')) || (showRel.includes(targetId + ''))) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'grey')\r\n            }\r\n            else {\r\n              d3.select(`#${idN}`).attr('opacity', 0)\r\n            }\r\n            if ((showRel.includes(sorceId + '')) && (targetId == _this.overTargetEntityId)) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'darkslateblue')\r\n            }\r\n            else if ((showRel.includes(targetId + '')) && (sorceId == _this.overTargetEntityId)) {\r\n              d3.select(`#${idN}`).attr('opacity', 1).attr('stroke', 'darkslateblue')\r\n            }\r\n          }\r\n        };\r\n      };\r\n      \r\n      _this.updataAssistGraphPanel();\r\n    },\r\n    drawRelationshipLine(svg) {\r\n      const _this = this;\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let showJageData = _this.showEntityList;\r\n      let margin = _this.margin;\r\n      let height = svg.attr('height');\r\n      let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < basicRel.length; r++) {\r\n\r\n        let sorceId = basicRel[r][0];\r\n        let targetId = basicRel[r][1];\r\n        let idN = \"basicRel\" + sorceId + \"_\" + targetId;\r\n        let classN = \"basicRel source\" + sorceId + \" target\" + targetId;\r\n        let sorceNode = oData.find(function (d) { return d['id'] == sorceId });\r\n        let targetNode = oData.find(function (d) { return d['id'] == targetId });\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n          if (sorceNode['x'] > targetNode['x']) {\r\n            let tp = sorceNode;\r\n            sorceNode = targetNode;\r\n            targetNode = tp;\r\n          }\r\n          const path = d3.path();\r\n\r\n          let startX = sorceNode['x'];\r\n          let endX = targetNode['x'];\r\n          let midX = (startX + endX) / 2;\r\n          let flag = ((sorceNode['sonFlag']) || (targetNode['sonFlag']));\r\n          // if((targetNode['id'] == \"4\")||((sorceNode['id']==\"1\")&&(targetNode['id']==\"6\"))||((sorceNode['id']==\"2\")&&(targetNode['id']==\"7\"))||((sorceNode['id']==\"3\")&&(targetNode['id']==\"8\"))){\r\n          //   flag = true;\r\n          // }\r\n          if (targetNode['id'] == \"4\") {\r\n            flag = true;\r\n          }\r\n          // if(targetNode['id'] == \"30\"){\r\n          //   flag = true;\r\n          // }\r\n          let rsourceint = (sorceNode['sonFlag']) ? (49) : (2);\r\n          let rtargetint = (targetNode['sonFlag']) ? (49) : (2);\r\n          let startY = (flag) ? (sorceNode['y'] - sorceNode['r'] - rsourceint) : (sorceNode['y'] + sorceNode['r'] + rsourceint);\r\n          let endY = (flag) ? (targetNode['y'] - targetNode['r'] - rtargetint) : (targetNode['y'] + targetNode['r'] + rtargetint);\r\n\r\n          let cnx1 = startX - 50;\r\n          let cnx2 = endX + 50;\r\n          let midY = (startY + endY) / 2;\r\n          // if(((sorceNode['id']==\"1\")&&(targetNode['id']==\"6\"))||((sorceNode['id']==\"2\")&&(targetNode['id']==\"7\"))||((sorceNode['id']==\"3\")&&(targetNode['id']==\"8\"))){\r\n          //   midY-=140\r\n          // }\r\n          let h = (((endX - startX) / 5) > (parseInt(height) + 100)) ? (parseInt(height) + 100) : ((endX - startX) / 5);\r\n          let cny = (flag) ? (midY - h) : (midY + h);\r\n\r\n          let cny1 = cny;\r\n          let cny2 = cny;\r\n\r\n          if (((sorceNode['layout'] == 2) && (cny < 0)) || ((sorceNode['layout'] == 0) && (cny > 0))) {\r\n            cnx1 -= 250;\r\n            cny1 = cny * 1.3;\r\n          }\r\n          if (((targetNode['layout'] == 2) && (cny < 0)) || ((targetNode['layout'] == 0) && (cny > 0))) {\r\n            cnx2 += 250;\r\n            cny2 = cny * 1.3;\r\n          }\r\n          if((sorceId == '14')&&(targetId == '7')){\r\n            cny*=1.4}\r\n          // let midP = [(startP[0]+endP[0])/2,(startP[1])>(endP[1])?(startP[1]-100):(endP[1]-100)];\r\n          path.moveTo(startX, startY);\r\n          path.bezierCurveTo(midX, cny, midX, cny, endX, endY);\r\n          _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"9,9\", idN, classN);\r\n        }\r\n\r\n      };\r\n      let similarityRel = relData['similarityRel'];\r\n      // let basicRel = relData['basicRel'];\r\n      for (let r = 0; r < similarityRel.length; r++) {\r\n\r\n        let sorceId = similarityRel[r][0];\r\n        let targetId = similarityRel[r][1];\r\n\r\n        let idN = \"similarityRel\" + sorceId + \"_\" + targetId;\r\n\r\n        let classN = \"similarityRel source\" + sorceId + \" target\" + targetId;\r\n        let sorceNode = oData.find(function (d) { return d['id'] == sorceId });\r\n        let targetNode = oData.find(function (d) { return d['id'] == targetId });\r\n        let sorceJage = showJageData.find(function (d) { return d['id'] == sorceId })['show'];\r\n        let targetJage = showJageData.find(function (d) { return d['id'] == targetId })['show'];\r\n        if (sorceJage && targetJage) {\r\n\r\n          if (sorceNode['x'] > targetNode['x']) {\r\n            let tp = sorceNode;\r\n            sorceNode = targetNode;\r\n            targetNode = tp;\r\n          }\r\n          const path = d3.path();\r\n\r\n          let startX = sorceNode['x'] + sorceNode['r'] / 2;\r\n          let endX = targetNode['x'] - targetNode['r'] / 2;\r\n          let midX = (startX + endX) / 2;\r\n          let flag = ((sorceNode['sonFlag']) || (targetNode['sonFlag']));\r\n          let rsourceint = (sorceNode['sonFlag']) ? (20) : (2);\r\n          let rtargetint = (targetNode['sonFlag']) ? (20) : (2);\r\n          let startY = (flag) ? (sorceNode['y'] - sorceNode['r'] - rsourceint) : (sorceNode['y'] + sorceNode['r'] + rsourceint);\r\n          let endY = (flag) ? (targetNode['y'] - targetNode['r'] - rtargetint) : (targetNode['y'] + targetNode['r'] + rtargetint);\r\n\r\n          let midY = (startY + endY) / 2;\r\n\r\n          // let h1Scale_linear = d3.scaleLinear([0, _this.width], [(sorceNode['y']>targetNode['y'])?(sorceNode['y']*2):(targetNode['y']*2),parseInt(height)])\r\n          let h = (((endX - startX) / 14) > (parseInt(height) - 10)) ? (parseInt(height) - 10) : ((endX - startX) / 14);\r\n          let hScale_linear = d3.scaleLinear([0, _this.width / 2], [0, (h-80) / 3 * 2])\r\n          let cny = (flag) ? (midY - hScale_linear(endX)) : (midY + hScale_linear(endX));\r\n          // if (sorceNode['id'] == '7') { cny -= 20 }\r\n          if (cny < -150) {\r\n            startY = sorceNode['y'] + sorceNode['r'] + rsourceint\r\n            endY = targetNode['y'] + targetNode['r'] + rtargetint\r\n            cny = height - cny - 300;\r\n          }\r\n          if(targetId==\"5\"||sorceId==\"5\"){cny+=250}\r\n          if(targetId==\"28\"||sorceId==\"9\"){cny-=1050}\r\n          if(targetId==\"6\"||sorceId==\"6\"){cny+=150}\r\n          path.moveTo(startX, startY);\r\n          path.lineTo(startX, cny);\r\n          path.lineTo(endX, cny);\r\n          path.lineTo(endX, endY);\r\n          _this.drawTimeLine(svg, path, \"rgb(200,200,200)\", 5, \"0\", idN, classN);\r\n        }\r\n\r\n\r\n      };\r\n      _this.updataRel()\r\n    },\r\n    drawMain(svg) {\r\n      let _this = this;\r\n      let data = _this.data;\r\n      let margin = _this.margin;\r\n\r\n      let width = _this.width - margin.left - margin.right;\r\n      let height = _this.height - margin.top - margin.bottom;\r\n\r\n      let graphGTransformX = _this.graphGTransformX;\r\n      let graphGTransformY = _this.graphGTransformY;\r\n      let graphGTransformK = _this.graphGTransformK;\r\n      let axisGroups = svg.append(\"g\").attr(\"id\", \"axisGroups\").attr(\"width\", width).attr(\"height\", height)\r\n      // .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      let groups = svg.append(\"g\").attr(\"id\", \"groups\").attr(\"width\", width).attr(\"height\", height)\r\n        .attr(\"transform\", \"translate(\" + graphGTransformX + ',' + graphGTransformY + \") scale(\" + graphGTransformK + \")\");\r\n      this.groupsSvg = groups;\r\n\r\n      let backG = groups.append(\"g\").attr(\"id\", \"backG\").attr(\"width\", width).attr(\"height\", height);\r\n      let arcG = groups.append(\"g\").attr(\"id\", \"arcG\").attr(\"width\", width).attr(\"height\", height);\r\n      let timeLineG = groups.append(\"g\").attr(\"id\", \"timeLineG\").attr(\"width\", width).attr(\"height\", height);\r\n      let circleG = groups.append(\"g\").attr(\"id\", \"circleG\").attr(\"width\", width).attr(\"height\", height);\r\n\r\n      _this.arcG = arcG;\r\n      let stepX = _this.stepX;\r\n      let stepY = _this.stepY;\r\n      let interval = _this.circleInterval;\r\n\r\n\r\n      let scalePre = _this.graphSvgScale;\r\n      let stx = 0;\r\n      let sty = 0;\r\n      let stk = 1;\r\n      var graphZoom = d3.zoom()\r\n        .scaleExtent([0, 10])\r\n        .on(\"start\", (e) => {\r\n          sty = e.transform.y;\r\n          stx = e.transform.x;\r\n          stk = e.transform.k;\r\n        })\r\n        .on('zoom', (e) => {\r\n          graphGTransformX = _this.graphGTransformX + e.transform.x - stx;\r\n          graphGTransformY = _this.graphGTransformY + e.transform.y - sty;\r\n          graphGTransformK = _this.graphGTransformK + e.transform.k - stk;\r\n          _this.graphGMoveX = graphGTransformX;\r\n\r\n          groups.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        })\r\n        .on('end', (e) => {\r\n          _this.graphGTransformX = graphGTransformX;\r\n          _this.graphGTransformY = graphGTransformY;\r\n          _this.graphGTransformK = graphGTransformK;\r\n          groups.attr('transform', 'translate(' + (graphGTransformX) + ',' + (graphGTransformY) + ') scale(' + (graphGTransformK) + ')')\r\n        });\r\n\r\n\r\n      svg.call(graphZoom)\r\n      // .call(graphZoom.transform, d3.zoomIdentity.scale(1))\r\n      const path = d3.path()\r\n      path.moveTo(margin.left, margin.top)\r\n      let x = margin.left;\r\n      let prex = margin.left;\r\n      let prey = margin.top;\r\n      let prer = 0;\r\n      let preSonLen = 0;\r\n      let layoutShow = _this.layoutShow;\r\n      let sumTotalDuration = 0;\r\n      let rootIndex = -1;\r\n      for (let i = 0; i < data.length; i++) {\r\n        let lay = parseInt(data[i]['layout']);\r\n\r\n        let colors = _this.mcolor;\r\n        let colorsD = _this.mDarkcolor;\r\n        let entityLocationData = tools.deepClone(data[i]);\r\n        if (lay == 0) {\r\n          rootIndex++;\r\n        }\r\n        entityLocationData['rootIndex'] = rootIndex;\r\n        entityLocationData['color'] = colors[rootIndex % colors.length];\r\n        entityLocationData['colorD'] = colorsD[rootIndex % colorsD.length];\r\n        let timeList = data[i]['time'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        sumTotalDuration += duration;\r\n        let showEntity = _this.showEntityList.find(function (d) { return d['id'] == data[i]['id'] });\r\n        if ((showEntity['show'] == true)) {\r\n          let y = margin.top + lay * stepY\r\n          let relevanceValue = data[i]['attribute']['relevance'];\r\n          let totalDurationValue = data[i]['totalDuration'];\r\n          let rScale = _this.totalDurationScale_linear;\r\n\r\n\r\n          let r = rScale(totalDurationValue);\r\n          let stepL = r + stepX / 2 + interval / 10;\r\n          let controlP1x = prex + interval / 1;\r\n          let controlP2x = x - interval / 1;\r\n          let curLinex = x - r - interval;\r\n\r\n          let relData = _this.relData;\r\n          let oData = _this.drawEntityLocation;\r\n          let basicRel = relData['basicRel'];\r\n          let daId = data[(i)]['id'];\r\n          let jg = 0;\r\n          for (let re = 0; re < basicRel.length; re++) {\r\n\r\n            let sorceId = basicRel[re][0];\r\n            let targetId = basicRel[re][1];\r\n            let cNode = '';\r\n            if ((sorceId == daId) || (targetId == daId)) {\r\n              jg = 1;\r\n            }\r\n          };\r\n          let sonFlag = 1;\r\n          if (((i > 0) && (preSonLen == 0)) && (data[(i)]['son'].length == 0)) {\r\n            sonFlag = 0;\r\n            stepL = r + stepX / 1.2 + interval / 10;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval / 2 - interval / 1;\r\n            curLinex = r + interval / 10;\r\n          }\r\n          else if (((i > 0) && (preSonLen != 0)) && (data[(i)]['son'].length == 0)) {\r\n            sonFlag = 0;\r\n            stepL = r + stepX + interval + 30;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval / 1 - interval / 1;\r\n            curLinex = r + interval / 10;\r\n          }\r\n          else {\r\n            stepL = r + stepX + interval + 10;\r\n            x += stepL;\r\n            controlP1x = prex + interval / 1;\r\n            controlP2x = x - r - interval - interval / 1;\r\n            curLinex = r + interval;\r\n          }\r\n\r\n          if ((jg == 1) && (data[i]['type'] == 0) && (data[(i)]['son'].length == 0)) {\r\n            curLinex += r * 1.5\r\n          }\r\n          _this.drawEntity(circleG, x, y, r, data[i])\r\n          path.bezierCurveTo(controlP1x, prey, controlP2x, y, x - curLinex, y)\r\n          // path.lineTo(controlP1x, prey)\r\n          // path.lineTo(controlP2x, y)\r\n          // path.lineTo(x - curLinex, y)\r\n          path.moveTo(x + curLinex, y);\r\n          prex = x + curLinex;\r\n          prey = y;\r\n          prer = r;\r\n          preSonLen = data[(i)]['son'].length;\r\n          entityLocationData['x'] = x;\r\n          entityLocationData['y'] = y;\r\n          entityLocationData['r'] = r;\r\n        }\r\n        else {\r\n          entityLocationData['x'] = prex;\r\n          entityLocationData['y'] = prey;\r\n          entityLocationData['r'] = prer;\r\n        }\r\n        entityLocationData['sonFlag'] = (entityLocationData['son'].length > 0) ? (1) : (0);\r\n        // entityLocationData['showRel'] = false;\r\n        _this.drawEntityLocation.push(entityLocationData);\r\n      }\r\n      let entityLocationData = _this.drawEntityLocation;\r\n      let colors = _this.mcolor;\r\n      let colorIndex = 0;\r\n      let colorrootIndex = 0;\r\n\r\n      _this.sumTotalDuration = sumTotalDuration;\r\n      for (let i = 0; i < entityLocationData.length; i++) {\r\n        let x = entityLocationData[i]['x'];\r\n        let y = entityLocationData[i]['y'];\r\n        let r = entityLocationData[i]['r'];\r\n\r\n        let showEntity = _this.showEntityList.find(function (d) { return d['id'] == entityLocationData[i]['id'] });\r\n        if (entityLocationData[i]['type'] == 0 && (showEntity['show'] == true)) {\r\n          _this.drawEntityTimeAxis(circleG, entityLocationData[i]);\r\n        }\r\n        if ((entityLocationData[i]['layout'] == '0' && (entityLocationData[i]['name'] != 'Test'))) {\r\n          colorIndex = colorrootIndex;\r\n          colorrootIndex++;\r\n\r\n        }\r\n        if ((entityLocationData[i]['son'].length != 0) && (_this.showEntityList.find(function (d) { return d['id'] == entityLocationData[i]['son'][0] })['show'])) {\r\n          let maxxs = entityLocationData[i]['x'] - entityLocationData[i]['r'] - 40;\r\n          let maxys = entityLocationData[i]['y'] - entityLocationData[i]['r'] - 40;\r\n          let minxs = tools.deepClone(maxxs);\r\n          let minys = tools.deepClone(maxys);\r\n          let rectPoints = [[maxxs, maxys]];\r\n          let sons = tools.deepClone(data[i]['son']);\r\n          while ((sons.length > 0)) {\r\n            let s = sons[0];\r\n            sons.splice(0, 1);\r\n            let curson = entityLocationData.find(function (d) { return d['id'] == s; });\r\n            let curgson = curson['son'];\r\n            let curx = curson['x'] + curson['r'] * 2;\r\n            let cury = curson['y'] + curson['r'] * 2;\r\n            if (curx > maxxs) { maxxs = curx; }\r\n            // if(curson['y']<maxys)maxys = curson['y'];\r\n            if (cury < minys) minys = cury;\r\n            if (cury > maxys) maxys = cury;\r\n            for (let gs = 0; gs < curgson.length; gs++) {\r\n              sons.push(curgson[gs]);\r\n            }\r\n          }\r\n          rectPoints = [[minxs, minys], [minxs, maxys], [maxxs, maxys], [maxxs, minys]];\r\n          // _this.drawpolygon(backG, colors[colorIndex], rectPoints, \"rgb(255,255,255)\",0.3);\r\n          _this.drawRect(backG, minxs, minys, Math.abs(maxxs - minxs), Math.abs(maxys - minys), 20, 20, colors[colorIndex], 0.1, \"white\", `backRect${i}`)\r\n\r\n          colorIndex++;\r\n          colorIndex %= colors.length\r\n        }\r\n        // entityLocationData[i]['color'] = colors[colorIndex - 1];\r\n        // if ((entityLocationData[i]['layout'] == '0') && ((entityLocationData[i]['name'] == 'Test') || (entityLocationData[i]['name'] == 'Example'))) {\r\n        //   entityLocationData[i]['color'] = colors[colorIndex]\r\n        // }\r\n      }\r\n      _this.drawTimeLine(timeLineG, path, \"rgb(200,200,200)\", 5, '0', 'timeLine ', 'timeLine ');\r\n      _this.drawRelationshipLine(timeLineG);\r\n      _this.drawTimeAxis(_this.TimeAxisSvg);\r\n      _this.drawTypeRiver(_this.TimeAxisSvg);\r\n      _this.updataTimeAxisDur(_this.TimeAxisSvg, _this.timeAxisX, _this.timeAxisW);\r\n    },\r\n    updataTimeAxisDur(svg, x, width) {\r\n      const _this = this;\r\n      let margin = _this.margin;\r\n      let totalWidth = _this.width //margin.left - margin.right;\r\n      let y = 0;\r\n      let h = 200;\r\n      _this.drawRect(svg, 0, y, x, h, 3, 3, 'white', 0.3, '', \"timeAxisRect1\")\r\n      let curRect = _this.drawRect(svg, x, y - 0, width, h - 5, 3, 3, 'rgba(0,0,0,0)', 1, 'rgb(145, 180, 189)', 'winRect', 2);\r\n      // --------------------------------------\r\n      // curRect.on('mousemove', function (e) {\r\n      //   d3.select(this).attr(\"cursor\", 'pointer');\r\n      //   if (_this.timeAxisDropFlag == 1) {\r\n      //     let mx = e.clientX - _this.timeAxisDownX;\r\n      //     _this.timeAxisX = e.layerX - 450 - _this.timeAxisW / 2;\r\n      //   }\r\n      // })\r\n      // curRect.on('mousedown', function (e) {\r\n      //   _this.timeAxisDownX = e.clientX;\r\n      //   _this.timeAxisDropFlag = 1;\r\n      // })\r\n      // curRect.on('mouseup', function (e) {\r\n      //   _this.timeAxisDownX = e.clientX;\r\n      //   _this.timeAxisDropFlag = 0;\r\n      // })\r\n      // ----------------------------------------\r\n\r\n      _this.drawRect(svg, x + width, y, totalWidth - width, h, 3, 3, 'white', 0.3, '', \"timeAxisRect2\")\r\n    },\r\n    drawTypeRiver(svg) {\r\n      const _this = this;\r\n      let oriData = _this.data;\r\n      let resData = [];\r\n      let triLi = [];\r\n      let exeLi = [];\r\n      var defs = svg.append(\"defs\");\r\n\r\n      var filter = defs\r\n        .append(\"filter\")\r\n        .attr(\"id\", \"coolShadow\")\r\n        .attr(\"x\", \"-100%\")\r\n        .attr(\"y\", \"-100%\") //\r\n        .attr(\"width\", \"300%\")\r\n        .attr(\"height\", \"300%\"); //\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceGraphic\")\r\n        .attr(\"result\", \"upperLayer\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceAlpha\")\r\n        .attr(\"result\", \"enlargedAlpha\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feGaussianBlur\")\r\n        .attr(\"in\", \"enlargedAlpha\")\r\n        .attr(\"result\", \"bluredAlpha\")\r\n        .attr(\"stdDeviation\", \"3\");\r\n\r\n      filter\r\n        .append(\"feOffset\")\r\n        .attr(\"in\", \"bluredAlpha\")\r\n        .attr(\"result\", \"lowerLayer\")\r\n        .attr(\"dy\", \"1\"); //\r\n\r\n      var feMerge = filter.append(\"feMerge\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"lowerLayer\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"upperLayer\");\r\n      let total = 0\r\n      for (let i = 0; i < oriData.length; i++) {\r\n        let curEnt = oriData[i];\r\n        let tp = {}\r\n        tp['od'] = i;\r\n        tp['du'] =total;\r\n        total+=curEnt['totalDuration'];\r\n        console.log(curEnt)\r\n        if ((curEnt['type'] == \"1\")) {\r\n          triLi.push(tp);\r\n        }\r\n        if (curEnt['type'] == \"2\") {\r\n          exeLi.push(tp);\r\n        }\r\n        let typeData = curEnt[\"attribute\"][\"expressions\"];\r\n        let totalDur = 0;\r\n\r\n        for (let t in typeData) {\r\n          // let color = typeColor[i];\r\n          let typeDurition = typeData[t];\r\n          let totalTypeSeconds = 0;\r\n          for (let d in typeDurition) {\r\n            totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n          }\r\n          totalDur += totalTypeSeconds;\r\n          tp[t] = totalTypeSeconds;\r\n        }\r\n        for (let t in tp) {\r\n          if ((t != 'od')&&(t!='du')) {\r\n            tp[t] /= totalDur;\r\n            if (totalDur == 0) {\r\n              tp[t] = 0;\r\n            }\r\n          }\r\n        }\r\n        resData.push(tp)\r\n      }\r\n      let data = resData;\r\n      var stack = d3.stack()\r\n        .keys(['1', '2', '3'])\r\n        .order(d3.stackOrderInsideOut)\r\n        .offset(d3.stackOffsetWiggle);\r\n\r\n      let yRangeWidth = 70;\r\n      let w = parseInt(svg.attr(\"width\")) + 30\r\n      let xStep = (w) / oriData.length;\r\n      let xScale = d3.scaleLinear().domain([0,total]).range([0,w])\r\n      let yScale = d3.scaleLinear().domain([-1, 1]).range([0, 70]);\r\n      var area = d3.area()\r\n        .curve(d3.curveBasis)\r\n        .x(function (d) {\r\n          return 15+xScale(d.data.du)+d.data.od * 10//xStep + 15;\r\n        })\r\n        .y0(function (d) {\r\n          return 153 + yRangeWidth - yScale(d[0]);\r\n        })\r\n        .y1(function (d) {\r\n          return 153 + yRangeWidth - yScale(d[1]);\r\n        });\r\n      let stackData = stack(data)\r\n      console.log(\"stack\",resData,stackData)\r\n      let lenThreshold = 0.4;\r\n      let iconLi = {}\r\n      for (let s in stackData) {\r\n        iconLi[s] = []\r\n        for (let i in stackData[s]) {\r\n          let lenArea = stackData[s][i]\r\n          if ((lenArea[1] - lenArea[0]) > 0.4) {\r\n            iconLi[s].push([i, lenArea]);\r\n          }\r\n          for (let li in iconLi[s]) {\r\n            if (i < (iconLi[s][li][0] + 2)) {\r\n              let selectArea = iconLi[s][li][1]\r\n              if (((selectArea[1] - lenArea[1]) - (selectArea[0] - lenArea[0])) < 0.2) {\r\n                iconLi[s].splice(s, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // let areaG = svg.append(\"g\")\r\n      let typeColor = {\r\n        \"1\": \"#ff9c9c\",\r\n        \"2\": \"#f4f4d0\",\r\n        \"3\": \"#6f8be0\",\r\n      };\r\n      let colorLi = _this.mcolor;\r\n      svg.selectAll(\"path\")\r\n        .data(stackData)\r\n        .join(\"path\")\r\n        .attr(\"id\", function (d) { return d.key })\r\n        .attr(\"class\", \"river\")\r\n        .attr(\"d\", function (d) {\r\n          return area(d)\r\n        })\r\n        .attr(\"fill\", function (d, i) {\r\n          return typeColor[d.key]\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          d3.selectAll(\".river\").style(\"filter\", \"url()\")\r\n          d3.select(this).style(\"filter\", \"url(#coolShadow)\")\r\n        })\r\n\r\n      for (let t in triLi) {\r\n        let area = tools.calcTriangle((triLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n        _this.drawTxt(svg, (triLi[t]['od']) * xStep, -23, \"T\", \"white\", 0, \"middle\", 18)\r\n      }\r\n      for (let t in exeLi) {\r\n        let area = tools.calcTriangle((exeLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n        _this.drawTxt(svg, (exeLi[t]['od']) * xStep, -23, \"E\", \"white\", 0, \"middle\", 18)\r\n      }\r\n    },\r\n    drawTimeAxis(svg) {\r\n      const _this = this;\r\n      let sumTotalDuration = _this.sumTotalDuration;\r\n      let data = _this.drawEntityLocation;\r\n      let addData = tools.deepClone(_this.drawEntityLocation);\r\n      let margin = _this.margin;\r\n      let prex = margin.left;\r\n      let prey = 50;\r\n      let width = svg.attr(\"width\") -20 //margin.left - margin.right;\r\n      let height = _this.height - margin.top - margin.bottom;\r\n      let widthScale = d3.scaleLinear([0, sumTotalDuration], [0, width]);\r\n      data.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let id = self['id']\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        // console.log(timeList,tools.time2seconds(timeList[0]))\r\n        let evWidth = widthScale(duration) - 4;\r\n\r\n        let evTWidth = widthScale(totalDurationValue);\r\n        let lay = parseInt(self['layout']);\r\n        let evHight = 80 - 20 * lay;\r\n        let x = prex;\r\n        let y = prey + 20 * lay;\r\n        prex += evWidth + 4;\r\n        let cr = 3;\r\n        // if(self['type']==0){\r\n        if (1) {\r\n          if (lay == 0) {\r\n            _this.drawRect(svg, x-1, y - 59, 3, 42, 0, 0, self['color'], 0.4, 'white', `timeAxisEntBl_${indx}`, 0, 'timeAxisEntBl')\r\n\r\n            _this.drawTxt(svg, x+23, y  - 23, 10, [self['time'][0].split(\":\").splice(1).join(\":\")], self['color'], 15, `timeDurText_${id}`, 'timeDuyrText');\r\n            _this.drawRect(svg, x - 2, y - 20, evTWidth, 100, 6, 6, self['color'], 0.3, 'white', `timeAxisEntB_${indx}`, 1.5, 'timeAxisEntB')\r\n          }\r\n          _this.drawRect(svg, x, y, evWidth, evHight, 3, 3, self['color'], 0.4, self['colorD'], `timeAxisEnt_${id}`, 1.5, 'timeAxisEnt')\r\n          _this.drawTxt(svg, x + evWidth / 2, y + evHight + 20, 10, [self['name'].split(\" \").join(\" \")], \"grey\", 16, `timeText_${id}`, 'timeText');\r\n        }\r\n        else {\r\n          if (lay == 0) {\r\n            _this.drawRect(svg, x - 2, y - 20, evTWidth, 100, 6, 6, self['color'], 0.3, 'white', `timeAxisEntB_${id}`, 1.5, 'timeAxisEnt')\r\n          }\r\n          let area = [[x + cr, y + evHight - cr], [x - cr + evWidth, y + evHight - cr], [x + evWidth / 2, y]];\r\n          _this.drawTriangle(svg, self['color'], area, self['color'], 1, cr * 2,\"entE\",`entE_${data['id']}`);\r\n        }\r\n        addData[indx]['timeX'] = x;\r\n        addData[indx]['timeW'] = evWidth\r\n      })\r\n\r\n      d3.selectAll('.timeText').attr(\"opacity\", 0)\r\n      _this.drawEntityLocation = addData;\r\n    },\r\n    drawTriangle(svg, color, points, stroke, opacity = 1, strokeW = 15,classNa,idNa) {\r\n      const _this = this;\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", points)\r\n        .attr(\"fill\", color)\r\n        .attr(\"id\", idNa)\r\n        .attr(\"class\", classNa)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .on(\"mouseover\", function (d) {\r\n          // d3.select(this).attr(\"r\", r * 1.1)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          _this.overEntityId = idN\r\n          let showRel = _this.showEntityRelIdList\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel.push(parseInt(idN))\r\n            _this.showEntityRelIdOverState = 0;\r\n          }\r\n          else {\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 1).attr(\"r\", 5)\r\n          }\r\n          // else {\r\n          //   d3.selectAll(\".f\" + data['id'])\r\n          //     .attr(\"transform\", function (d) {\r\n          //       let transformd = d3.select(this).attr(\"transform\")\r\n          //       return transformd.split(\" \")[0] + \" scale(1.1)\"\r\n          //     })\r\n\r\n          //   d3.selectAll(\".basicRel\")\r\n          //     .attr(\"class\", function (d) {\r\n          //       let classN = d3.select(this).attr(\"class\");\r\n          //       let classNList = classN.split(\" \");\r\n          //       let jg = 0;\r\n          //       for (let i = 0; i < classNList.length - 1; i++) {\r\n          //         if ('source' + data['id'] == classNList[i]) { jg = 1; }\r\n          //         if ('target' + data['id'] == classNList[i]) { jg = 1; }\r\n          //       }\r\n          //       if (jg == 1) {\r\n          //         // classN += \" activeS\";\r\n          //       }\r\n          //       return classN;\r\n          //     })\r\n          // }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          // d3.select(this).attr(\"r\", r)\r\n\r\n          _this.overEntityId = \"\"//_this.curEntId;\r\n          let classN = d3.select(this).attr(\"class\");\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList\r\n          if (_this.showEntityRelIdOverState == 1) {\r\n            showRel.push(parseInt(idN))\r\n          }\r\n          else {\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 0).attr(\"r\", 5)\r\n          }\r\n          // else {\r\n          //   d3.selectAll(\".f\" + data['id'])\r\n          //     .attr(\"transform\", function (d) {\r\n          //       let transformd = d3.select(this).attr(\"transform\")\r\n          //       return transformd.split(\" \")[0] + \" scale(1)\"\r\n          //     })\r\n          //   d3.select(\"#graphPanel\").selectAll(\"path\")\r\n          //     .attr(\"class\", function (d) {\r\n          //       let thisSelect = d3.select(this)\r\n          //       let classN = thisSelect.attr(\"class\");\r\n          //       let classNList = classN.split(\" \")\r\n          //       if (classNList[classNList.length - 1] == \"activeS\") {\r\n          //         classN = \"\";\r\n          //         for (let i = 0; i < classNList.length - 1; i++) {\r\n          //           classN += \" \" + classNList[i];\r\n          //         }\r\n          //       }\r\n          //       return classN\r\n          //     })\r\n          // }\r\n        })\r\n        .on(\"click\", function (d) {\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList;\r\n          //  - _this.showEntityRelIdOverState;\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel = [(parseInt(idN))]\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          else if (showRel.includes(parseInt(idN))) {\r\n            // showRel.filter(item=>{return item==parseInt(idN)})\r\n            _this.showEntityRelIdOverState = 0;\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          // d3.select(this).attr(\"r\", r);\r\n          // d3.selectAll(\".f\" + data['id'])\r\n          //   .attr(\"transform\", function (d) {\r\n          //     let transformd = d3.select(this).attr(\"transform\")\r\n          //     return transformd.split(\" \")[0] + \" scale(1)\"\r\n          //   })\r\n          let thisId = this.id.split(\"_\")[1];\r\n          _this.curEntId = thisId;\r\n          let thisData = _this.drawEntityLocation.find(function (a) { return a['id'] == thisId })\r\n          let thisTime = thisData['time'];\r\n          _this.click_Ent(thisTime);\r\n          let psvg = d3.select(\"#entG\");\r\n          let dw = psvg.attr(\"width\");\r\n          let dh = psvg.attr(\"height\");\r\n          psvg.remove();\r\n          let svg = d3.select('#editEnt').append(\"g\").attr(\"id\", \"entG\").attr(\"width\", dw).attr(\"height\", dh);\r\n          _this.drawEntity(svg, dw/2, 100, 50, thisData,1)\r\n          // if (thisData['type'] == 0 ) {\r\n            // _this.drawEntityTimeAxis(svg,thisData,[dw/2,100,10]);\r\n        // }\r\n          // console.log(thisTime,thisId,thisData)\r\n        })\r\n        .attr(\"stroke-width\", strokeW);\r\n    },\r\n    drawpolygon(svg, color, areas, stroke, opacity = 1) {\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", areas)\r\n        .attr(\"fill\", color)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", \"1.5px\");\r\n    },\r\n    drawEntityTimeAxis(svg, entData,copy=0) {\r\n\r\n      const _this = this;\r\n      let x = entData['x'];\r\n      let r = entData['r'];\r\n      let y = entData['y'] + r / 2;\r\n      if(copy!=0){\r\n        x = copy[0];\r\n        r = copy[2];\r\n        y = copy[1]+r/2;\r\n      }\r\n      let path1 = d3.path();\r\n      let jg1 = 0;\r\n      let path2 = d3.path();\r\n      let jg2 = 0;\r\n      let daId = entData['id']\r\n      let entDataO = _this.drawEntityLocation;\r\n      let sumTotalDuration = _this.sumTotalDuration;\r\n      let widthScale = d3.scaleLinear([0, sumTotalDuration], [0, Math.PI]);\r\n      let timeStepR = 0;\r\n      let timeStartR = -Math.PI / 2;\r\n      let inter = 0;\r\n      let sons = tools.deepClone(entData['son']);\r\n      let relList = [];\r\n      let relRootList = [];\r\n      let psNum = 0.5;\r\n      if ((sons.length > 0)) {\r\n        inter = 14\r\n      }\r\n\r\n      let relData = _this.relData;\r\n      let oData = _this.drawEntityLocation;\r\n      let basicRel = relData['basicRel'];\r\n      for (let re = 0; re < basicRel.length; re++) {\r\n\r\n        let sorceId = basicRel[re][0];\r\n        let targetId = basicRel[re][1];\r\n        let cNode = '';\r\n        if (sorceId == daId) {\r\n          cNode = oData.find(function (d) { return d['id'] == targetId });\r\n          relList.push(targetId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n\r\n        if (targetId == daId) {\r\n          cNode = oData.find(function (d) { return d['id'] == sorceId });\r\n          relList.push(sorceId);\r\n          relRootList.push(cNode['rootIndex']);\r\n        }\r\n      };\r\n      // if(entData[]) \r\n      let wline = 0;\r\n      let sumTotalDurationF = 0;\r\n      entDataO.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let layout = self['layout'];\r\n        let rootIndex = self['rootIndex'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        timeStepR = widthScale(duration);\r\n        if (!relRootList.includes(rootIndex)) {\r\n          wline += timeStepR * psNum;\r\n          sumTotalDurationF += duration;\r\n        }\r\n      })\r\n      let widthScaleA = d3.scaleLinear([0, sumTotalDuration - sumTotalDurationF], [0, Math.PI - wline]);\r\n      // if(rootEntityList.length==0){\r\n      //   widthScaleA = widthScale\r\n      // }\r\n      // let wline = 0;\r\n      entDataO.forEach((self, indx, arr) => {\r\n        let totalDurationValue = self['totalDuration'];\r\n        let timeList = self['time'];\r\n        let layout = self['layout'];\r\n        let rootIndex = self['rootIndex'];\r\n        let cId = self['id'];\r\n        let duration = tools.time2seconds(timeList[1]) - tools.time2seconds(timeList[0]);\r\n        timeStepR = widthScale(duration);\r\n        if (!relRootList.includes(rootIndex)) {\r\n          if (relRootList.length != 0) {\r\n            timeStepR = psNum * widthScale(duration);\r\n          }\r\n        }\r\n        else {\r\n          timeStepR = widthScaleA(duration)\r\n        }\r\n        let endAnglet = timeStartR + timeStepR;\r\n        var dataset = { startAngle: timeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n        timeStartR = endAnglet;\r\n        let color = 'blue';\r\n        let rh = 30;\r\n        let h = rh;\r\n        let nh = 0;\r\n        if (relRootList.length != 0) {\r\n          h = rh * 0.32 + rh * 0.6 - 3 * layout;\r\n          nh = rh * 0.3;\r\n        }\r\n        if (!relRootList.includes(self['rootIndex'])) {\r\n          h = rh * 0.7;\r\n          nh = h * 0 + h * 0.6;\r\n        }\r\n        else {\r\n          dataset.startAngle += 0.003;\r\n          dataset.endAngle -= 0.003;\r\n\r\n        }\r\n        var arcPath = d3.arc()\r\n          .innerRadius(r + inter + nh)\r\n          .outerRadius(r + inter + h);\r\n        var pathArc = arcPath(dataset);\r\n        let arc;\r\n        if (relRootList.length != 0) {\r\n          let jiantouPath = d3.path();\r\n          jiantouPath.arc(x, y - r / 2, r + h + inter, - Math.PI, 0);\r\n\r\n          // _this.drawTimeLine(_this.arcG, jiantouPath, \"rgb(200,200,200)\", 1, '9,5', 'timeLayout ', 'timeLayout ');\r\n\r\n          if (relRootList.includes(self['rootIndex'])) {\r\n            if (relList.includes(parseInt(self['id']))) {\r\n            if((copy!=0) &&(jg1==0)){\r\n              jg1=1\r\n              path1.moveTo(2, 25)\r\n              path1.lineTo(150,25)\r\n              let ang = dataset.startAngle+Math.PI/2\r\n              _this.drawTxt(svg, 70, 20, 100, [\"Associated Concept\"], \"grey\", 15, `texts_1`);\r\n              // path1.lineTo((x+10),(y-r/2+10))\r\n              path1.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n              arc = _this.drawArc(svg, x, y - r / 2, pathArc, self['color'], self['color'], `timeAxisForSe f${entData['id']} ${self['id']}`, '0', 0, 1);\r\n            }\r\n            else {\r\n              // path1.lineTo(0,0) \r\n              arc = _this.drawArc(svg, x, y - r / 2, pathArc, \"white\", self['color'], `timeAxisFor f${entData['id']} ${self['id']}`, '0', 0.0, 0.4);\r\n            }\r\n          }\r\n          else {\r\n            arc = _this.drawArc(svg, x, y - r / 2, pathArc, self['color'], self['color'], `timeAxisFor f${entData['id']} ${self['id']}`, '0', 0, 0.2);\r\n\r\n          }\r\n          if(daId == self['id']){\r\n            let color = d3.select(`#entCircle_${self['id']}`).attr(\"fill\")\r\n            let da = tools.deepClone(dataset);\r\n            da.startAngle = (dataset.endAngle+dataset.startAngle)/2-0.001;\r\n            da.endAngle = (dataset.endAngle+dataset.startAngle)/2+0.0001;\r\n            let arcPa = d3.arc()\r\n            .innerRadius(r + inter + (nh+h)/2)\r\n            .outerRadius(r + inter + (nh+h)/2);\r\n            let pathA = arcPa(da);\r\n            if((copy!=0) &&(jg2==0)){\r\n              jg2=1\r\n              path2.moveTo(400, 125)\r\n              path2.lineTo(290,125)\r\n              let ang = da.startAngle+0.001+Math.PI/2\r\n              _this.drawTxt(svg, 350, 120, 100, [\"Current Concept\"], \"grey\", 15, `texts_1`);\r\n              // path1.lineTo((x+10),(y-r/2+10))\r\n              path2.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path2, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n            _this.drawArc(svg, x, y - r / 2, pathA, color, self['color'], `timeAxisself f${self['id']}`, '0', 6, 1);\r\n          }\r\n            if(copy!=0){\r\n              // _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 3, '9,5', 'mm ', 'mm ');\r\n            }\r\n          arc.on(\"mouseover\", function (d) {\r\n            let classN = d3.select(this).attr(\"class\");\r\n            let sId = (classN.split(\" \")[1] + \"\").slice(1);\r\n            let tId = classN.split(\" \")[2];\r\n            let type = classN.split(\" \")[0];\r\n            _this.showEntityRelIdList = [sId]\r\n            _this.overEntityId = sId;\r\n            _this.overTargetEntityId = tId;\r\n            _this.showIMG = false;\r\n            if (type != 'timeAxisFor') {\r\n              let curEnt = entDataO.find(function (d) { return parseInt(d['id']) == tId });\r\n              _this.assistGTransformX = parseInt(-curEnt['x']) + parseFloat(curEnt['r'])// + 240;\r\n              _this.assistGTransformY = parseInt(-curEnt['y']) + parseFloat(curEnt['r'])// + 350;\r\n              _this.updataAssistGraphPanel();\r\n            }\r\n\r\n          })\r\n          \r\n          arc.on(\"mouseleave\", function (d) {\r\n            let classN = d3.select(this).attr(\"class\");\r\n            let sId = (classN.split(\" \")[1] + \"\").slice(1);\r\n            let showRel = _this.showEntityRelIdList;\r\n            _this.overTargetEntityId = '';\r\n            _this.overEntityId = \"\"//_this.curEntId;\r\n            \r\n            _this.showIMG = true;\r\n            if (_this.showEntityRelIdOverState == 1) {\r\n              showRel.push(parseInt(sId))\r\n            }\r\n            else {\r\n              showRel.splice(showRel.indexOf(parseInt(sId)), 1)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    drawEntity(svg, x, y, r, data,copy=0) {\r\n      const _this = this;\r\n      let color_linear = _this.importanceColor_linear;\r\n      let compute_color = _this.importanceCompute_color;\r\n      let rScale = _this.relevanceScale_linear;\r\n      let oData = _this.data;\r\n      let path1 = d3.path();\r\n      let path2 = d3.path();\r\n      let jg2=0;\r\n      let ang2=0;\r\n      let path3 = d3.path();\r\n      let jg3=0;\r\n      let ang3=0;\r\n      let importanceValue = data['attribute']['importance'];\r\n      // let relevanceValuale(relevanceValue)\r\n      // { 'id': dae = data['attribute']['relevance'];\r\n      // let r = rScta[i]['id'], \"x\": x, \"r\": r, \"layout\": lay, \"y\": y, \"sonFlag\": sonFlag }\r\n\r\n\r\n      if (data['type'] == '1') {\r\n        let area = tools.calcTriangle(x, y, r);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entT\",`entT_${data['id']}`);\r\n\r\n        _this.drawTxt(svg, x, y + 8, 20, [\"T\"], 'white', 28, \"T\")\r\n      }\r\n      else if (data['type'] == '2') {\r\n        let area = tools.calcTriangle(x, y, r);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\",1,15,\"entE\",`entE_${data['id']}`);\r\n\r\n        _this.drawTxt(svg, x, y + 8, 20, [\"E\"], 'white', 28, \"E\")\r\n      }\r\n      else {\r\n\r\n        let cy = y;\r\n        let totalDuration = _this.totalDuration;\r\n        let timeLineScale_linear = d3.scaleLinear([0, totalDuration], [x - r * Math.sqrt(3) / 2, x + r * Math.sqrt(3) / 2])\r\n        let timeLineHighScale_linear = d3.scaleLinear([0, _this.maxTotalDuration - 50], [r / 2, r * (1 + Math.sqrt(3) / 3 * 2)])\r\n        let circleColor = compute_color(color_linear(importanceValue));\r\n        _this.drawCircle(svg, x, cy, r, circleColor, data, 1, \"entCircle\", \"entCircle_\" + data['id']);\r\n\r\n        r = r * Math.sqrt(3) / 2;\r\n        y += r / 2;\r\n        let path = d3.path();\r\n\r\n\r\n        path.moveTo(x - r, y);\r\n        let lineLi = [data];\r\n        let linePoint = [{ 'id': data['id'], 'time': data['time'], 'x': 0, 'y': 0 }];\r\n        let jgidL = [data['id']];\r\n        let similarityRelsli = [data[\"similarityRel\"]];\r\n        while (similarityRelsli.length > 0) {\r\n          let similarityRels = similarityRelsli[0];\r\n          similarityRelsli.splice(0, 1);\r\n          let jg = 0;\r\n          for (let srel in similarityRels) {\r\n            let cdata = oData.find(function (d) { return d['id'] == similarityRels[srel] });\r\n            if (jgidL.indexOf(cdata['id']) == -1) {\r\n              similarityRelsli.push(cdata[\"similarityRel\"])\r\n              jg = 1;\r\n              lineLi.push(cdata)\r\n              jgidL.push(cdata['id'])\r\n              linePoint.push({ 'id': cdata['id'], 'time': cdata['time'], 'x': 0, 'y': 0 })\r\n            }\r\n          }\r\n          // if(jg==0){\r\n          // break;\r\n          // }\r\n        }\r\n\r\n        const sortmt = (a, b) => {\r\n          return tools.time2seconds(a[0]) - tools.time2seconds(b[0]);\r\n        }\r\n        const sortlp = (a, b) => {\r\n          return tools.time2seconds(a['time'][0]) - tools.time2seconds(b['time'][0]);\r\n        }\r\n\r\n        lineLi = lineLi.sort(sortlp);\r\n        linePoint = linePoint.sort(sortlp);\r\n        let lineData = [[x - r * Math.sqrt(3) / 2 - 4, y]];\r\n        for (let t = 0; t < lineLi.length; t++) {\r\n          let startT = lineLi[t]['time'][0];\r\n          let duration = lineLi[t]['totalDuration']\r\n          // let endT = lineLi[t]['time'][1];\r\n          let startS = tools.time2seconds(startT);\r\n          let endS = startS + duration;\r\n          // let startx = timeLineScale_linear((startS - duration * 10));\r\n          // let endx = timeLineScale_linear((endS + duration * 10));\r\n          let limst = (x - r * Math.sqrt(3) / 2);\r\n          let limed = (x + r * Math.sqrt(3) / 2);\r\n          let startx = (limst < timeLineScale_linear((startS))) ? (timeLineScale_linear((startS))) : (limst);\r\n          let endx = (limed > timeLineScale_linear((endS))) ? (timeLineScale_linear((endS))) : (limed);\r\n          // let midx = timeLineScale_linear((endS + startS) / 2);\r\n          let midx = (startx + endx) / 2;\r\n          let ys = y;\r\n          let yz = y - timeLineHighScale_linear((duration));\r\n          linePoint[t]['x'] = midx;\r\n          linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n          // if (startx < (lineData[lineData.length - 1][0])) {\r\n          if (t > 0) {\r\n            lineData.splice(lineData.length - 1, 1);\r\n            midx += t * 5;\r\n            startx = midx - ((midx - (lineData[lineData.length - 1][0] + midx) / 2)) / 2;\r\n            endx += t * 5;\r\n            ys = y + (y - lineData[lineData.length - 1][1]) / 3\r\n          }\r\n          // }\r\n          lineData.push([startx, ys], [midx, yz], [endx, y])\r\n          // let startx = timeLineScale_linear((startS - duration * 10));\r\n          // let endx = timeLineScale_linear((endS + duration * 10));\r\n\r\n          // let startyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let startyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let endyf = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let endyf1 = y + timeLineHighScale_linear((duration)) / 8;\r\n          // let yz = y - timeLineHighScale_linear((duration));\r\n          // let midx = timeLineScale_linear((endS + startS) / 2);\r\n          // linePoint[t]['x'] = midx;\r\n          // linePoint[t]['y'] = y - timeLineHighScale_linear(duration) / 1.7;\r\n          // let y1 = y;\r\n          // if (startx < (lineData[lineData.length - 1][0])) {\r\n          //   if (t > 0) {\r\n          //     lineData.splice(lineData.length - 3, 3);\r\n          //     startx = (lineData[lineData.length - 1][0] + midx) / 2;\r\n          //     y1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //     startyf = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //     startyf1 = lineData[lineData.length - 1][1] + timeLineHighScale_linear((duration)) / 2;\r\n          //   }\r\n          // }\r\n          // let startx1 = startx + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let endx1 = endx - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let startx2 = startx1 + (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // let endx2 = endx1 - (timeLineScale_linear((startS + duration)) - timeLineScale_linear((startS)));\r\n          // if (endx > (r + x)) endx = r + x;\r\n          // if (startx1 < (lineData[lineData.length - 1][0])) startx1 = lineData[lineData.length - 1][0];\r\n          // if (endx1 > (r + x)) endx1 = r + x;\r\n          // if (startx2 < (lineData[lineData.length - 1][0])) startx2 = lineData[lineData.length - 1][0];\r\n          // if (endx2 > (r + x)) endx2 = r + x;\r\n          // lineData.push([startx, y1], [startx1, startyf1], [startx2, startyf], [midx, yz], [endx2, endyf], [endx1, endyf1], [endx, y])\r\n        }\r\n        lineData.push([x + r, y])\r\n        let curve_generator = d3.line()\r\n          .x((d) => d[0])\r\n          .y((d) => {\r\n            let h = Math.sqrt(Math.pow(r, 2) - Math.pow((d[0] - (x - r)), 2));\r\n            if ((y - d[1]) > (h + r * Math.sqrt(3) / 2))\r\n              return y - (h + r * Math.sqrt(3) / 2) + 2;\r\n            return d[1];\r\n          })\r\n          .curve(d3.curveBundle)\r\n        // .curve(d3.curveCatmullRom  )\r\n        // .curve(d3.curveBasis)\r\n        _this.drawTimeLine(svg, curve_generator(lineData), \"white\", 2, '0', 'sonLine ', 'sonLine ');\r\n\r\n        for (let p = 0; p < linePoint.length; p++) {\r\n          _this.drawCircle(svg, linePoint[p]['x'], linePoint[p]['y'], 5, \"red\", linePoint[p], 0, \"linePoint\", \"linePoint_\" + linePoint[p]['id']);\r\n        }\r\n\r\n        // \"1\": \"rgb(145, 204, 117)\",\r\n        //   \"2\": \"rgb(84, 112, 198)\",\r\n        //   \"3\": \"rgb(238, 102, 102)\",\r\n        let typeColor = {\r\n          \"1\": \"#ff9c9c\",\r\n          \"2\": \"#f4f4d0\",\r\n          \"3\": \"#6f8be0\",\r\n        };\r\n        let duration = tools.time2seconds(data['time'][0]) - tools.time2seconds(data['time'][1]);\r\n        let typeData = data['attribute']['expressions'];\r\n        let sonList = data['son'];\r\n        let sons = [sonList];\r\n        while (sons.length > 0) {\r\n          let curSonList = sons[0];\r\n          sons.splice(0, 1);\r\n          if (curSonList.length > 0) {\r\n            for (let s in curSonList) {\r\n              let sonData = oData.find(function (d) { return d['id'] == curSonList[s] });\r\n              let sonTypeData = sonData['attribute']['expressions'];\r\n\r\n              for (let t in sonTypeData) {\r\n                let typeDurition = sonTypeData[t];\r\n                for (let d in typeDurition) {\r\n                  typeData[t].push(typeDurition[d])\r\n                }\r\n              }\r\n              sons.push(sonData['son']);\r\n            }\r\n          }\r\n        }\r\n        var typeStartR = 0//Math.PI/4;\r\n\r\n        var typeStepR = Math.PI / 1;\r\n\r\n        if (sonList.length > 0) {\r\n          let typeTotalDur = 0;\r\n          for (let t in typeData) {\r\n            let typeDurition = typeData[t];\r\n            for (let d in typeDurition) {\r\n              typeTotalDur += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n            }\r\n          }\r\n          let typeArcScale_linear = d3.scaleLinear([0, typeTotalDur], [0, Math.PI * 2]);\r\n          for (let i in typeData) {\r\n            let color = typeColor[i];\r\n            let typeDurition = typeData[i];\r\n            let totalTypeSeconds = 0;\r\n            for (let d in typeDurition) {\r\n              totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n            }\r\n            if (totalTypeSeconds > 0) {\r\n              let typeStepR = typeArcScale_linear(totalTypeSeconds)//Math.PI/2;\r\n\r\n              let endAnglet = typeStartR + 1 * typeStepR\r\n              var dataset = { startAngle: typeStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n              typeStartR = endAnglet;\r\n              var arcPath = d3.arc()\r\n                .innerRadius(r + 10)\r\n                .outerRadius(r + 25);\r\n              var pathArc = arcPath(dataset);\r\n              _this.drawArc(svg, x, y - r / 2, pathArc, color, color, 'type f' + data['id'] + \" t\" + i);\r\n            }\r\n          if((copy!=0)&&(jg2==0)){\r\n            jg2=1;\r\n              ang2 = dataset.startAngle+Math.PI/2\r\n            }\r\n          }\r\n          let sonTotal = 0;\r\n          let sonNum = 0\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n            sonTotal += sonDur;\r\n            sonNum += 1;\r\n          }\r\n          let skipArc = Math.PI / (sonNum + 2);\r\n          let timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI - skipArc * (sonNum - 1)]);\r\n          let timeSonHeighLinear = d3.scaleLinear([0, sonTotal], [40, 40]);\r\n\r\n          let timeSonColor_linear = d3.scaleLinear().domain([0, sonTotal]).range([0, 1]);\r\n          let timeSonCompute_color = d3.interpolate(\"white\", circleColor);\r\n          var sonStartR = Math.PI / 2;\r\n\r\n          let relList = [];\r\n          let relRootList = [];\r\n          let psNum = 0.1;\r\n          let daId = data['id']\r\n          let relData = _this.relData;\r\n          let odData = _this.data;\r\n          let basicRel = relData['basicRel'];\r\n          for (let re = 0; re < basicRel.length; re++) {\r\n\r\n            let sorceId = basicRel[re][0];\r\n            let targetId = basicRel[re][1];\r\n            let cNode = '';\r\n            if (sorceId == daId) {\r\n              cNode = odData.find(function (d) { return parseInt(d['id']) == parseInt(targetId) });\r\n              relList.push(targetId);\r\n            }\r\n\r\n            if (targetId == daId) {\r\n              cNode = odData.find(function (d) { return parseInt(d['id']) == parseInt(sorceId) });\r\n              relList.push(sorceId);\r\n            }\r\n          };\r\n          if (relList.length == 0) {\r\n            sonStartR = 0;\r\n            timeSonLinear = d3.scaleLinear([0, sonTotal], [0, Math.PI * 2 - skipArc * (sonNum)]);\r\n          }\r\n\r\n          for (let s in sonList) {\r\n            let sonData = oData.find(function (d) { return d['id'] == sonList[s] });\r\n            let sonDur = sonData['totalDuration'];\r\n\r\n            let sonStepR = timeSonLinear(sonDur)//Math.PI/2;\r\n\r\n            let endAnglet = sonStartR + sonStepR;\r\n            var dataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n            sonStartR = endAnglet;\r\n            let color = 'blue';\r\n            var arcPath = d3.arc()\r\n              .innerRadius(r + 28)\r\n              .outerRadius(r + timeSonHeighLinear(sonDur));\r\n            var arcMidPath = d3.arc()\r\n              .innerRadius(0)\r\n              .outerRadius(r + 32);\r\n            var pathArc = arcPath(dataset);\r\n\r\n            endAnglet = sonStartR + skipArc;\r\n            var midDataset = { startAngle: sonStartR, endAngle: endAnglet }; //创建一个弧生成器\r\n\r\n            let jiantouPath = d3.path();\r\n            jiantouPath.arc(x, y - r / 2, r + 32, sonStartR - Math.PI / 2, endAnglet - Math.PI / 2);\r\n\r\n            sonStartR += skipArc;\r\n            var pathMidArc = arcMidPath(midDataset);\r\n            let timeSonColor = compute_color(color_linear(sonData['attribute']['importance']));\r\n            _this.drawArc(svg, x, y - r / 2, pathArc, timeSonColor, timeSonColor, 'son f' + data['id'] + \" s\" + sonList[s], '0');\r\n            if (s != sonList.length - 1) {\r\n\r\n              // console.log\r\n              _this.drawTimeLine(svg, jiantouPath, \"rgb(200,200,200)\", 3, '9,5', 'midArc ', 'midArc ');\r\n              // _this.drawTimeLine(_this.arcG, path, \"white\", 2,'0', 'sonLine ', 'sonLine ');\r\n              // _this.drawArc(_this.arcG, x, y - r / 2, pathMidArc, \"rgb(200,200,200)\", \"white\", 'son f' + data['id'], \"9,5\", 3);\r\n            }\r\n            \r\n          if((copy!=0)){\r\n            jg3=1;\r\n              ang3 = (dataset.endAngle+dataset.startAngle)/2+Math.PI/2\r\n            }\r\n          }\r\n        };\r\n        \r\n        if((copy!=0)){\r\n              // jg2=1\r\n              path1.moveTo(10, 155)\r\n              path1.lineTo(120,155)\r\n              // let ang = da.startAngle+0.001+Math.PI/2\r\n              _this.drawTxt(svg, 60, 120, 80, [\"Concept\",\"Time\",\"Distribution\"], \"grey\", 15, `texts_1`);\r\n              path1.lineTo(lineData[0][0],lineData[0][1])\r\n              // path2.lineTo((x-(r + inter + h)*Math.cos(ang)),(y-r/2-(r + inter + h)*Math.sin(ang)))\r\n              _this.drawTimeLine(svg, path1, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n              if(jg2==1){\r\n              path2.moveTo(550, 35)\r\n              path2.lineTo(320,35)\r\n              _this.drawTxt(svg, 360, 20, 80, [\"Course Style\"], \"grey\", 15, `texts_1`);\r\n              path2.lineTo((x-(r +25)*Math.cos(ang2)),(y-r/2-(r +25)*Math.sin(ang2)))\r\n              _this.drawTimeLine(svg, path2, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');}\r\n            }\r\n              if(jg3==1){\r\n              path3.moveTo(550, 235)\r\n              path3.lineTo(320,235)\r\n              let ang3 = Math.PI*(1/2+1-0.05)\r\n              _this.drawTxt(svg, 360, 200, 80, [\"Subconcept\",\"Distribution\"], \"grey\", 15, `texts_1`);\r\n              path3.lineTo((x-(r +32)*Math.cos(ang3)),(y-r/2-(r +32)*Math.sin(ang3)))\r\n              _this.drawTimeLine(svg, path3, \"rgb(200,200,200)\", 2, '9,5', 'mm ', 'mm ');\r\n            }\r\n      }\r\n      let txts = data['name'].split(\" \")\r\n      let tx = x - r - 30;\r\n      let ty = y + r + 60;\r\n      let tw = r * 2;\r\n      tx = x;\r\n      if (data['son'].length == 0) {\r\n        tx = x//-r-10;\r\n        ty = y + r * 2;\r\n      }\r\n      // if (data['id'] == \"3\") {\r\n      //   tx = x - 10;\r\n      //   ty = y + r * 2;\r\n      // }\r\n      // if (data['id'] == \"4\") {\r\n      //   tx = x + 10;\r\n      //   ty = y + r * 2;\r\n      // }\r\n      // if(data['type']=='1'){\r\n      //   tx = x-r/2;\r\n      //   ty = y+r*2;\r\n      // }\r\n\r\n      _this.drawTxt(svg, tx, ty, tw, txts, \"grey\", 16, `text_${data['id']}`);\r\n    },\r\n    drawArc(svg, x, y, arcPath, stroke, fill, className, stroke_dasharray = \"0\", width = 3, opacity = 1) {\r\n      let arc = svg.append(\"path\")\r\n        .attr(\"d\", arcPath)\r\n        .attr(\"class\", className)\r\n        .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\")\r\n        .attr(\"stroke\", stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"fill\", fill)\r\n        .attr(\"opacity\", opacity);\r\n      return arc;\r\n    },\r\n    drawCircle(svg, x, y, r, fill, data, opacity, className, idName) {\r\n      const _this = this;\r\n      const oData = _this.data\r\n      svg.append(\"circle\")\r\n        .attr(\"id\", idName)\r\n        .attr(\"class\", className)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"cx\", x)\r\n        .attr(\"cy\", y)\r\n        .attr(\"r\", r)\r\n        .attr(\"fill\", fill)\r\n        .on(\"mouseover\", function (d) {\r\n          d3.select(this).attr(\"r\", r * 1.1)\r\n          let classN = d3.select(this).attr(\"class\");\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          _this.overEntityId = idN\r\n          let showRel = _this.showEntityRelIdList\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel.push(parseInt(idN))\r\n            _this.showEntityRelIdOverState = 0;\r\n          }\r\n          else {\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 1).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1.1)\"\r\n              })\r\n\r\n            d3.selectAll(\".basicRel\")\r\n              .attr(\"class\", function (d) {\r\n                let classN = d3.select(this).attr(\"class\");\r\n                let classNList = classN.split(\" \");\r\n                let jg = 0;\r\n                for (let i = 0; i < classNList.length - 1; i++) {\r\n                  if ('source' + data['id'] == classNList[i]) { jg = 1; }\r\n                  if ('target' + data['id'] == classNList[i]) { jg = 1; }\r\n                }\r\n                if (jg == 1) {\r\n                  // classN += \" activeS\";\r\n                }\r\n                return classN;\r\n              })\r\n          }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          d3.select(this).attr(\"r\", r)\r\n\r\n          _this.overEntityId = \"\"//_this.curEntId;\r\n          let classN = d3.select(this).attr(\"class\");\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList\r\n          if (_this.showEntityRelIdOverState == 1) {\r\n            showRel.push(parseInt(idN))\r\n          }\r\n          else {\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1)\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          if (classN == 'linePoint') {\r\n            d3.select(this).attr(\"opacity\", 0).attr(\"r\", 5)\r\n          }\r\n          else {\r\n            d3.selectAll(\".f\" + data['id'])\r\n              .attr(\"transform\", function (d) {\r\n                let transformd = d3.select(this).attr(\"transform\")\r\n                return transformd.split(\" \")[0] + \" scale(1)\"\r\n              })\r\n            d3.select(\"#graphPanel\").selectAll(\"path\")\r\n              .attr(\"class\", function (d) {\r\n                let thisSelect = d3.select(this)\r\n                let classN = thisSelect.attr(\"class\");\r\n                let classNList = classN.split(\" \")\r\n                if (classNList[classNList.length - 1] == \"activeS\") {\r\n                  classN = \"\";\r\n                  for (let i = 0; i < classNList.length - 1; i++) {\r\n                    classN += \" \" + classNList[i];\r\n                  }\r\n                }\r\n                return classN\r\n              })\r\n          }\r\n        })\r\n        .on(\"click\", function (d) {\r\n\r\n          let idN = d3.select(this).attr(\"id\").split(\"_\")[1]\r\n          let showRel = _this.showEntityRelIdList;\r\n          //  - _this.showEntityRelIdOverState;\r\n          if (!showRel.includes(parseInt(idN))) {\r\n            showRel = [(parseInt(idN))]\r\n            _this.showEntityRelIdOverState = 1;\r\n          }\r\n          else if (showRel.includes(parseInt(idN))) {\r\n            // showRel.filter(item=>{return item==parseInt(idN)})\r\n            _this.showEntityRelIdOverState = 0;\r\n            showRel.splice(showRel.indexOf(parseInt(idN)), 1);\r\n          }\r\n          _this.showEntityRelIdList = showRel;\r\n\r\n          d3.select(this).attr(\"r\", r);\r\n          d3.selectAll(\".f\" + data['id'])\r\n            .attr(\"transform\", function (d) {\r\n              let transformd = d3.select(this).attr(\"transform\");\r\n              return transformd.split(\" \")[0] + \" scale(1)\";\r\n            });\r\n          let thisId = this.id.split(\"_\")[1];\r\n          _this.curEntId = thisId;\r\n          let thisData = _this.drawEntityLocation.find(function (a) { return a['id'] == thisId })\r\n          let thisTime = thisData['time'];\r\n          _this.click_Ent(thisTime);\r\n          let psvg = d3.select(\"#entG\");\r\n          let dw = psvg.attr(\"width\");\r\n          let dh = psvg.attr(\"height\");\r\n          psvg.remove();\r\n          let svg = d3.select('#editEnt').append(\"g\").attr(\"id\", \"entG\").attr(\"width\", dw).attr(\"height\", dh);\r\n          _this.drawEntity(svg, dw/2, 100, r, thisData,1);\r\n          // if (thisData['type'] == 0 ) {\r\n            _this.drawEntityTimeAxis(svg,thisData,[dw/2,100,r]);\r\n        // }\r\n          // console.log(thisTime,thisId,thisData)\r\n        })\r\n        .on(\"contextmenu\", function (d, i) {\r\n          d.preventDefault();\r\n\r\n          if (_this.btnEdi) {\r\n            _this.editDivShow = true;\r\n            _this.$refs.editDiv.style.top = `${d.clientY}px`;\r\n            _this.$refs.editDiv.style.left = `${d.clientX}px`;\r\n          }\r\n          else {\r\n            let thisId = this.id.split(\"_\")[1];\r\n            let thisShowEntityData = _this.showEntityList.find(function (d) { return d['id'] == thisId });\r\n            let thisSons = thisShowEntityData['son'];\r\n            if (thisSons.length != 0) {\r\n              let sons = tools.deepClone(thisSons);\r\n              let showJage = false;\r\n              let i = 0\r\n              while ((sons.length > 0)) {\r\n                let s = sons[0];\r\n                sons.splice(0, 1);\r\n                let curson = _this.showEntityList.find(function (d) { return d['id'] == s + '' })\r\n                if (i == 0) {\r\n                  i++;\r\n                  showJage = !curson['show']\r\n                }\r\n                // ['show'] = !_this.showEntityList.find(function (d) { return d['id'] == thisSons[s] })['show']\r\n                curson['show'] = showJage;\r\n                let curgson = curson['son'];\r\n                if (!showJage) {\r\n                  for (let gs = 0; gs < curgson.length; gs++) {\r\n                    sons.push(curgson[gs]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          _this.updataGraph()\r\n        });\r\n      // .on(\"\")\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, ry, fill, opacity, stroke, id = 'rect', strokeW = 1.5, classN = 'rect') {\r\n      d3.select(`#${id}`).remove()\r\n      let rect = svg.append(\"rect\")\r\n        .attr(\"id\", id)\r\n        .attr(\"class\", classN)\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"ry\", ry)\r\n        .attr(\"height\", h)\r\n        .attr(\"width\", w) //刚才设置的块的宽度\r\n        .attr(\"fill\", fill)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", `${strokeW}px`);\r\n      return rect;\r\n    },\r\n    drawTxt(svg, x, y, width, txts, fill, fontsize = 12, idN, classN = \"text\") {\r\n      let tx = x;\r\n      let ty = y;\r\n      let preWidth = 0;\r\n      let preIdN = 0;\r\n      let pretext = ''\r\n      for (let t = 0; t < txts.length; t++) {\r\n        pretext += \" \" + txts[t];\r\n        let txt = svg.append(\"text\")\r\n          .attr(\"y\", ty)\r\n          .attr(\"x\", tx)\r\n          .attr(\"id\", `${idN}_${t}`)\r\n          .attr(\"class\", `${classN}`)\r\n          .attr(\"fill\", fill)\r\n          .attr(\"font-size\", fontsize)\r\n          .style(\"text-anchor\", \"middle\")\r\n          .text(pretext)\r\n        let textWidth = document.getElementById(`${idN}_${t}`).getBBox().width;\r\n        if ((textWidth > width) || (t == txts.length - 1)) {\r\n          pretext = '';\r\n          tx = x;\r\n          ty += 25;\r\n        }\r\n        else {\r\n          txt.remove()\r\n        }\r\n        preWidth += textWidth;\r\n      }\r\n    },\r\n    drawTimeLine(svg, path, stroke, width, stroke_dasharray = \"0\", idName, className) {\r\n      svg.append('path')\r\n        .attr('d', path.toString())\r\n        .attr('stroke', stroke)\r\n        .attr('class', className)\r\n        .attr('id', idName)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr('stroke-width', width)\r\n        .attr('fill', 'none')\r\n        .on('mouseover', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let idN = thisSelect.attr(\"id\");\r\n          if (classN.split(\" \")[0] == \"basicRel\") {\r\n            // d3.select(this).attr(\"class\", classN + \" activeS\");\r\n          }\r\n        })\r\n        .on('mouseleave', function (d) {\r\n          let thisSelect = d3.select(this)\r\n          let classN = thisSelect.attr(\"class\");\r\n          let classNList = classN.split(\" \")\r\n          if (classNList[classNList.length - 1] == \"activeS\") {\r\n            classN = \"\";\r\n            for (let i = 0; i < classNList.length - 1; i++) {\r\n              classN += classNList[i] + \" \";\r\n            }\r\n            d3.select(this).attr(\"class\", classN);\r\n          }\r\n        })\r\n    },\r\n    transformGraphSvg(flag) {\r\n      const _this = this;\r\n      let groups = _this.groupsSvg;\r\n\r\n      let scalePre = _this.graphSvgScale;\r\n\r\n      let margin = _this.margin;\r\n      if (flag == 'left') {\r\n        _this.graphGTransformX += 10;\r\n      }\r\n      if (flag == 'right') {\r\n        _this.graphGTransformX -= 10;\r\n      }\r\n      // groups.attr('transform', 'translate(' + (_this.graphGTransformX) + ',' + (margin.top) + ') scale(' + (scalePre) + ')')\r\n    },\r\n    updataAssistGraphPanel() {\r\n      const _this = this;\r\n      var content = this.groupsSvg.html();\r\n      let height = document.getElementById(\"assistGraphPanel\").clientHeight;\r\n      let width = document.getElementById(\"assistGraphPanel\").clientWidth;\r\n      d3.select('#assistGraphPanel').select('svg').remove();\r\n      let transX = _this.assistGTransformX;\r\n      let transY = _this.assistGTransformY;\r\n      var div = d3.select('#assistGraphPanel')\r\n        .append('svg')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${transX+width/2},${transY+height/2})`)\r\n        .html(content);\r\n    },\r\n    moveGraphLeft(e) {\r\n      const _this = this;\r\n      _this.moveFlag == true;\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      this.moveTimer = setInterval(() => { _this.transformGraphSvg(\"left\") }, 10)//_this.transformGraphSvg('left'), 100);\r\n    },\r\n    moveGraphRight(e) {\r\n      const _this = this;\r\n      // console.log(\"⚡🐲🫧❄️👁️\",e)\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      _this.moveFlag == true;\r\n      this.moveTimer = setInterval(() => { _this.transformGraphSvg(\"right\") }, 10)//_this.transformGraphSvg('left'), 100);\r\n    },\r\n    leaveGraphMove() {\r\n      // this.moveFlag == false;\r\n      clearInterval(this.moveTimer)// 清除定时器\r\n      // this.graphGTransformX = 0;\r\n    },\r\n    updataGraph() {\r\n      var _this = this;\r\n      let margin = _this.margin\r\n      let width = _this.$refs.graphDiv.offsetWidth - margin.left - margin.right;\r\n      let height = document.getElementById(\"graphPanel\").clientHeight - margin.top - margin.bottom;\r\n      let heightTimeAxis = document.getElementById(\"graphTimeAxisPanel\").clientHeight - margin.top - margin.bottom;\r\n      _this.width = width;\r\n      _this.height = height;\r\n      d3.select(\"#graphPanel\").select(\"svg\").remove()\r\n      var svg = d3.select(\"#graphPanel\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      _this.rootSvg = svg;\r\n      d3.select(\"#graphTimeAxisPanel\").select(\"svg\").remove()\r\n      var TimeAxisSvg = d3.select(\"#graphTimeAxisPanel\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      _this.TimeAxisSvg = TimeAxisSvg;\r\n      let data = _this.data;\r\n\r\n      let maxDImportance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let minDImportance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['importance']; }))\r\n      let maxDRelevance = Math.max.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let minDRelevance = Math.min.apply(Math, data.map(function (d) { return d['attribute']['relevance']; }))\r\n      let maxDDuration = Math.max.apply(Math, data.map(function (d) { return tools.time2seconds(d['time'][1]) - tools.time2seconds(d['time'][0]); }))\r\n      let maxTotalDuration = Math.max.apply(Math, data.map(function (d) { return d['totalDuration']; }))\r\n      _this.drawEntityLocation = [];\r\n      _this.minDImportance = minDImportance;\r\n      _this.maxDImportance = maxDImportance;\r\n      _this.minDRelevance = minDRelevance;\r\n      _this.maxDRelevance = maxDRelevance;\r\n      _this.maxDDuration = maxDDuration;\r\n      _this.maxTotalDuration = maxTotalDuration;\r\n\r\n      let currentMaxColor = _this.importanceMaxColor;\r\n      let currentMinColor = _this.importanceMinColor;\r\n      _this.importanceColor_linear = d3.scaleLinear().domain([minDImportance, maxDImportance]).range([0, 1]);\r\n      _this.$bus.$emit(\"importanceLinear\", [minDImportance, maxDImportance]);\r\n      _this.importanceCompute_color = d3.interpolate(currentMinColor, currentMaxColor);\r\n      _this.relevanceScale_linear = d3.scaleLinear([minDRelevance, maxDRelevance], [20, 50])\r\n      _this.totalDurationScale_linear = d3.scaleLinear().domain([0, maxTotalDuration]).range([20, 60]);\r\n\r\n      _this.drawMain(svg);\r\n      // });\r\n    },\r\n    zoomInLayoutClk() {\r\n      const _this = this;\r\n      _this.layoutShow += 1;\r\n      if (_this.layoutShow > 3) {\r\n        _this.layoutShow = 3;\r\n      }\r\n      // _this.updataGraph();\r\n    },\r\n    zoomOutLayoutClk() {\r\n      const _this = this;\r\n      _this.layoutShow -= 1;\r\n      if (_this.layoutShow < 0) {\r\n        _this.layoutShow = 0;\r\n      }\r\n      // _this.updataGraph();\r\n\r\n    },\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n  },\r\n  created() {\r\n    var _this = this;\r\n    let margin = _this.margin\r\n    this.$nextTick(() => {\r\n      _this.updataGraph();\r\n      _this.updataAssistGraphPanel();\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this;\r\n    let width = _this.$refs.graphDiv.offsetWidth;\r\n    let height = _this.height;\r\n    let showEntityList = tools.deepClone(_this.data);\r\n    for (let e in showEntityList) {\r\n      showEntityList[e]['show'] = true;\r\n    }\r\n    _this.showEntityList = showEntityList;\r\n    // let width = _this.width;\r\n    this.$bus.$on('graphData', (val) => {\r\n      _this.data = val;\r\n      let showEntityList = tools.deepClone(_this.data);\r\n      for (let e in showEntityList) {\r\n        showEntityList[e]['show'] = true;\r\n      }\r\n      _this.showEntityList = showEntityList;\r\n      _this.updataGraph();\r\n    });\r\n    this.$bus.$on('topicRectup', (val) => {\r\n      _this.editConfirm();\r\n    });\r\n    this.$bus.$on('switchL', (val) => {\r\n      _this.switchL = val;\r\n    });\r\n    // disabled in the online demo\r\n    // this.$bus.$on('entData', (val) => {\r\n    //   _this.data = val;\r\n    // });\r\n    // this.$bus.$on('relData', (val) => {\r\n    //   _this.relData = val;\r\n    // });\r\n    // this.$refs.moveGraphLeft.addEventListener(\"mouseover\", _this.moveGraphLeft); // 监听点击事件\r\n    // this.$refs.moveGraphRight.addEventListener(\"mousemove\", _this.moveGraphRight); // 监听点击事件\r\n    // this.$refs.moveGraphLeft.addEventListener(\"mouseleave\", _this.leaveGraphMove); // 监听点击事件\r\n    // this.$refs.moveGraphRight.addEventListener(\"mouseleave\", _this.leaveGraphMove); // 监听点击事件\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.moveTimer);\r\n  },\r\n} \r\n</script>\r\n\r\n<style>@import './index.css';</style>\r\n"]}]}