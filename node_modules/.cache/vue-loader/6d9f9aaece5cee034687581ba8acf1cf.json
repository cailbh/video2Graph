{"remainingRequest":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\OverviewPanel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\src\\components\\OverviewPanel\\index.vue","mtime":1680339460853},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\babel-loader\\lib\\index.js","mtime":1688115046651},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688115046166},{"path":"D:\\Cailibuhong\\video2Graph\\video2Graph\\node_modules\\vue-loader\\lib\\index.js","mtime":1688115046800}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/components/OverviewPanel","sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!-- eslint-disable no-unused-vars -->\r\n\r\n<template>\r\n  <div class=\"overviewPanel\">\r\n    <div class=\"panelHead\">Overview</div>\r\n    <div id=\"overviewPanelDiv\" class=\"panelBody\" ref=\"overviewPanelDiv\">\r\n\r\n      <div class=\"chartTooltip\">\r\n        <p>\r\n          <br /><strong class=\"name\"></strong>\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as d3 from 'd3'\r\nimport { onMounted, ref } from 'vue';\r\nimport filenames from \"@/utils/fileName\";\r\nimport domtoimage from 'dom-to-image';\r\nimport TestJson from \"@/assets/json/case2_fin.json\";\r\nimport TestRelJson from \"@/assets/json/case2_fin_rel.json\";\r\nimport tools from \"@/utils/tools.js\";\r\nimport { color } from 'd3';\r\n\r\nexport default {\r\n  props: [\"videoTime\"],\r\n  data() {\r\n    return {\r\n      data: TestJson,\r\n      relData: TestRelJson,\r\n      fatherMap: {},\r\n      treeData: [],\r\n      nameTextIds: [],\r\n      textG: '',\r\n      colorMap: {},\r\n      rootColorMap: {},\r\n      margin: { top: 15, right: 5, bottom: 5, left: 5 },\r\n      // mcolor: [\r\n      //   \"rgb(255,60,60)\",\r\n      //   \"rgb(155,20,100)\",\r\n      //   \"rgb(255,83,255)\",\r\n      //   \"rgb(200,100,50)\",\r\n      //   \"rgb(235,135,162)\",\r\n      //   \"rgb(200,200,102)\",\r\n      //   \"rgb(255,178,101)\",\r\n      //   \"rgb(63,151,134)\",\r\n      //   \"rgb(83,155,255)\",\r\n      //   \"rgb(50,200,120)\",\r\n      //   \"rgb(2,50,200)\",\r\n      //   \"rgb(0,122,244)\",\r\n      //   \"rgb(150,122,244)\",\r\n      //   \"rgb(168,168,255)\",\r\n      //   \"rgb(200,200,200)\",\r\n      // ],\r\n      mcolor: [\r\n        \"rgb(91, 107, 255)\",\r\n        \"rgb(6, 214, 160)\",\r\n        \"rgb(255, 120, 90)\",\r\n        \"rgb(125, 98, 211)\",\r\n        \"rgb(255, 113, 212)\",\r\n        \"rgb(112, 214, 255)\",\r\n        \"rgb(255, 159, 28)\",\r\n        \"rgb(255, 77, 109)\",\r\n      ],\r\n      mLightcolor: [\r\n        \"#ff9c9c\",\r\n        \"#cc88b0\",\r\n        \"#ffa8ff\",\r\n        \"#e3b097\",\r\n        \"#f4c3d0\",\r\n        \"#f4f4d0\",\r\n        \"#ffd8b1\",\r\n        \"#9ecac2\",\r\n        \"#a8ccff\",\r\n        \"#97e3ba\",\r\n        \"#6f8be0\",\r\n        \"rgb(0,122,244)\",\r\n        \"#b6a2f7\",\r\n        \"rgb(168,168,255)\",\r\n        \"rgb(200,200,200)\",\r\n      ],\r\n    };\r\n  },\r\n  watch: {\r\n    type(val) {\r\n    },\r\n    treeData(val) {\r\n      this.drawoverView();\r\n    },\r\n    nameTextIds(ids) {\r\n      const _this = this;\r\n      let data = _this.data;\r\n      let tx = 10;\r\n      let ty = 40;\r\n      let colorMap = this.colorMap;\r\n      _this.textPathG.select(\"g\").remove();\r\n      let g = _this.textPathG.append(\"g\");\r\n      for (let i = ids.length - 1; i >= 0; i--) {\r\n        let curd = data.find(function (d) { return d['id'] == ids[i]; });\r\n        let name = curd['name'].split(\"_\")[0];\r\n        let w = name.length * 10;\r\n        let h = 20;\r\n        let rx = 5;\r\n        let ry = 5;\r\n        let color = colorMap[ids[i]];\r\n        _this.drawRect(g, tx, ty - 18, w, h, rx, ry, color, 0.5, color)\r\n        _this.drawTxt(g, tx, ty, name, \"rgb(60,60,60)\", 0, \"start\", 18);\r\n        tx += name.length * 20;\r\n        if (tx > 100) {\r\n          tx = 10;\r\n          ty += 30;\r\n        }\r\n      }\r\n    },\r\n    data(val) {\r\n    }\r\n  },\r\n  methods: {\r\n    click_Ent(time) {\r\n      this.$emit(\"timeDur\", time);\r\n    },\r\n    drawoverView() {\r\n      const _this = this;\r\n      const margin = _this.margin;\r\n      let data = _this.treeData;\r\n      let width = this.$refs.overviewPanelDiv.offsetWidth - margin.left - margin.right;\r\n      let height = this.$refs.overviewPanelDiv.offsetHeight - margin.top - margin.bottom;\r\n\r\n      // var tree = d3.tree()\r\n      //   .size([width, height - 200]);\r\n      d3.select(\"#overviewPanelDiv\").select(\"svg\").remove();\r\n      var svg = d3.select(\"#overviewPanelDiv\").append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let sunTreeG = svg.append('g')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let riverG = svg.append('g')\r\n        .attr(\"width\", width + 20)\r\n        .attr(\"height\", height)\r\n        .attr(\"transform\", \"translate(35,600)\");\r\n      let textG = svg.append('g')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let textPathG = svg.append('g')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n      let toolTipG = svg.append('g')\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n\r\n      _this.textG = textG;\r\n      _this.textPathG = textPathG;\r\n\r\n      let centerX = margin.left + (width / 2);\r\n      let centerY = margin.top + (height / 2) - 100;\r\n      const gCircle = svg.append(\"g\")\r\n      // .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n      let curD = tools.deepClone(data);\r\n      // console.log(data,curD)\r\n      // curD['layout'] = '-1';\r\n\r\n      let layout = -1;\r\n      let totalDur = 0\r\n      for (let c in data['children']) {\r\n        if (data['children'][c]['name'] != 'Test') {\r\n          totalDur += data['children'][c]['totalDuration'];\r\n        }\r\n      }\r\n      _this.drawSunTree(sunTreeG, centerX, centerY, curD, layout, totalDur, 0, Math.PI * 2, 0, \"\", \"root\");\r\n      _this.drawTypeRiver(riverG);\r\n    },\r\n    drawTypeRiver(svg) {\r\n      const _this = this;\r\n      let oriData = _this.data;\r\n      let resData = [];\r\n      let triLi = [];\r\n      let exeLi = [];\r\n      var defs = svg.append(\"defs\");\r\n\r\n      var filter = defs\r\n        .append(\"filter\")\r\n        .attr(\"id\", \"coolShadow\")\r\n        .attr(\"x\", \"-100%\")\r\n        .attr(\"y\", \"-100%\") //\r\n        .attr(\"width\", \"300%\")\r\n        .attr(\"height\", \"300%\"); //\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceGraphic\")\r\n        .attr(\"result\", \"upperLayer\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feMorphology\")\r\n        .attr(\"in\", \"SourceAlpha\")\r\n        .attr(\"result\", \"enlargedAlpha\")\r\n        .attr(\"operator\", \"dilate\")\r\n        .attr(\"radius\", \"0.2 0.2\");\r\n\r\n      filter\r\n        .append(\"feGaussianBlur\")\r\n        .attr(\"in\", \"enlargedAlpha\")\r\n        .attr(\"result\", \"bluredAlpha\")\r\n        .attr(\"stdDeviation\", \"3\");\r\n\r\n      filter\r\n        .append(\"feOffset\")\r\n        .attr(\"in\", \"bluredAlpha\")\r\n        .attr(\"result\", \"lowerLayer\")\r\n        .attr(\"dy\", \"1\"); //\r\n\r\n      var feMerge = filter.append(\"feMerge\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"lowerLayer\");\r\n      feMerge.append(\"feMergeNode\").attr(\"in\", \"upperLayer\");\r\n      for (let i = 0; i < oriData.length; i++) {\r\n        let curEnt = oriData[i];\r\n        let tp = {}\r\n        tp['od'] = i;\r\n        if ((curEnt['type'] == \"1\")) {\r\n          triLi.push(tp);\r\n        }\r\n        if (curEnt['type'] == \"2\") {\r\n          exeLi.push(tp);\r\n        }\r\n        let typeData = curEnt[\"attribute\"][\"expressions\"];\r\n        let totalDur = 0;\r\n\r\n        for (let t in typeData) {\r\n          // let color = typeColor[i];\r\n          let typeDurition = typeData[t];\r\n          let totalTypeSeconds = 0;\r\n          for (let d in typeDurition) {\r\n            totalTypeSeconds += (tools.time2seconds(typeDurition[d][1]) - tools.time2seconds(typeDurition[d][0]))\r\n          }\r\n          totalDur += totalTypeSeconds;\r\n          tp[t] = totalTypeSeconds;\r\n        }\r\n        for (let t in tp) {\r\n          if (t != 'od') {\r\n            tp[t] /= totalDur;\r\n            if (totalDur == 0) {\r\n              tp[t] = 0;\r\n            }\r\n          }\r\n        }\r\n        resData.push(tp)\r\n      }\r\n\r\n      let data = resData;\r\n      console.log(data)\r\n      var stack = d3.stack()\r\n        .keys(['1', '2', '3'])\r\n        .order(d3.stackOrderInsideOut)\r\n        .offset(d3.stackOffsetWiggle);\r\n\r\n      let yRangeWidth = 80;\r\n      let xStep = (svg.attr(\"width\") - 80) / oriData.length;\r\n      let yScale = d3.scaleLinear().domain([-1, 1]).range([0, 80]);\r\n      var area = d3.area()\r\n        .curve(d3.curveBasis)\r\n        .x(function (d) {\r\n          return d.data.od * xStep;\r\n        })\r\n        .y0(function (d) {\r\n          return yRangeWidth - yScale(d[0]);\r\n        })\r\n        .y1(function (d) {\r\n          return yRangeWidth - yScale(d[1]);\r\n        });\r\n      console.log(data)\r\n      let stackData = stack(data)\r\n      console.log(data, stackData)\r\n      let lenThreshold = 0.4;\r\n      let iconLi = {}\r\n      for (let s in stackData) {\r\n        iconLi[s] = []\r\n        for (let i in stackData[s]) {\r\n          let lenArea = stackData[s][i]\r\n          if ((lenArea[1] - lenArea[0]) > 0.4) {\r\n            iconLi[s].push([i, lenArea]);\r\n          }\r\n          for (let li in iconLi[s]) {\r\n            if (i < (iconLi[s][li][0] + 2)) {\r\n              let selectArea = iconLi[s][li][1]\r\n              if (((selectArea[1] - lenArea[1]) - (selectArea[0] - lenArea[0])) < 0.2) {\r\n                iconLi[s].splice(s, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // let areaG = svg.append(\"g\")\r\n      let typeColor = {\r\n        \"1\": \"#ff9c9c\",\r\n        \"2\": \"#f4f4d0\",\r\n        \"3\": \"#6f8be0\",\r\n      };\r\n      let colorLi = _this.mcolor;\r\n      svg.selectAll(\"path\")\r\n        .data(stackData)\r\n        .join(\"path\")\r\n        .attr(\"id\",function(d){return d.key})\r\n        .attr(\"class\",\"river\")\r\n        .attr(\"d\", function (d) {\r\n          return area(d)\r\n        })\r\n        .attr(\"fill\", function (d, i) {\r\n          return typeColor[d.key]\r\n        })\r\n        .on(\"mouseover\",function(d){\r\n          d3.selectAll(\".river\").style(\"filter\", \"url()\")\r\n          d3.select(this).style(\"filter\", \"url(#coolShadow)\")\r\n        })\r\n\r\n      for (let t in triLi) {\r\n        let area = tools.calcTriangle((triLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\");\r\n        _this.drawTxt(svg, (triLi[t]['od']) * xStep, -23, \"T\", \"white\", 0, \"middle\", 18)\r\n      }\r\n      for (let t in exeLi) {\r\n        let area = tools.calcTriangle((exeLi[t]['od']) * xStep, -30, 14);\r\n        _this.drawTriangle(svg, \"rgb(250, 199, 88)\", area, \"rgb(250, 199, 88)\");\r\n        _this.drawTxt(svg, (exeLi[t]['od']) * xStep, -23, \"E\", \"white\", 0, \"middle\", 18)\r\n      }\r\n    },\r\n    drawTriangle(svg, color, points, stroke, opacity = 1) {\r\n      svg.append(\"polygon\")\r\n        .attr(\"points\", points)\r\n        .attr(\"fill\", color)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", \"5px\");\r\n    },\r\n    drawSunTree(svg, x, y, data, layout, totalDur, startAngle, endAngle, startHeight, curcolor, father) {\r\n      const _this = this;\r\n      var curStartR = tools.deepClone(startAngle);//Math.PI/4;\r\n      let colorList = this.mcolor;\r\n      let stepLayHight = 100;\r\n      if (layout == '-1') {\r\n        stepLayHight = 400;\r\n      }\r\n      if (layout == '0') {\r\n        stepLayHight = 80;\r\n      }\r\n      if (layout == '1') {\r\n        stepLayHight = 30;\r\n      }\r\n      if (layout == '2') {\r\n        stepLayHight = 30;\r\n      }\r\n      let endHeight = startHeight + stepLayHight;\r\n      // console.log(endHeight,layout,stepLayHight)\r\n      let Color_linear = d3.scaleLinear().domain([0, totalDur]).range([0, 1]);\r\n      let Compute_color = d3.interpolate(\"white\", curcolor);\r\n      let perDur = 0;\r\n      let curArcScale_linear = d3.scaleLinear([0, totalDur], [startAngle, endAngle]);\r\n      let curHeightScale_linear = d3.scaleLinear([0, Math.sqrt(totalDur)], [startHeight * 1.2, endHeight]);\r\n      for (let c in data['children']) {\r\n        _this.fatherMap[data['children'][c]['id']] = father;\r\n        if ((data['children'][c]['name'] != 'Test') || (data['children'][c]['layout'] != '0')) {\r\n          let curTotalDur = data['children'][c]['totalDuration'];\r\n          let endAnglet = curArcScale_linear(perDur + curTotalDur);\r\n          perDur += curTotalDur\r\n          var dataset = { startAngle: curStartR + 0.05, endAngle: endAnglet - 0.05 };\r\n          let h = ((curHeightScale_linear((Math.sqrt(curTotalDur)))))\r\n          var arcPath = d3.arc()\r\n            .innerRadius(startHeight + 20)\r\n            .outerRadius(h)\r\n          var pathArc = arcPath(dataset);\r\n          let color = \"\";\r\n          if (layout == -1) {\r\n            color = _this.rootColorMap[data['children'][c]['id']];//colorList[c];\r\n          }\r\n          else { color = Compute_color(Color_linear(curTotalDur)) }\r\n          _this.colorMap[data['children'][c]['id']] = color;\r\n          _this.drawArc(svg, x, y, pathArc, color, color, 'cur_' + data['children'][c]['id'], '0', 10);\r\n          _this.drawSunTree(svg, x, y, data['children'][c], layout + 1, curTotalDur, dataset.startAngle, dataset.endAngle, curHeightScale_linear(Math.sqrt(curTotalDur)), color, data['children'][c]['id']);\r\n\r\n          if ((parseInt(layout) < 1)) {\r\n            let name = data['children'][c]['name'];\r\n\r\n            let names = name.split(\" \")\r\n            let nameLen = names.length;\r\n            let anchor = \"end\"\r\n            let stepR = (endAnglet - curStartR) / (nameLen + 1);\r\n            let colorV = tools.getRgbValue(color)\r\n            let textColor = 'white';\r\n            let textStartR = curStartR;\r\n            let v = 0;\r\n            for (let i in colorV) {\r\n              v += parseInt(colorV[i]);\r\n            }\r\n            if (v > 620) {\r\n              textColor = 'grey';\r\n            }\r\n            if ((parseInt(layout) == -1) && ((endAnglet - curStartR) > (Math.PI / 5))) {\r\n              if ((endAnglet - curStartR) > (Math.PI / 4)) {\r\n                stepR = Math.PI / 20;\r\n                textStartR = (endAnglet + curStartR) / 2 - (nameLen) / 2 * stepR;\r\n              }\r\n              for (let n = 0; n < nameLen; n++) {\r\n                let nn = n;\r\n                let arcScale = d3.scaleLinear().domain([0, Math.PI * 2]).range([0, 360]);\r\n                if (arcScale(curStartR) > 180) {\r\n                  nn = nameLen - n - 1;\r\n                }\r\n                let midR = textStartR + stepR * (nn + 1);\r\n\r\n                let roat = arcScale(midR);\r\n                roat -= 90;\r\n                if (roat > 90) {\r\n                  roat += 180;\r\n                  anchor = \"start\"\r\n                }\r\n                // h = (h + startHeight) / 2 + 10;\r\n                let tx = x + h * Math.sin(midR);\r\n                let ty = y - h * Math.cos(midR);\r\n                _this.drawTxt(_this.textG, tx, ty, names[n], textColor, roat, anchor)\r\n\r\n              }\r\n            }\r\n\r\n            else if ((parseInt(layout) == 0) && ((endAnglet - curStartR) > (Math.PI / 15)) && (nameLen < 4) && (name.length < 10)) {\r\n              let steph = (h - startHeight - 20) / nameLen;\r\n              anchor = \"middle\"\r\n              for (let n = 0; n < nameLen; n++) {\r\n                let nn = n;\r\n                let arcScale = d3.scaleLinear().domain([0, Math.PI * 2]).range([0, 360]);\r\n                // if(arcScale(curStartR)>180){\r\n                //   nn = nameLen - n-1;\r\n                // }\r\n                let midR = (endAnglet + curStartR) / 2;\r\n\r\n                let roat = arcScale(midR);\r\n                // roat -= 90;\r\n                // if(roat>90){\r\n                //   roat+=180;\r\n                //   anchor = \"start\"\r\n                // }\r\n                h = h - 10 - 1 * n;//(h + startHeight) / 2 + 10;\r\n                let tx = x + h * Math.sin(midR);\r\n                let ty = y - h * Math.cos(midR);\r\n                _this.drawTxt(_this.textG, tx, ty, names[n], textColor, roat, anchor)\r\n\r\n              }\r\n            }\r\n            else if (parseInt(layout) == 1) {\r\n              let midR = (endAnglet + curStartR) / 2;\r\n\r\n              let arcScale = d3.scaleLinear().domain([0, Math.PI * 2]).range([0, 360]);\r\n              let roat = arcScale(midR)\r\n              if (layout == '-1') {\r\n                roat += 90;\r\n              }\r\n              h = (h + startHeight) / 2 + 10;\r\n              let tx = x + h * Math.sin(midR);\r\n              let ty = y - h * Math.cos(midR);\r\n              // if (layout != '-1') {\r\n              //   for(let w = 0;w<names.length;w++){\r\n              //     h-=(w+1)*1;\r\n              //     tx = x + h * Math.sin(midR);\r\n              //     ty = y - h * Math.cos(midR);\r\n              //     _this.drawTxt(_this.textG, tx,ty , names[w], textColor, roat,\"middle\")\r\n\r\n              //     }\r\n              // }\r\n              // else{\r\n              _this.drawTxt(_this.textG, tx, ty, data['children'][c]['name'], textColor, roat, \"middle\")\r\n              // }\r\n            }\r\n          }\r\n\r\n          curStartR = endAnglet;\r\n        }\r\n      }\r\n    },\r\n    drawRect(svg, x, y, w, h, rx, ry, fill, opacity, stroke) {\r\n      svg.append(\"rect\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"rx\", rx)\r\n        .attr(\"ry\", ry)\r\n        .attr(\"height\", h)\r\n        .attr(\"width\", w)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"opacity\", opacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", \"1.5px\");\r\n    },\r\n    drawTxt(svg, tx, ty, txts, fill, roat, anchor, fontsize = 14) {\r\n      svg.append(\"text\")\r\n        .attr(\"y\", ty)\r\n        .attr(\"x\", tx)\r\n        .attr(\"fill\", fill)\r\n        .attr(\"font-size\", fontsize)\r\n        .text(txts)\r\n        .style(\"text-anchor\", anchor)//\"middle\")\r\n        .attr(\"transform\", `rotate(${roat} ${tx} ${ty})`);\r\n    },\r\n    drawArc(svg, x, y, arcPath, stroke, fill, className, stroke_dasharray = \"0\", width = 3) {\r\n      const _this = this;\r\n      svg.append(\"path\")\r\n        .attr(\"d\", arcPath)\r\n        .attr(\"class\", className)\r\n        .attr(\"transform\", \"translate(\" + x + \",\" + y + \")\")\r\n        .attr(\"stroke\", stroke)\r\n        .attr('stroke-width', width)\r\n        .attr(\"opacity\", 1)\r\n        .attr(\"stroke-dasharray\", stroke_dasharray)\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"fill\", fill)\r\n        .on(\"mousemove\", function (d) {\r\n          let transformd = d3.select(this).attr(\"transform\")\r\n          let id = d3.select(this).attr(\"class\").split(\"_\")[1];\r\n          let curEnt = _this.data.find(function (d) { return d['id'] == id })\r\n\r\n\r\n          d3.select(this)\r\n            .attr(\"transform\", function (d) {\r\n              return transformd.split(\" \")[0] + \" scale(1.04)\"\r\n            })\r\n          // var transform = d3.event;\r\n          var yPosition = d.clientY + 20;\r\n          var xPosition = d.clientX + 20;\r\n          var chartTooltip = d3\r\n            .select(\".chartTooltip\")\r\n            .style(\"left\", xPosition + \"px\")\r\n            .style(\"top\", yPosition + \"px\");\r\n          // 更新浮层内容\r\n          chartTooltip.select(\".name\").text(curEnt['name']);\r\n          // 移除浮层hidden样式，展示浮层\r\n          chartTooltip.classed(\"hidden\", false);\r\n          let textId = tools.deepClone(id);\r\n          if (_this.nameTextIds.indexOf(textId) == -1) {\r\n            while (textId != 'root') {\r\n              _this.nameTextIds.push(textId);\r\n              textId = _this.fatherMap[textId];\r\n            }\r\n          }\r\n        })\r\n        .on(\"mouseleave\", function (d) {\r\n          _this.nameTextIds = [];\r\n          let transformd = d3.select(this).attr(\"transform\")\r\n          d3.select(this)\r\n            .attr(\"transform\", function (d) {\r\n              return transformd.split(\" \")[0] + \" scale(1)\"\r\n            })\r\n          d3.select(\".chartTooltip\").classed(\"hidden\", true);\r\n        })\r\n    },\r\n  },\r\n  created() {\r\n\r\n\r\n\r\n    const _this = this;\r\n\r\n    this.$nextTick(() => {\r\n      _this.drawoverView();\r\n    });\r\n  },\r\n  mounted() {\r\n    const _this = this\r\n\r\n    this.$bus.$on('graphData', (val) => {\r\n      // console.log(val)\r\n      _this.data = val;\r\n    });\r\n\r\n    this.$bus.$on('treeData', (val) => {\r\n      console.log(val)\r\n      _this.treeData = val[0];\r\n      _this.rootColorMap = val[1];\r\n      // _this.drawoverView();\r\n    });\r\n\r\n\r\n  },\r\n  // beforeDestroy() {\r\n  //   clearInterval(this.moveTimer);\r\n  // },\r\n} \r\n</script>\r\n\r\n<style>\r\n@import './index.css';\r\n</style>\r\n"]}]}